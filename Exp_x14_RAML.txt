#%RAML 0.8

title: REST API
baseUri: http://<external_address>/api
version: v1

documentation:
- content: |-
    Welcome to the Expressway REST API documentation. The Expressway REST API is compliant with the [RAML](raml.org/spec.html) spec version 0,8. Although the API is fully compliant, it does not support nested APIs
  title: Introduction
- content: |-
    All request and response schemas on the Expressway REST API use [JSON Schema](json-schema.org/documentation.html) version 4. Request parameters are NOT supported and only JSON schemas are used.
  title: Schemas
- content: |-
    The API is only accesable via HTTPS and requires authentication. The authentication credentials are the administrator credentials on the Expressway node.
  title: Authentication
/provisioning/acme/providers: &id022
  GET:
    body: {}
    description: Returns a list of all the ACME Providers configured.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"AcmeProviders": {"items": {"Default": {"description": "Defines if this is the default ACME provider for this Expressway.", "enum": ["True", "False"], "type": "string"}, "Email": {"description": "Email address that will be used to receive notifications relating to changes to the provider's terms of service, and notifications about the impending expiry of a certificate.", "maxLength": 2048, "minLength": 0, "type": "string"}, "Name": {"description": "The name of the ACME provider.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TermsOfServiceState": {"description": "The state of the user's acceptance of the Provider's Terms of Service. The Terms of Service must be Accepted before a Provider can be used to sign a certificate", "enum": ["Accepted", "RequiresAcceptance"], "type": "string"}, "TermsOfServiceUrl": {"description": "The URL of the provider's current Terms of Service.", "maxLength": 2048, "minLength": 0, "type": "string"}, "Url": {"description": "URL for the ACME Provider's online directory.", "maxLength": 2048, "minLength": 7, "type": "string"}, "Uuid": {"description": "Unique ID for the ACME Provider.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "array"}, "Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: GET the list of configured ACME Providers. A Provider is an entity that supports the ACME protocol and can sign a certificate when given a valid CSR.
/provisioning/acme/providers/<uuid>: &id023
  GET:
    body: {}
    description: Returns a single ACME Provider specified by the UUID. A UUID of 'default' can be used to fetch the default Provider.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Default": {"description": "Defines if this is the default ACME provider for this Expressway.", "enum": ["True", "False"], "type": "string"}, "Email": {"description": "Email address that will be used to receive notifications relating to changes to the provider's terms of service, and notifications about the impending expiry of a certificate.", "maxLength": 2048, "minLength": 0, "type": "string"}, "Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "Name": {"description": "The name of the ACME provider.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TermsOfServiceState": {"description": "The state of the user's acceptance of the Provider's Terms of Service. The Terms of Service must be Accepted before a Provider can be used to sign a certificate", "enum": ["Accepted", "RequiresAcceptance"], "type": "string"}, "TermsOfServiceUrl": {"description": "The URL of the provider's current Terms of Service.", "maxLength": 2048, "minLength": 0, "type": "string"}, "Url": {"description": "URL for the ACME Provider's online directory.", "maxLength": 2048, "minLength": 7, "type": "string"}, "Uuid": {"description": "Unique ID for the ACME Provider.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Email": {"description": "The Email address to register with this Provider. The Email is used to receive notifications relating to changes in the Provider's terms of service and when certificates are close to expiry", "maxLength": 2048, "minLength": 3, "type": "string"}, "Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "TermsOfServiceState": {"default": "", "description": "Declares that the user accepts the Provider's Terms of Service which is available from the TermsOfServiceUrl field. The Terms of Service must be Accepted before a Provider can be used to sign a certificate", "enum": ["Accepted", ""], "type": "string"}}, "type": ["object"]}
    description: Updates the Email address and Terms of Services state of a provider. Before a Provider can be used to sign a certificate, it must have a vaild Email address configured, and the Terms of Service must have been accepted.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: GET, PUT of an individual ACME Provider. A Provider is an entity that supports the ACME protocol and can sign a certificate when given a valid CSR.
/provisioning/certs/acme/pendingcert: &id024
  DELETE:
    body: {}
    description: Deletes the pending certificate from the staging area.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Returns the pending certificate in PEM format, along with information on the validity of the certificate with respect to the Certificate Authorities installed in the trust store.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"CertValid": {"description": "Specifies if the Pending certificate is valid with respect to the CAs in the trust store.", "enum": ["True", "False"], "type": "string"}, "CertValidationError": {"description": "The reason why the Pending certifcate is deemed invalid. This field is blank when the certificate is valid.", "maxLength": 4096, "minLength": 0, "type": "string"}, "Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "PemFile": {"description": "The PEM encoded Pending certificate file that was signed by the ACME provider chosen in the ACME Settings", "maxLength": 4096, "minLength": 0, "type": "string"}}, "type": ["object"]}
  POST:
    body: {}
    description: Initiates an ACME Signing request of the currently active CSR. If successful, the new certificate is stored in a staging area. It can be deployed by POSTing to /certs/acme/pendingcert/deploy API.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: GET, POST, DELETE of the Pending certificate resource. A Pending certificate is a certificate that has been signed by an ACME Provider. 'POST' will initiate a signing request, storing the certificate in the staging area. 'GET' returns the PEM encoded Pending certificate from the staging area. 'DELETE' removes the Pending certificate from the staging area. A new Pending certificate cannot be signed if one already exists in the staging area. Each certificate (Server or Domain) has its own staging area.
/provisioning/certs/acme/pendingcert/deploy: &id025
  POST:
    body: {}
    description: Deploys the ACME certificate from the staging area to the Expressway. The services that use the new certificate will dynamically reload the new certificate without service interruption
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: POST of the Deploy Pending certificate resource. A Pending certificate is a certificate that has been signed by an ACME Provider, that is waiting in the staging area. 'POST' will deploy the Pending certificate from the staging area to the Expressway. The Deploy is hitless and does not require a restart. The apprioprate services will dynamically reload the new certificate without service interruption.
/provisioning/certs/acme/settings: &id026
  GET:
    body: {}
    description: Returns the ACME Settings for either the Server certificate or an SNI Domain certificate.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"AcmeManaged": {"description": "Enables/Disables the ACME service and defines if the service should automatically manage certificate renewal or allow the user to. In Manual mode, the user must call the Sign and Deploy API. In Automated mode, the certificates will be automatically fetched and deployed hitlessly in the specified renewal schedule.", "enum": ["Automated", "Manual", "Disabled"], "type": "string"}, "Message": {"description": "Success/Failure/Info message for the operation.", "type": "string"}, "ProviderUuid": {"description": "The UUID of the desired ACME provider. The UUID can be found via the Providers API. If left blank, the defult provider is used.", "maxLength": 40, "minLength": 0, "type": "string"}, "RenewKey": {"description": "Specifies how private keys should be managed when ACME is set to either Automated or Manual.When set to 'Retain', the private key is not changed when a new certificate is signed by the ACME Provider. When set to 'Rotate', a new private key is generated each time a new certificate is signed by the ACME Provider. ", "enum": ["Retain", "Rotate", ""], "type": "string"}, "RenewalSchedule": {"additionalProperties": false, "description": "The parameter is only used in Automated mode. This speficies the recurring time of the week when new signed certificates are automatically deployed. This deploy is hitless, services reload the new certificate without being restarted. e.g. '{'DaysOfWeek': ['Sun', 'Wed'], 'TimeOfDay: '23:59'}'", "properties": {"DaysOfWeek": {"items": {"description": "Days of the week truncated to 3 characters", "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], "type": "string"}, "type": "array"}, "TimeOfDay": {"description": "Time of day in HH:MM format. ", "maxLength": 5, "minLength": 5, "type": "string"}}, "type": "object"}}, "type": "object"}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcmeManaged": {"description": "Enables/Disables the ACME service and defines if the service should automatically manage certificate renewal or allow the user to. In Manual mode, the user must call the Sign and Deploy API. In Automated mode, the certificates will be automatically fetched and deployed hitlessly in the specified renewal schedule.", "enum": ["Automated", "Manual", "Disabled"], "type": "string"}, "ProviderUuid": {"description": "The UUID of the desired ACME provider. The UUID can be found via the Providers API. If left blank, the defult provider is used.", "maxLength": 40, "minLength": 0, "type": "string"}, "RenewKey": {"description": "Specifies how private keys should be managed when ACME is set to either Automated or Manual.When set to 'Retain', the private key is not changed when a new certificate is signed by the ACME Provider. When set to 'Rotate', a new private key is generated each time a new certificate is signed by the ACME Provider. ", "enum": ["Retain", "Rotate", ""], "type": "string"}, "RenewalSchedule": {"additionalProperties": false, "description": "The parameter is only used in Automated mode. This speficies the recurring time of the week when new signed certificates are automatically deployed. This deploy is hitless, services reload the new certificate without being restarted. e.g. '{'DaysOfWeek': ['Sun', 'Wed'], 'TimeOfDay: '23:59'}'", "properties": {"DaysOfWeek": {"items": {"description": "Days of the week truncated to 3 characters", "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], "type": "string"}, "type": "array"}, "TimeOfDay": {"description": "Time of day in HH:MM format. ", "maxLength": 5, "minLength": 5, "type": "string"}}, "type": "object"}}, "required": ["AcmeManaged"], "type": "object"}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcmeManaged": {"description": "Enables/Disables the ACME service and defines if the service should automatically manage certificate renewal or allow the user to. In Manual mode, the user must call the Sign and Deploy API. In Automated mode, the certificates will be automatically fetched and deployed hitlessly in the specified renewal schedule.", "enum": ["Automated", "Manual", "Disabled"], "type": "string"}, "ProviderUuid": {"description": "The UUID of the desired ACME provider. The UUID can be found via the Providers API. If left blank, the defult provider is used.", "maxLength": 40, "minLength": 0, "type": "string"}, "RenewKey": {"description": "Specifies how private keys should be managed when ACME is set to either Automated or Manual.When set to 'Retain', the private key is not changed when a new certificate is signed by the ACME Provider. When set to 'Rotate', a new private key is generated each time a new certificate is signed by the ACME Provider. ", "enum": ["Retain", "Rotate", ""], "type": "string"}, "RenewalSchedule": {"additionalProperties": false, "description": "The parameter is only used in Automated mode. This speficies the recurring time of the week when new signed certificates are automatically deployed. This deploy is hitless, services reload the new certificate without being restarted. e.g. '{'DaysOfWeek': ['Sun', 'Wed'], 'TimeOfDay: '23:59'}'", "properties": {"DaysOfWeek": {"items": {"description": "Days of the week truncated to 3 characters", "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], "type": "string"}, "type": "array"}, "TimeOfDay": {"description": "Time of day in HH:MM format. ", "maxLength": 5, "minLength": 5, "type": "string"}}, "type": "object"}}, "required": ["AcmeManaged"], "type": "object"}
    description: Updates the ACME Settings for either the Server certificate or an SNI Domain certificate. To use a particular Provider, it must have a vaild Email address configured, and the Terms of Service must have been accepted.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: GET, POST of ACME Settings. ACME Settings are used to configure the ACME feature on Expressway-E. There can be an ACME Settings entry for each certificate, the Server certificate or SNI Domain certificates.
/provisioning/certs/generate_csr: &id027
  DELETE:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Converts the result from _read() to a RawString if it is not an error result
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Additional_FQDNS": {"items": {"description": "Additional freeform hostnames included in the certificate.", "type": "string"}, "type": "array"}, "CommonName": {"description": "The commonName field in the subject of the signing request.", "type": "string"}, "Country": {"description": "The two-letter ISO code for the country where your organization is located.", "pattern": "^[a-zA-Z]{2}$", "type": "string"}, "DigestAlgorithm": {"default": "sha256", "description": "The Digest algorithm used for the signature. \t\t\t\t\tDefault: SHA-256", "enum": ["sha256", "sha384", "sha512"], "type": "string"}, "Email": {"description": "The email address to include in the certificate.", "type": "string"}, "HsmKey": {"default": "false", "description": "Generate private key and CSR using the HSM.", "enum": ["true", "false"], "type": "string"}, "KeyLength": {"default": 4096, "description": "The number of bits used for public and private key encryption. \t\t\t\t\tDefault: 4096", "enum": [2048, 4096], "type": "integer"}, "Locality": {"description": "The town or city where your organization is located.", "type": "string"}, "Organization": {"description": "The name of the organization or business.", "type": "string"}, "OrganizationalUnit": {"description": "The department name or organizational unit handling the certificate.", "type": "string"}, "Province": {"description": "The province, region, county, or state where your organization is located.", "type": "string"}, "SubjectAlternativeNames": {"description": "Additional SAN hostnames included in the signing request.", "items": {"description": "SAN hostname included in the signing request.", "type": "string"}, "type": "array"}}, "required": ["Country", "Province", "Locality", "Organization"], "type": ["object"]}
    description: Rename the Additional_FQDNS to SubjectAlternativeNames and add a blank CommonName field. These are required for the domain API schema that is reused here
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Create, read, and delete a certificate signing request. Update operation is not allowed for CSRs.
/provisioning/certs/hsmkey: &id028
  GET:
    body: {}
    description: Converts the result from _read() to a RawString if it is not an error result
  description: Read private key being used by the VCS if the private key is a dummy private key generated by the HSM and HSM settings are configured. Else return error.
/provisioning/certs/root: &id029
  DELETE:
    body: {}
    description: Reset the Root CA to default
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Get the root certificate from the default path
  POST:
    body:
      multipart/form-data:
        file:
          description: File to upload
          required: 'true'
          type: file
    description: Write the root certificate to the default path The request body contains the root CA data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Root Certificate Resource
/provisioning/certs/server: &id030
  DELETE:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Converts the result from _read() to a RawString if it is not an error result
  POST:
    body:
      multipart/form-data:
        file:
          description: File to upload
          required: 'true'
          type: file
    description: The request body contains the server certificate data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Create, read, and delete certificate information. There is no separate update operation, create is also used to update.
/provisioning/common/adminaccount/changepassword: &id031
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"ConfirmPassword": {"description": "Enter the password of this administrator account.", "maximum": 1024, "minimum": 1, "type": "string"}, "Name": {"description": "Enter the username of this administrator account. Administrator accounts enable                      people or external systems to access this system. This field is case sensitive", "maximum": 128, "minimum": 0, "type": "string"}, "Password": {"description": "Enter the password of this administrator account.", "maximum": 1024, "minimum": 1, "type": "string"}, "YourCurrentPassword": {"description": "Enter your current password to authorize this change.", "maximum": 1024, "minimum": 1, "type": "string"}}, "required": ["Name", "Password", "ConfirmPassword", "YourCurrentPassword"]}
    description: Change admin account Password
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: PUSH, GET or PUT onto localdatabase for authentication
/provisioning/common/adminaccount/configuration: &id001
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AccessLevel": {"default": "Read-Write", "description": "The access level of the administrator account", "enum": ["Read-Write", "Read-Only", "Auditor"], "type": "string"}, "ApiAccess": {"default": "Yes", "description": "Determines whether this account is allowed to access the systems status and                         configuration using the Application Programming Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CliAccess": {"default": "No", "description": "Determines whether this account is allowed to log in to the system status and                         configuration using the Command Line Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "EmergencyAccount": {"default": "No", "description": "Select Yes to make this the emergency account. This special local account can log                     in to the VCS even when Administrator authentication source is set to Remote only", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Enter the username of this administrator account. Administrator accounts enable                      people or external systems to access this system. This field is case sensitive", "maximum": 128, "minimum": 0, "type": "string"}, "State": {"default": "Enabled", "description": "Disable the account if required. When you disable an account,                         all access is denied to that account. ", "enum": ["Enabled", "Disabled"], "type": "string"}, "WebAccess": {"default": "Yes", "description": "Determines whether this account is allowed to log in to the system using the web interface", "pattern": "^(?i)(yes|no)$", "type": "string"}}, "required": ["Name"]}
    description: Delete admin account details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Fetch admin account details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AccessLevel": {"default": "Read-Write", "description": "The access level of the administrator account", "enum": ["Read-Write", "Read-Only", "Auditor"], "type": "string"}, "ApiAccess": {"default": "Yes", "description": "Determines whether this account is allowed to access the systems status and                         configuration using the Application Programming Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CliAccess": {"default": "No", "description": "Determines whether this account is allowed to log in to the system status and                         configuration using the Command Line Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "EmergencyAccount": {"default": "No", "description": "Select Yes to make this the emergency account. This special local account can log                     in to the VCS even when Administrator authentication source is set to Remote only", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Enter the username of this administrator account. Administrator accounts enable                      people or external systems to access this system. This field is case sensitive", "maximum": 128, "minimum": 0, "type": "string"}, "State": {"default": "Enabled", "description": "Disable the account if required. When you disable an account,                         all access is denied to that account. ", "enum": ["Enabled", "Disabled"], "type": "string"}, "WebAccess": {"default": "Yes", "description": "Determines whether this account is allowed to log in to the system using the web interface", "pattern": "^(?i)(yes|no)$", "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AccessLevel": {"default": "Read-Write", "description": "The access level of the administrator account", "enum": ["Read-Write", "Read-Only", "Auditor"], "type": "string"}, "ApiAccess": {"default": "Yes", "description": "Determines whether this account is allowed to access the systems status and                         configuration using the Application Programming Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CliAccess": {"default": "No", "description": "Determines whether this account is allowed to log in to the system status and                         configuration using the Command Line Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "ConfirmPassword": {"description": "Enter the password of this administrator account.", "maximum": 1024, "minimum": 1, "type": "string"}, "EmergencyAccount": {"default": "No", "description": "Select Yes to make this the emergency account. This special local account can log                     in to the VCS even when Administrator authentication source is set to Remote only", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Enter the username of this administrator account. Administrator accounts enable                      people or external systems to access this system. This field is case sensitive", "maximum": 128, "minimum": 0, "type": "string"}, "Password": {"description": "Enter the password of this administrator account.", "maximum": 1024, "minimum": 1, "type": "string"}, "State": {"default": "Enabled", "description": "Disable the account if required. When you disable an account,                         all access is denied to that account. ", "enum": ["Enabled", "Disabled"], "type": "string"}, "WebAccess": {"default": "Yes", "description": "Determines whether this account is allowed to log in to the system using the web interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "YourCurrentPassword": {"description": "Enter your current password to authorize this change.", "maximum": 1024, "minimum": 1, "type": "string"}}, "required": ["Name", "Password", "ConfirmPassword", "YourCurrentPassword"]}
    description: Create a admin account configuration.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AccessLevel": {"default": "Read-Write", "description": "The access level of the administrator account", "enum": ["Read-Write", "Read-Only", "Auditor"], "type": "string"}, "ApiAccess": {"default": "Yes", "description": "Determines whether this account is allowed to access the systems status and                         configuration using the Application Programming Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CliAccess": {"default": "No", "description": "Determines whether this account is allowed to log in to the system status and                         configuration using the Command Line Interface", "pattern": "^(?i)(yes|no)$", "type": "string"}, "EmergencyAccount": {"default": "No", "description": "Select Yes to make this the emergency account. This special local account can log                     in to the VCS even when Administrator authentication source is set to Remote only", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Enter the username of this administrator account. Administrator accounts enable                      people or external systems to access this system. This field is case sensitive", "maximum": 128, "minimum": 0, "type": "string"}, "NewName": {"description": "Enter the new username of this administrator account. Administrator accounts enable                      people or external systems to access this system. This field is case sensitive", "maximum": 128, "minimum": 0, "type": "string"}, "State": {"default": "Enabled", "description": "Disable the account if required. When you disable an account,                         all access is denied to that account. ", "enum": ["Enabled", "Disabled"], "type": "string"}, "WebAccess": {"default": "Yes", "description": "Determines whether this account is allowed to log in to the system using the web interface", "pattern": "^(?i)(yes|no)$", "type": "string"}}, "required": ["Name"]}
    description: Update an admin account
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: PUSH, GET or PUT onto localdatabase for authentication
/provisioning/common/adminaccount/configuration/name/<name>: *id001
/provisioning/common/cdbrestapiaccess:
  GET:
    body: {}
    description: Read enable/disable status of CDB Rest API Access
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"status": {"description": "CDB Rest API Access enable status", "type": "string"}}, "type": ["object"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"status": {"description": "Disable/Enable CDB Rest API Access", "enum": ["Enabled", "Disabled"], "type": "string"}}, "required": ["status"], "type": ["object"]}
    description: Create CDB Rest API Enable/Disable Status using GET, POST method
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"status": {"description": "Disable/Enable CDB Rest API Access", "enum": ["Enabled", "Disabled"], "type": "string"}}, "required": ["status"], "type": ["object"]}
    description: Update CDB Rest API Enable/Disable Status
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Disable / Enable CDB Rest API Access
/provisioning/common/cluster: &id032
  GET:
    body: {}
    description: Read expressway cluster configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"ClusterAddressMappingEnabled": {"default": "Off", "description": "Enable cluster address mapping if the Expressway cannot access DNS, or if the DNS lookup would result in clustering on the public IP address. When you enable this mapping, you can control how the peers FQDNs resolve, so that you can create the cluster using private IP addresses.", "enum": ["Off", "On"], "type": "string"}, "ClusterIpVersion": {"default": "IPv4", "description": "IP protocol for peers clustering communication. IPV4 or IPV6 are supported", "enum": ["IPv4", "IPv6"], "type": "string"}, "ClusterName": {"description": "The fully qualified domain name (FQDN) used in SRV records that address this Expressway cluster for example cluster1.example.com. The FQDN can comprise multiple levels. Each level name can only contain letters, digits and hyphens, with each level separated by a period (dot). A level name cannot start or end with a hyphen, and the final level name must start with a letter.", "maxLength": 255, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "Permissive", "description": "Permissive does not verify certificates when establishing connections between peers.This option is less secure and raises a persistent alarm.Enforce mode will force peers to verify each others certificates.Peers with mismatched or invalid certificates cannot cluster in this mode.", "enum": ["Permissive", "Enforce"], "type": "string"}}, "type": "object"}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"ClusterAddressMappingEnabled": {"default": "Off", "description": "Enable cluster address mapping if the Expressway cannot access DNS, or if the DNS lookup would result in clustering on the public IP address. When you enable this mapping, you can control how the peers FQDNs resolve, so that you can create the cluster using private IP addresses.", "enum": ["Off", "On"], "type": "string"}, "ClusterIpVersion": {"default": "IPv4", "description": "IP protocol for peers clustering communication. IPV4 or IPV6 are supported", "enum": ["IPv4", "IPv6"], "type": "string"}, "ClusterName": {"description": "The fully qualified domain name (FQDN) used in SRV records that address this Expressway cluster for example cluster1.example.com. The FQDN can comprise multiple levels. Each level name can only contain letters, digits and hyphens, with each level separated by a period (dot). A level name cannot start or end with a hyphen, and the final level name must start with a letter.", "maxLength": 255, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "Permissive", "description": "Permissive does not verify certificates when establishing connections between peers.This option is less secure and raises a persistent alarm.Enforce mode will force peers to verify each others certificates.Peers with mismatched or invalid certificates cannot cluster in this mode.", "enum": ["Permissive", "Enforce"], "type": "string"}}, "type": "object"}
    description: Update expressway cluster configuration.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"ClusterAddressMappingEnabled": {"default": "Off", "description": "Enable cluster address mapping if the Expressway cannot access DNS, or if the DNS lookup would result in clustering on the public IP address. When you enable this mapping, you can control how the peers FQDNs resolve, so that you can create the cluster using private IP addresses.", "enum": ["Off", "On"], "type": "string"}, "ClusterIpVersion": {"default": "IPv4", "description": "IP protocol for peers clustering communication. IPV4 or IPV6 are supported", "enum": ["IPv4", "IPv6"], "type": "string"}, "ClusterName": {"description": "The fully qualified domain name (FQDN) used in SRV records that address this Expressway cluster for example cluster1.example.com. The FQDN can comprise multiple levels. Each level name can only contain letters, digits and hyphens, with each level separated by a period (dot). A level name cannot start or end with a hyphen, and the final level name must start with a letter.", "maxLength": 255, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "Permissive", "description": "Permissive does not verify certificates when establishing connections between peers.This option is less secure and raises a persistent alarm.Enforce mode will force peers to verify each others certificates.Peers with mismatched or invalid certificates cannot cluster in this mode.", "enum": ["Permissive", "Enforce"], "type": "string"}}, "type": "object"}
  description: Update and Get expressway cluster configuration
/provisioning/common/cluster/addressmaps: &id002
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Index": {"description": "index of cluster address mapping list. index value starts from 0 ", "maximum": 6, "minimum": 1, "type": "integer"}}, "required": ["Index"], "type": ["object"]}
    description: Delete expressway cluster Address Mapper
  GET:
    body: {}
    description: Read expressway cluster Mapping
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"HostName": {"description": "Cluster peer FQDN.", "type": "string"}, "Index": {"description": "index of cluster address mapping list. index value starts from 1 ", "maximum": 6, "minimum": 1, "type": "integer"}, "IpAddress": {"description": "Cluster peer IP address .", "type": "string"}}, "required": ["Index", "IpAddress", "HostName"], "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"HostName": {"description": "Cluster peer FQDN.", "type": "string"}, "Index": {"description": "index of cluster address mapping list. index value starts from 1 ", "maximum": 6, "minimum": 1, "type": "integer"}, "IpAddress": {"description": "Cluster peer IP address .", "type": "string"}}, "required": ["Index", "IpAddress", "HostName"], "type": ["object"]}
    description: Update expressway cluster AddressMapper.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"HostName": {"description": "Cluster peer FQDN.", "type": "string"}, "Index": {"description": "index of cluster address mapping list. index value starts from 1 ", "maximum": 6, "minimum": 1, "type": "integer"}, "IpAddress": {"description": "Cluster peer IP address .", "type": "string"}}, "required": ["Index", "IpAddress", "HostName"], "type": ["array"]}
  description: Update and Get expressway cluster AddressMapping
/provisioning/common/cluster/addressmaps/index/<index>: *id002
/provisioning/common/cluster/peers: &id003
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Index": {"description": "index of cluster address mapping list. index value starts from 0 ", "maximum": 6, "minimum": 1, "type": "integer"}}, "required": ["Index"], "type": ["object"]}
    description: Delete expressway cluster Peer configuration
  GET:
    body: {}
    description: Read expressway cluster Peer
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Index": {"description": "index of peer list. max value is 6 and starts from 1", "maximum": 6, "minimum": 1, "type": "integer"}, "PeerAddress": {"description": "Cluster peer IP address or FQDN.", "type": "string"}}, "required": ["Index", "PeerAddress"], "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Index": {"description": "index of peer list. max value is 6 and starts from 1", "maximum": 6, "minimum": 1, "type": "integer"}, "PeerAddress": {"description": "Cluster peer IP address or FQDN.", "type": "string"}}, "required": ["Index", "PeerAddress"], "type": ["object"]}
    description: Update expressway cluster Peer configuration.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Index": {"description": "index of peer list. max value is 6 and starts from 1", "maximum": 6, "minimum": 1, "type": "integer"}, "PeerAddress": {"description": "Cluster peer IP address or FQDN.", "type": "string"}}, "required": ["Index", "PeerAddress"], "type": ["array"]}
  description: Update and Get expressway cluster Peer
/provisioning/common/cluster/peers/index/<index>: *id003
/provisioning/common/cluster/primary: &id004
  GET:
    body: {}
    description: Read expressway primary
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Index": {"description": " Specified index from peer list  becomes Primary Node of Cluster ", "maximum": 6, "minimum": 1, "type": "integer"}}, "type": "object"}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Index": {"description": " Specified index from peer list  becomes Primary Node of Cluster ", "maximum": 6, "minimum": 1, "type": "integer"}}, "required": ["Index"], "type": "object"}
    description: Update expressway cluster AddressMapper.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Index": {"description": " Specified index from peer list  becomes Primary Node of Cluster ", "maximum": 6, "minimum": 1, "type": "integer"}}, "type": "object"}
  description: Configure and Get expressway cluster Primary Node
/provisioning/common/cluster/primary/index/<index>: *id004
/provisioning/common/cluster/status: &id033
  GET:
    body: {}
    description: Read expressway cluster configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "properties": {"AddressMappers": {"items": {"properties": {"HostName": {"description": "Cluster peer FQDN.", "type": "string"}, "Index": {"description": "index of cluster address mapping list. index value starts from 1 ", "maximum": 6, "minimum": 1, "type": "integer"}, "IpAddress": {"description": "Cluster peer IP address .", "type": "string"}}, "type": "object"}, "type": "array"}, "ClusterAddressMappingEnabled": {"default": "Off", "description": "Enable cluster address mapping if the Expressway cannot access DNS, or if the DNS lookup would result in clustering on the public IP address. When you enable this mapping, you can control how the peers FQDNs resolve, so that you can create the cluster using private IP addresses.", "enum": ["Off", "On"], "type": "string"}, "ClusterIpVersion": {"default": "IPv4", "description": "IP protocol for peers clustering communication. IPV4 or IPV6 are supported", "enum": ["IPv4", "IPv6"], "type": "string"}, "ClusterName": {"description": "The fully qualified domain name (FQDN) used in SRV records that address this Expressway cluster for example cluster1.example.com. The FQDN can comprise multiple levels. Each level name can only contain letters, digits and hyphens, with each level separated by a period (dot). A level name cannot start or end with a hyphen, and the final level name must start with a letter.", "maxLength": 255, "minLength": 1, "type": "string"}, "Peers": {"items": {"properties": {"Index": {"description": "index of peer list. max value is 6 and starts from 1", "maximum": 6, "minimum": 1, "type": "integer"}, "PeerAddress": {"description": "Cluster peer IP address or FQDN.", "type": "string"}}, "type": "object"}, "type": "array"}, "Status": {"description": "Cluster Status", "enum": ["Active", "InActive"], "type": "string"}, "TlsVerify": {"default": "Permissive", "description": "Permissive does not verify certificates when establishing connections between peers.This option is less secure and raises a persistent alarm.Enforce mode will force peers to verify each others certificates.Peers with mismatched or invalid certificates cannot cluster in this mode.", "enum": ["Permissive", "Enforce"], "type": "string"}}, "type": ["object"]}
  description: Get expressway cluster configuration and Status information
/provisioning/common/credential: &id034
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "The name of the credential to be deleted", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["Name"], "type": ["object"]}
    description: Delete a credential
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read locally authenticated names of nieghbours
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Name": {"description": "The name required for entry in the local authentication database.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "The name required for entry in the local authentication database.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Password": {"description": "The password required for this entry in the local authentication database.The maximum plaintext length is 128 characters, which will then be encrypted.", "maxLength": 128, "minLength": 1, "type": "string"}}, "required": ["Name", "Password"]}
    description: Add's new credential
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "The name required for entry in the local authentication database.", "maxLength": 1024, "minLength": 1, "type": "string"}, "NewName": {"description": "Change the existing credential name to another name.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Password": {"description": "The password required for this entry in the local authentication database.The maximum plaintext length is 128 characters, which will then be encrypted.", "maxLength": 128, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: update either name , password or both for existing credential
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: PUSH, GET or PUT credentials onto localdatabase for authentication
/provisioning/common/current/active/firewallrules: &id035
  GET:
    body: {}
    description: Gets the Active Firewall Rules present
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Action": {"description": "The action to take against any IP traffic that matches the rule.", "enum": ["Allow", "Reject", "Deny"], "type": "string"}, "Address": {"description": "Determine the IP addresses to which the rule applies.", "maximum": 1024, "minimum": 1, "type": "string"}, "DeletePending": {"type": "string"}, "Description": {"description": "An optional free-form description of the firewall rule", "maximum": 255, "minimum": 0, "type": "string"}, "EndPort": {"description": "The upper port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Interface": {"default": "LAN1", "description": "The LAN interface on which you want to control access", "type": "string"}, "PrefixLength": {"description": "The field determine the range of IP addresses to which the rule applies", "maximum": 128, "minimum": 0, "type": "integer"}, "Priority": {"description": "The order in which the firewall rules are applied.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Service": {"description": "The service to which the rule applies, or choose Custom                         to specify your own transport type and port ranges.", "enum": ["Custom", "HTTP", "HTTPS", "SSH admin", "SSH tunnels", "SNMP", "XMPP"], "type": "string"}, "StartPort": {"description": "The lower port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Transport": {"description": "The transport protocol to which the rule applies", "enum": ["UDP", "TCP", "ICMP"], "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: GET Active Firewall Rules
/provisioning/common/defaultlinks: &id036
  POST:
    body: {}
    description: Perform DefaultLinksAdd operation which checks for the system created defaultlinks and returns status ok otherwise creates defaultlinks if they are deleted and returns its status.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: check/create DefaultLinks
/provisioning/common/diagnosticlogging: &id037
  GET:
    body: {}
    description: Return current diagnostic logging status
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"DownLoadStatus": {"description": "Displays whether the diagnostic file is available for download", "enum": ["Collection in progress", "Ready to download", "Not Available"], "type": "string"}, "LogEndTime": {"description": "Displays when the diagnostic logging was stopped. Not displayed when logging is runningFormat YYYY-MM-DD HH:MM:SS", "type": "string"}, "LogInitiator": {"description": "Displays who initiated the last diagnostic logging ", "type": "string"}, "LogStartTime": {"description": "Displays when the diagnostic logging was last startedFormat YYYY-MM-DD HH:MM:SS", "type": "string"}, "LoggingStatus": {"description": "Displays whether diagnostic logging is running", "enum": ["New Server. Diagnostic logging was never started", "Not Running", "Running"], "type": "string"}, "TCPDump": {"description": "Displays whether tcpdump is checked ", "enum": ["On", "Off"], "type": "string"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"FilterByAddress": {"description": "IP address or FQDN to filter tcpdump by", "maxLength": 1024, "minLength": 0, "type": "string"}, "FilterByPorts": {"description": "A maximum of 5 ports separated by commas to filter tcpdump by", "maxLength": 35, "minLength": 0, "type": "string"}, "Marker": {"description": "Adds a marker string to the log so that it can be tracked from the logging snapshot fileThis will only work if Mode is also set as AddMarker.", "maxLength": 120, "minLength": 1, "type": "string"}, "Mode": {"description": "Perform diagnostic logging operations.Start, Stop, AddMarker, Collect, Download Operations.", "pattern": "^(?i)(start|stop|addmarker|collect|download)$", "type": "string"}, "TCPDump": {"description": "Enable packet captures while starting diagnostic logging. ", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["Mode"]}
    description: Start/Stop/Mark/Collect/Download Diagnostic Logging
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilitates updation and read of diagnostic logging using API RAML url /provisioning/common/diagnosticlogging with GET,PUT Methods
/provisioning/common/dns/dns: &id038
  GET:
    body: {}
    description: Reads the DNS data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"DNSRequestsPortRange": {"default": "EphemeralPortRange", "description": "Determines whether outgoing DNS queries use the system's normal ephemeral port range, or a custom port range that you can configure.", "enum": ["EphemeralPortRange", "CustomPortRange"], "type": "string"}, "DNSRequestsPortRangeEnd": {"default": 65534, "description": "The upper source port in the range used for sending DNS queries. Requests choose a random port from this range.Warning: setting a small source port range increases your vulnerability to DNS spoofing attacks.", "maximum": 65535, "minimum": 1024, "type": "integer"}, "DNSRequestsPortRangeStart": {"default": 1024, "description": "The lower source port in the range used for sending DNS queries. Requests choose a random port from this range. Warning: setting a small source port range increases your vulnerability to DNS spoofing attacks.", "maximum": 65535, "minimum": 1024, "type": "integer"}, "DomainName": {"description": "The name to be appended to an unqualified host name before querying the DNS server.Used when attempting to resolve unqualified domain names for NTP, LDAP, external manager and remote syslog servers. May also be used along with the local System host name to identify references to this system in SIP messaging.", "maxLength": 255, "minLength": 0, "type": "string"}, "SearchDomains": {"description": "Space separated list of extra domain names to be searched when querying the DNS server.Used when attempting to resolve unqualified domain names for NTP, LDAP, external manager and remote syslog servers. May also be used along with the local System host name to identify references to this system in SIP messaging.", "maxLength": 255, "minLength": 0, "type": "string"}, "SystemHostName": {"description": "Defines the DNS hostname that this system is known by. Note that this is not the fully-qualified domain name, just the host label portion. The name can only contain letters, digits, hyphens and underscores. The first character must be a letter and the last character must be a letter or a digit.", "maxLength": 63, "minLength": 0, "type": "string"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"DNSRequestsPortRange": {"default": "EphemeralPortRange", "description": "Determines whether outgoing DNS queries use the system's normal ephemeral port range, or a custom port range that you can configure.", "enum": ["EphemeralPortRange", "CustomPortRange"], "type": "string"}, "DNSRequestsPortRangeEnd": {"default": 65534, "description": "The upper source port in the range used for sending DNS queries. Requests choose a random port from this range.Warning: setting a small source port range increases your vulnerability to DNS spoofing attacks.", "maximum": 65535, "minimum": 1024, "type": "integer"}, "DNSRequestsPortRangeStart": {"default": 1024, "description": "The lower source port in the range used for sending DNS queries. Requests choose a random port from this range. Warning: setting a small source port range increases your vulnerability to DNS spoofing attacks.", "maximum": 65535, "minimum": 1024, "type": "integer"}, "DomainName": {"description": "The name to be appended to an unqualified host name before querying the DNS server.Used when attempting to resolve unqualified domain names for NTP, LDAP, external manager and remote syslog servers. May also be used along with the local System host name to identify references to this system in SIP messaging.", "maxLength": 255, "minLength": 0, "type": "string"}, "SearchDomains": {"description": "Space separated list of extra domain names to be searched when querying the DNS server.Used when attempting to resolve unqualified domain names for NTP, LDAP, external manager and remote syslog servers. May also be used along with the local System host name to identify references to this system in SIP messaging.", "maxLength": 255, "minLength": 0, "type": "string"}, "SystemHostName": {"description": "Defines the DNS hostname that this system is known by. Note that this is not the fully-qualified domain name, just the host label portion. The name can only contain letters, digits, hyphens and underscores. The first character must be a letter and the last character must be a letter or a digit.", "maxLength": 63, "minLength": 0, "type": "string"}}}
    description: Update the DNS Data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: facilitates updation and read of DNS
/provisioning/common/dns/dnsperdomainserver: &id005
  DELETE:
    body:
      application/json:
        schema: |-
          {"properties": {"index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}}
    description: Delete the DNS per domain server server provided in input data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: READ the per domain dns server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"PerDomainDNSServer": {"items": {"properties": {"address": {"description": "The IP address of the DNS server to use only when resolving hostnames for the associated Domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "domain1": {"description": "The domain names to be resolved by this particular DNS server. You can specify either 1 or 2 domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "domain2": {"description": "The domain names to be resolved by this particular DNS server. You can specify either 1 or 2 domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}, "type": "object"}, "maxItems": 5, "minItems": 1, "type": "array"}}}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"PerDomainDNSServer": {"properties": {"address": {"description": "The IP address of the DNS server to use only when resolving hostnames for the associated Domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "domain1": {"description": "The domain names to be resolved by this particular DNS server. You can specify either 1 or 2 domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "domain2": {"description": "The domain names to be resolved by this particular DNS server. You can specify either 1 or 2 domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}, "type": "object"}}}
    description: UPDATE the per domain dns server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"PerDomainDNSServer": {"properties": {"address": {"description": "The IP address of the DNS server to use only when resolving hostnames for the associated Domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "domain1": {"description": "The domain names to be resolved by this particular DNS server. You can specify either 1 or 2 domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "domain2": {"description": "The domain names to be resolved by this particular DNS server. You can specify either 1 or 2 domain names.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}, "type": "object"}}}
    description: UPDATE the per domain dns server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Per Domain DND server configuration class
/provisioning/common/dns/dnsperdomainserver/index/<index>: *id005
/provisioning/common/dns/dnsserver: &id006
  DELETE:
    body:
      application/json:
        schema: |-
          {"index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}
    description: Delete the DNS server provided
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read the dns server data from CDB
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"DefaultDNSServers": {"items": {"properties": {"address": {"description": "The IP address of a default DNS server to use when resolving domain names. You can specify up to 5 servers. The API will update/create one server at one time. This default DNS servers are used if there is no Per-domain DNS server defined for the domain being looked up.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}, "type": "object"}, "maxItems": 5, "minItems": 1, "type": "array"}}}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"DefaultDNSServers": {"properties": {"address": {"description": "The IP address of a default DNS server to use when resolving domain names. You can specify up to 5 servers. The API will update/create one server at one time. This default DNS servers are used if there is no Per-domain DNS server defined for the domain being looked up.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}, "required": ["address", "index"], "type": "object"}}}
    description: Create the per domain dns server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"DefaultDNSServers": {"properties": {"address": {"description": "The IP address of a default DNS server to use when resolving domain names. You can specify up to 5 servers. The API will update/create one server at one time. This default DNS servers are used if there is no Per-domain DNS server defined for the domain being looked up.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"Description": "Index is a priority parameter for the DNS server", "maximum": 5, "minimum": 1, "type": "integer"}}, "required": ["address", "index"], "type": "object"}}}
    description: Update the DNS server data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: DNS Server configuration class
/provisioning/common/dns/dnsserver/index/<index>: *id006
/provisioning/common/domain: &id007
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "Name of the domain to be deleted", "maxLength": 1024, "minLength": 1, "type": "string"}}}
    description: Delete the domain
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read the domain and its other related information
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"EdgeSip": {"description": "Endpoint registration, call control and provisioning for this SIP domain is serviced by                             Cisco Unified Communications Manager. The Expressway acts as a Cisco Unified Communications                             Manager gateway to provide secure firewall traversal and line-side support for Cisco Unified                             Communications Manager registrations.", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "EdgeXmpp": {"description": "Instant messaging and presence services for this SIP domain are provided by                             Cisco Unified Communications Manager IM and Presence Service", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "Index": {"description": "The Index value of the Domain", "maximum": 200, "minimum": 0, "type": "integer"}, "Name": {"description": "The name of the domain managed by this Expressway. You must configure which services are                         supported for this domain. The domain name can comprise multiple levels. Each level's name                         can only contain letters, digits and hyphens, with each level separated by a period (dot).                         A level name cannot start or end with a hyphen, and the final level name must start with a                         letter. An example valid domain name is 100.example-name.com.                         Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "Sip": {"description": "Indicates if the Expressway is authoritative for this SIP domain. The Expressway acts as a                             SIP registrar and Presence Server for the domain, and accepts registration requests for any                             SIP endpoints attempting to register with an alias that includes this domain..", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "XmppFederation": {"description": "Indicates that XMPP federated services will be provided for this local domain                             Note that if static routes for federated foreign domains are required,                             these are configured on Expressway-E", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"EdgeSip": {"description": "Endpoint registration, call control and provisioning for this SIP domain is serviced by                             Cisco Unified Communications Manager. The Expressway acts as a Cisco Unified Communications                             Manager gateway to provide secure firewall traversal and line-side support for Cisco Unified                             Communications Manager registrations.", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "EdgeXmpp": {"description": "Instant messaging and presence services for this SIP domain are provided by                             Cisco Unified Communications Manager IM and Presence Service", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "Name": {"description": "The name of the domain managed by this Expressway. You must configure which services are                         supported for this domain. The domain name can comprise multiple levels. Each level's name                         can only contain letters, digits and hyphens, with each level separated by a period (dot).                         A level name cannot start or end with a hyphen, and the final level name must start with a                         letter. An example valid domain name is 100.example-name.com.                         Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "Sip": {"description": "Indicates if the Expressway is authoritative for this SIP domain. The Expressway acts as a                             SIP registrar and Presence Server for the domain, and accepts registration requests for any                             SIP endpoints attempting to register with an alias that includes this domain..", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "XmppFederation": {"description": "Indicates that XMPP federated services will be provided for this local domain                             Note that if static routes for federated foreign domains are required,                             these are configured on Expressway-E", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}}, "required": ["Name"]}
    description: Add domain
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"EdgeSip": {"description": "Endpoint registration, call control and provisioning for this SIP domain is serviced by                             Cisco Unified Communications Manager. The Expressway acts as a Cisco Unified Communications                             Manager gateway to provide secure firewall traversal and line-side support for Cisco Unified                             Communications Manager registrations.", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "EdgeXmpp": {"description": "Instant messaging and presence services for this SIP domain are provided by                             Cisco Unified Communications Manager IM and Presence Service", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "Name": {"description": "The name of the domain managed by this Expressway. You must configure which services are                         supported for this domain. The domain name can comprise multiple levels. Each level's name                         can only contain letters, digits and hyphens, with each level separated by a period (dot).                         A level name cannot start or end with a hyphen, and the final level name must start with a                         letter. An example valid domain name is 100.example-name.com.                         Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "NewName": {"description": "The name of the new domain. You must configure which services are supported for this domain. \t\t\t\t\t\tThe domain name can comprise multiple levels. Each level's name can only contain letters, digits and hyphens, \t\t\t\t\t\twith each level separated by a period (dot). A level name cannot start or end with a hyphen, and the final \t\t\t\t\t\tlevel name must start with a letter. An example valid domain name is 100.example-name.com. \t\t\t\t\t\tRange: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "Sip": {"description": "Indicates if the Expressway is authoritative for this SIP domain. The Expressway acts as a                             SIP registrar and Presence Server for the domain, and accepts registration requests for any                             SIP endpoints attempting to register with an alias that includes this domain..", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}, "XmppFederation": {"description": "Indicates that XMPP federated services will be provided for this local domain                             Note that if static routes for federated foreign domains are required,                             these are configured on Expressway-E", "pattern": "^([Oo]{1})([Nn]{1}|[Ff]{2})$", "type": "string"}}, "required": ["Name"], "type": ["object"]}
    description: Update the domain
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: PUSH, GET or PUT DOMAIN configuration
/provisioning/common/domain/name/<name>: *id007
/provisioning/common/fail2ban/configuration: &id039
  GET:
    body: {}
    description: Fetches the fail2banjail details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"BanDuration": {"default": 600, "description": "The length of time (in seconds) for which the intruder's host address will be blocked after it exceeds the blocking threshold for this category.", "maximum": 1000000, "minimum": 10, "type": "integer"}, "Enabled": {"default": "Off", "description": "Determines whether this protection category is enabled.", "pattern": "^(?i)(on|off)$", "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}, "ScanPeriod": {"default": 600, "description": "Used in conjunction with the Trigger level to determine if an intruder has exceeded the blocking threshold.", "maximum": 1000000, "minimum": 10, "type": "integer"}, "TriggerLevel": {"default": 5, "description": "Used in conjunction with the Detection window to determine if an intruder has exceeded the blocking threshold.", "maximum": 1024, "minimum": 1, "type": "integer"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"BanDuration": {"default": 600, "description": "The length of time (in seconds) for which the intruder's host address will be blocked after it exceeds the blocking threshold for this category.", "maximum": 1000000, "minimum": 10, "type": "integer"}, "Enabled": {"default": "Off", "description": "Determines whether this protection category is enabled.", "pattern": "^(?i)(on|off)$", "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}, "ScanPeriod": {"default": 600, "description": "Used in conjunction with the Trigger level to determine if an intruder has exceeded the blocking threshold.", "maximum": 1000000, "minimum": 10, "type": "integer"}, "TriggerLevel": {"default": 5, "description": "Used in conjunction with the Detection window to determine if an intruder has exceeded the blocking threshold.", "maximum": 1024, "minimum": 1, "type": "integer"}}, "required": ["Jail"], "type": ["object"]}
    description: Updates fail2banjail configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of fail2banjail
/provisioning/common/fail2ban/exemptions: &id040
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Address": {"description": "IP address that should be exempted.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}, "PrefixLength": {"default": 32, "description": "The number of bits of the IP address which must match for an IP address to belong in this subnet.", "type": "integer"}}, "required": ["Address", "Jail"], "type": ["object"]}
    description: Creates fail2ban exemption
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Fetches the fail2ban exemption details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"Address": {"description": "IP address that should be exempted.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}, "PrefixLength": {"default": 32, "description": "The number of bits of the IP address which must match for an IP address to belong in this subnet.", "type": "integer"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Address": {"description": "IP address that should be exempted.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}, "PrefixLength": {"default": 32, "description": "The number of bits of the IP address which must match for an IP address to belong in this subnet.", "type": "integer"}}, "required": ["Address", "Jail", "PrefixLength"], "type": ["object"]}
    description: Creates fail2ban exemption
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Address": {"description": "IP address that should be exempted.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}, "PrefixLength": {"default": 32, "description": "The number of bits of the IP address which must match for an IP address to belong in this subnet.", "type": "integer"}}, "required": ["Address", "Jail", "PrefixLength"], "type": ["object"]}
    description: Updates fail2ban exemptions configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read, create, update and delete of configuration/fail2banglobalallowlist
/provisioning/common/fail2ban/fail2banbannedaddress: &id041
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Action": {"description": "Banning or unbanning an IP address.", "pattern": "^(?i)(ban|unban)$", "type": "string"}, "Address": {"description": "IP address that should be banned or unbanned.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "enum": ["External API authorization failure", "HTTP proxy authorization failure", "HTTP proxy protocol violation", "HTTP proxy resource access failure", "SIP authentication failure", "SIP protocol violation", "SIP registration failure", "SSH authorization failure", "SSH protocol violation", "SSH tunnels authorization failure", "SSH tunnels protocol violation", "Web interface authorization failure", "Web interface protocol violation", "XMPP protocol violation"], "type": "string"}}, "required": ["Address", "Action", "Jail"], "type": ["object"]}
    description: Invokes fail2ban command
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of fail2ban command
/provisioning/common/firewallrules/activation: &id042
  PUT:
    body: {}
    description: Activate firewall rules
  description: ACTIVATE FIREWALL RULE
/provisioning/common/firewallrules/configuration: &id008
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Index": {"description": "The Unique ID of the firewall rule", "type": "string"}}, "required": ["Index"]}
    description: Delete a firewall rule configuration.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Gets the Firewall Rules present
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Action": {"description": "The action to take against any IP traffic that matches the rule.", "enum": ["Allow", "Reject", "Deny"], "type": "string"}, "Address": {"description": "Determine the IP addresses to which the rule applies.", "maximum": 1024, "minimum": 1, "type": "string"}, "DeletePending": {"type": "string"}, "Description": {"description": "An optional free-form description of the firewall rule", "maximum": 255, "minimum": 0, "type": "string"}, "EndPort": {"description": "The upper port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Index": {"description": "The Unique ID of the firewall rule", "type": "string"}, "Interface": {"default": "LAN1", "description": "The LAN interface on which you want to control access", "type": "string"}, "PrefixLength": {"description": "The field determine the range of IP addresses to which the rule applies", "maximum": 128, "minimum": 0, "type": "integer"}, "Priority": {"description": "The order in which the firewall rules are applied.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Service": {"description": "The service to which the rule applies, or choose Custom                         to specify your own transport type and port ranges.", "enum": ["Custom", "HTTP", "HTTPS", "SSH admin", "SSH tunnels", "SNMP", "XMPP"], "type": "string"}, "StartPort": {"description": "The lower port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "State": {"type": "string"}, "Transport": {"description": "The transport protocol to which the rule applies", "enum": ["UDP", "TCP", "ICMP"], "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Action": {"description": "The action to take against any IP traffic that matches the rule.", "enum": ["Allow", "Reject", "Deny"], "type": "string"}, "Address": {"description": "Determine the IP addresses to which the rule applies.", "maximum": 1024, "minimum": 1, "type": "string"}, "DeletePending": {"type": "string"}, "Description": {"description": "An optional free-form description of the firewall rule", "maximum": 255, "minimum": 0, "type": "string"}, "EndPort": {"description": "The upper port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Interface": {"default": "LAN1", "description": "The LAN interface on which you want to control access", "type": "string"}, "PrefixLength": {"description": "The field determine the range of IP addresses to which the rule applies", "maximum": 128, "minimum": 0, "type": "integer"}, "Priority": {"description": "The order in which the firewall rules are applied.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Service": {"description": "The service to which the rule applies, or choose Custom                         to specify your own transport type and port ranges.", "enum": ["Custom", "HTTP", "HTTPS", "SSH admin", "SSH tunnels", "SNMP", "XMPP"], "type": "string"}, "StartPort": {"description": "The lower port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Transport": {"description": "The transport protocol to which the rule applies", "enum": ["UDP", "TCP", "ICMP"], "type": "string"}}, "required": ["Priority", "Address", "PrefixLength", "Service", "Action"]}
    description: Create a firewall rule configuration.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Action": {"description": "The action to take against any IP traffic that matches the rule.", "enum": ["Allow", "Reject", "Deny"], "type": "string"}, "Address": {"description": "Determine the IP addresses to which the rule applies.", "maximum": 1024, "minimum": 1, "type": "string"}, "DeletePending": {"type": "string"}, "Description": {"description": "An optional free-form description of the firewall rule", "maximum": 255, "minimum": 0, "type": "string"}, "EndPort": {"description": "The upper port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Index": {"description": "The Unique ID of the firewall rule", "type": "string"}, "Interface": {"default": "LAN1", "description": "The LAN interface on which you want to control access", "type": "string"}, "PrefixLength": {"description": "The field determine the range of IP addresses to which the rule applies", "maximum": 128, "minimum": 0, "type": "integer"}, "Priority": {"description": "The order in which the firewall rules are applied.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Service": {"description": "The service to which the rule applies, or choose Custom                         to specify your own transport type and port ranges.", "enum": ["Custom", "HTTP", "HTTPS", "SSH admin", "SSH tunnels", "SNMP", "XMPP"], "type": "string"}, "StartPort": {"description": "The lower port in the range to which the rule applies", "maximum": 65535, "minimum": 0, "type": "integer"}, "Transport": {"description": "The transport protocol to which the rule applies", "enum": ["UDP", "TCP", "ICMP"], "type": "string"}}, "required": ["Index"]}
    description: Update the Firewall Rules
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: PUSH, GET or PUT firewallrule onto localdatabase for authentication
/provisioning/common/firewallrules/configuration/index/<index>: *id008
/provisioning/common/logging/certificationlogging: &id043
  GET:
    body: {}
    description: Read the Certification Logging configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Mode": {"default": "Diagnostic", "description": "Controls certification-compliant logging for this VCS. The three modes are as follows: Diagnostic : Diagnostic mode is not certification-compliant, but is most useful for diagnosing call issues. This is the default value for certification logging. Secretive : Secretive mode is certification-compliant. SecretiveAndVerbose : SecretiveAndVerbose mode is also certification-compliant, but enables you to collect some log information using a secure connection to a syslog server. These logs are not particularly useful in the diagnostic sense.", "enum": ["Diagnostic", "Secretive", "SecretiveAndVerbose"], "type": "string"}}, "required": ["Mode"], "type": "object"}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Mode": {"default": "Diagnostic", "description": "Controls certification-compliant logging for this VCS. The three modes are as follows: Diagnostic : Diagnostic mode is not certification-compliant, but is most useful for diagnosing call issues. This is the default value for certification logging. Secretive : Secretive mode is certification-compliant. SecretiveAndVerbose : SecretiveAndVerbose mode is also certification-compliant, but enables you to collect some log information using a secure connection to a syslog server. These logs are not particularly useful in the diagnostic sense.", "enum": ["Diagnostic", "Secretive", "SecretiveAndVerbose"], "type": "string"}}, "required": ["Mode"], "type": "object"}
    description: Update Certification Logging Configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Mode": {"default": "Diagnostic", "description": "Controls certification-compliant logging for this VCS. The three modes are as follows: Diagnostic : Diagnostic mode is not certification-compliant, but is most useful for diagnosing call issues. This is the default value for certification logging. Secretive : Secretive mode is certification-compliant. SecretiveAndVerbose : SecretiveAndVerbose mode is also certification-compliant, but enables you to collect some log information using a secure connection to a syslog server. These logs are not particularly useful in the diagnostic sense.", "enum": ["Diagnostic", "Secretive", "SecretiveAndVerbose"], "type": "string"}}, "required": ["Mode"], "type": "object"}
  description: Update or Get the current Certification Logging configuration
/provisioning/common/logging/options: &id044
  GET:
    body: {}
    description: Fetches Expressway Logging Options details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"CDR": {"default": "Off", "description": "Select how to log Call Detail Records produced by this VCS.", "enum": ["Off", "ServiceOnly", "ServiceAndLogging"], "type": "string"}, "CertificationLogging": {"default": "Diagnostic", "description": "Controls certification-compliant logging for this VCS.", "enum": ["Diagnostic", "Secretive", "SecretiveAndVerbose"], "type": "string"}, "MediaStatistics": {"default": "Off", "description": "Toggles media statistics logging. Select On to start keeping statisticsfor each call (like packet counts, bitrates, codecs, and jitter).", "pattern": "^(?i)(on|off)$", "type": "string"}, "Verbosity": {"default": 1, "description": "Controls the granularity of event logging: 1 is the least verbose, 4 the most.", "maximum": 4, "minimum": 1, "type": "integer"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"CDR": {"default": "Off", "description": "Select how to log Call Detail Records produced by this VCS.", "enum": ["Off", "ServiceOnly", "ServiceAndLogging"], "type": "string"}, "CertificationLogging": {"default": "Diagnostic", "description": "Controls certification-compliant logging for this VCS.", "enum": ["Diagnostic", "Secretive", "SecretiveAndVerbose"], "type": "string"}, "MediaStatistics": {"default": "Off", "description": "Toggles media statistics logging. Select On to start keeping statisticsfor each call (like packet counts, bitrates, codecs, and jitter).", "pattern": "^(?i)(on|off)$", "type": "string"}, "Verbosity": {"default": 1, "description": "Controls the granularity of event logging: 1 is the least verbose, 4 the most.", "maximum": 4, "minimum": 1, "type": "integer"}}, "type": ["object"]}
    description: Update Expressway Logging Options configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update and Get Expressway Logging Options
/provisioning/common/logging/remotesyslogservers: &id045
  GET:
    body: {}
    description: Fetches Expressway Logging Remote Syslog Servers
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"Address": {"description": "Enter the IP address or Fully Qualified Domain Name (FQDN)of a remote syslog server.You can specify up to 4 remote syslog servers,with different protocols or log levels if required.", "type": "string"}, "FilterByKeywords": {"description": "Filter the log messages using a maximum of 5 keywords separated by commas.", "maxLength": 256, "minLength": 0, "type": "string"}, "FilterBySeverity": {"default": "Informational", "description": "Select the minimum severity of log messages to send to this syslog server.", "enum": ["Debug", "Informational", "Notice", "Warning", "Error", "Critical", "Alert", "Emergency"], "type": "string"}, "Index": {"description": "Index of address mapping list.", "maximum": 4, "minimum": 1, "type": "integer"}, "MessageFormat": {"default": "LegacyBSDFormat", "description": "The format in which remote syslog messages are written.", "enum": ["LegacyBSDFormat", "IETFSystemFormat"], "type": "string"}, "Port": {"default": 514, "description": "The UDP/TCP destination port to use.", "maximum": 65535, "minimum": 1, "type": "integer"}, "Transport": {"default": "TCP", "description": "Select the transport protocol to use whencommunicating with the syslog server.", "enum": ["UDP", "TCP", "TLS"], "type": "string"}, "type": ["object"]}, "type": ["array", "null"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"Address": {"description": "Enter the IP address or Fully Qualified Domain Name (FQDN)of a remote syslog server.You can specify up to 4 remote syslog servers,with different protocols or log levels if required.", "type": "string"}, "FilterByKeywords": {"description": "Filter the log messages using a maximum of 5 keywords separated by commas.", "maxLength": 256, "minLength": 0, "type": "string"}, "FilterBySeverity": {"default": "Informational", "description": "Select the minimum severity of log messages to send to this syslog server.", "enum": ["Debug", "Informational", "Notice", "Warning", "Error", "Critical", "Alert", "Emergency"], "type": "string"}, "Index": {"description": "Index of address mapping list.", "maximum": 4, "minimum": 1, "type": "integer"}, "MessageFormat": {"default": "LegacyBSDFormat", "description": "The format in which remote syslog messages are written.", "enum": ["LegacyBSDFormat", "IETFSystemFormat"], "type": "string"}, "Port": {"default": 514, "description": "The UDP/TCP destination port to use.", "maximum": 65535, "minimum": 1, "type": "integer"}, "Transport": {"default": "TCP", "description": "Select the transport protocol to use whencommunicating with the syslog server.", "enum": ["UDP", "TCP", "TLS"], "type": "string"}, "additionalProperties": false, "type": ["array"]}
    description: Update Expressway Logging Remote Syslog Servers configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update and Get Expressway Logging Remote Syslog Servers
/provisioning/common/logging/systemmetrics: &id046
  GET:
    body: {}
    description: Fetches Expressway Logging System Metrics details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"items": {"CollectionInterval": {"default": 60, "description": "Enter the number of seconds to waitbetween metrics collection events.", "maximum": 600, "minimum": 30, "type": "integer"}, "CollectionServerAddress": {"description": "Enter the address of the listening server.You may use IP address, hostname, or FQDN.", "type": "string"}, "CollectionServerPort": {"default": 25826, "description": "Enter the port on which the listening server is expecting system metrics traffic.", "maximum": 65535, "minimum": 1, "type": "integer"}, "SystemMetrics": {"default": "Off", "description": "Toggles the System Metrics Collection service.Select on to start collecting metrics for this VCS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "additionalProperties": false}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"CollectionInterval": {"default": 60, "description": "Enter the number of seconds to waitbetween metrics collection events.", "maximum": 600, "minimum": 30, "type": "integer"}, "CollectionServerAddress": {"description": "Enter the address of the listening server.You may use IP address, hostname, or FQDN.", "type": "string"}, "CollectionServerPort": {"default": 25826, "description": "Enter the port on which the listening server is expecting system metrics traffic.", "maximum": 65535, "minimum": 1, "type": "integer"}, "SystemMetrics": {"default": "Off", "description": "Toggles the System Metrics Collection service.Select on to start collecting metrics for this VCS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "additionalProperties": true, "required": ["SystemMetrics"], "type": ["object"]}
    description: Update Expressway Logging System Metrics configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update and Get Expressway Logging System Metrics
/provisioning/common/maintenancemode: &id047
  GET:
    body: {}
    description: Read the maintenance mode configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"maintenance_mode": {"default": "Off", "description": "Toggles maintenance mode which disallows new calls and registrations when on.", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["maintenance_mode"], "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"maintenance_mode": {"default": "Off", "description": "Toggles maintenance mode which disallows new calls and registrations when on.", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["maintenance_mode"], "type": ["object"]}
    description: Update maintenance mode configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update or Get the current maintenance mode configuration
/provisioning/common/mra: &id048
  GET:
    body: {}
    description: Read the MRA configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"AllowRedirectUri": {"description": "Allow Clients to send Redirect Uri for cross-launch", "pattern": "^(?i)(on|off)$", "type": "string"}, "Enabled": {"description": "Enable or disable Mobile and Remote Access (MRA). MRA allows endpoints such as Cisco Jabber to have their registration, call control, messaging and provisioning services provided by Cisco Unified Communications Manager when the endpoint is not within the enterprise network. The Expressway provides secure firewall traversal and line-side support for Unified CM registrations.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SSO": {"description": "Control SSO access", "pattern": "^(?i)(on|off|exclusive)$", "type": "string"}}, "required": ["Enabled"], "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AllowRedirectUri": {"description": "Allow Clients to send Redirect Uri for cross-launch", "pattern": "^(?i)(on|off)$", "type": "string"}, "Enabled": {"description": "Enable or disable Mobile and Remote Access (MRA). MRA allows endpoints such as Cisco Jabber to have their registration, call control, messaging and provisioning services provided by Cisco Unified Communications Manager when the endpoint is not within the enterprise network. The Expressway provides secure firewall traversal and line-side support for Unified CM registrations.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SSO": {"description": "Control SSO access", "pattern": "^(?i)(on|off|exclusive)$", "type": "string"}}, "required": ["Enabled"], "type": ["object"]}
    description: Update MRA configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update or Get the current MRA configuration
/provisioning/common/networkinterface/ethernet: &id049
  GET:
    body: {}
    description: Fetches ethernet details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"LAN": {"description": "It can have one of these values: LAN1, LAN2, LAN3.", "type": "string"}, "MacAddress": {"description": "MAC address of this system.", "type": "string"}, "Speed": {"description": "Speed of the Ethernet link between the system and the Ethernet switch.", "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: Facilities the read and update of ethernet
/provisioning/common/networkinterface/ip/LAN: &id050
  GET:
    body: {}
    description: Fetches LAN configuration details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"items": {"properties": {"IPV4Address": {"description": "The IPv4 address of the system's LAN port.The factory default value is 192.168.0.100 and should be changed during the commissioning process.", "type": "string"}, "IPV4SubnetMask": {"default": "255.255.255.0", "description": "The IPv4 subnet mask of the system's LAN port.", "type": "string"}, "IPV4SubnetRange": {"description": "IPv4 subnet range.", "type": "string"}, "IPV6Address": {"description": "The IPv6 address of the specified LAN port. It must be a static global IPv6 address. It cannot be a link-local or a stateless auto-configuration (SLAAC) IPv6 address. ", "type": "string"}, "LAN": {"description": "Specific LAN that is going to be configured.", "enum": ["LAN1", "LAN2", "LAN3"], "type": "string"}, "MTU": {"default": 1500, "description": "The maximum Ethernet packet size that can be sent over the network interface.", "maximum": 9216, "minimum": 576, "type": "integer"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"IPV4Address": {"description": "The IPv4 address of the system's LAN port.The factory default value is 192.168.0.100 and should be changed during the commissioning process.", "type": "string"}, "IPV4SubnetMask": {"default": "255.255.255.0", "description": "The IPv4 subnet mask of the system's LAN port.", "type": "string"}, "IPV6Address": {"description": "The IPv6 address of the specified LAN port. It must be a static global IPv6 address. It cannot be a link-local or a stateless auto-configuration (SLAAC) IPv6 address. ", "type": "string"}, "LAN": {"description": "Specific LAN that is going to be configured.", "enum": ["LAN1", "LAN2", "LAN3"], "type": "string"}, "MTU": {"default": 1500, "description": "The maximum Ethernet packet size that can be sent over the network interface.", "maximum": 9216, "minimum": 576, "type": "integer"}}, "required": ["LAN"], "type": ["object"]}
    description: Updates LAN configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of LAN configuration
/provisioning/common/networkinterface/ip/configuration: &id051
  GET:
    body: {}
    description: Fetches IP configuration details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"properties": {"IPProtocol": {"default": "IPv4", "description": "Selects whether the Expressway is operating in IPv4 only, IPv6 only, or dual stack mode. All IPv6 addresses configured on the Expressway are treated as having a /64 network prefix length.", "enum": ["IPv4", "IPv6", "Both"], "type": "string"}, "IPV4Gateway": {"description": "The IPv4 gateway used by the system. The factory default value is 127.0.0.1 and should be changed during the commissioning process.", "type": "string"}, "IPV6Gateway": {"description": "The IPv6 gateway used by the Expressway. It must be a static global IPv6 address. It cannot be a link-local or a stateless auto-configuration (SLAAC) IPv6 address. ", "type": "string"}, "UseDMI": {"default": "No", "description": "Enable/ Disable the third LAN port on the Expressway for Dedicated Management Interface (DMI). This allows a third IP address for the Expressway.If enabled, DMI uses LAN3 for management traffic.", "enum": ["No", "Yes"], "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"IPProtocol": {"default": "IPv4", "description": "Selects whether the Expressway is operating in IPv4 only, IPv6 only, or dual stack mode. All IPv6 addresses configured on the Expressway are treated as having a /64 network prefix length.", "enum": ["IPv4", "IPv6", "Both"], "type": "string"}, "IPV4Gateway": {"description": "The IPv4 gateway used by the system. The factory default value is 127.0.0.1 and should be changed during the commissioning process.", "type": "string"}, "IPV6Gateway": {"description": "The IPv6 gateway used by the Expressway. It must be a static global IPv6 address. It cannot be a link-local or a stateless auto-configuration (SLAAC) IPv6 address. ", "type": "string"}, "UseDMI": {"default": "No", "description": "Enable/ Disable the third LAN port on the Expressway for Dedicated Management Interface (DMI). This allows a third IP address for the Expressway.If enabled, DMI uses LAN3 for management traffic.", "enum": ["No", "Yes"], "type": "string"}}, "required": ["IPProtocol"], "type": ["object"]}
    description: Updates IP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of IP configuration
/provisioning/common/networkinterface/staticroutes: &id052
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"RouteNumber": {"description": "Route ordinal number, first route created will have number 1, second route number 2, etc...Used as a route ID for DELETE requests.", "type": "integer"}}, "required": ["RouteNumber"], "type": ["object"]}
    description: Deleting a static route
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Fetches the static routes details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"items": {"RouteNumber": {"description": "Route ordinal number, first route created will have number 1, second route number 2, etc...Used as a route ID for DELETE requests.", "type": "integer"}, "properties": {"Gateway": {"description": "Specifies the IP address of the gateway for this route.", "type": "string"}, "IPAddress": {"description": "Specifies an IP address used in conjunction with the prefix length to determine the network to which this route applies.", "type": "string"}, "Interface": {"default": "Auto", "description": "", "enum": ["Auto", "LAN1", "LAN2", "LAN3"], "type": "string"}, "Prefix": {"default": 32, "description": "Specifies the number of bits of the IP address which must match when determining the network to which this route applies.", "maximum": 128, "minimum": 1, "type": "integer"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Gateway": {"description": "Specifies the IP address of the gateway for this route.", "type": "string"}, "IPAddress": {"description": "Specifies an IP address used in conjunction with the prefix length to determine the network to which this route applies.", "type": "string"}, "Interface": {"default": "Auto", "description": "", "enum": ["Auto", "LAN1", "LAN2", "LAN3"], "type": "string"}, "Prefix": {"default": 32, "description": "Specifies the number of bits of the IP address which must match when determining the network to which this route applies.", "maximum": 128, "minimum": 1, "type": "integer"}}, "required": ["IPAddress", "Prefix", "Gateway"], "type": ["object"]}
    description: Creates a new static route
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of static routes
/provisioning/common/networklog: &id009
  GET:
    body: {}
    description: Return current network logging level Read function can also accomodate name or level filters
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"ModuleLogLevel": {"items": {"properties": {"level": {"description": "Current log level of the module", "type": "string"}, "name": {"description": "Name of network, support module", "type": "string"}}, "type": "object"}, "type": "array"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Level": {"description": "Log level to setExample Structure \"Level\":\"debug\"", "pattern": "^(?i)(fatal|error|warn|info|debug|trace)$", "type": "string"}, "Name": {"items": {"description": "Name of the network moduleOne or more network modules can be passedExample Structure \"Name\":[\"network.uds\",\"network.tcp\",\"network.ashell\",\"network.h323\"]", "pattern": "^(?i)(network$|network(\\.).*)", "type": "string"}, "type": "array"}}, "required": ["Name", "Level"]}
    description: Update one or more network logging module log levels FATAL, ERROR, WARN, INFO, DEBUG, TRACE
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilitates updation and read of NETWORKLOG levels RAML url /provisioning/common/networklogger with GET,PUT Methods PUT method returns 405 for filtered requests
/provisioning/common/networklog/level/<level>: *id009
/provisioning/common/networklog/name/<name>: *id009
/provisioning/common/protocol/sip: &id053
  GET:
    body: {}
    description: GET the SIP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "items": {"additionalProperties": true, "properties": {"AllowCrlDownloadsFromCdps": {"default": "Yes", "description": "Controls whether the download of CRLs from the CDP URIs                         contained in X.509 certificates is allowed.", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CertRevocationCheckMode": {"default": "On", "description": "Controls whether revocation checking is performed for certificates exchanged during                         SIP TLS connection establishment.", "pattern": "^(?i)(on|off)$", "type": "string"}, "FallbackBehavior": {"default": "TreatAsNotRevoked", "description": "Controls the revocation checking behavior", "enum": ["TreatAsNotRevoked", "TreatAsRevoked"], "type": "string"}, "IPv4Mtls": {"description": "status of IPv4 MTLS port", "type": "string"}, "IPv4MtlsAddress": {"description": "IPv4 MTLS address", "type": "string"}, "IPv4Tcp": {"description": "status of IPv4 TCP port", "type": "string"}, "IPv4TcpAddress": {"description": "IPv4 TCP address", "type": "string"}, "IPv4Tls": {"description": "status of IPv4 TLS port", "type": "string"}, "IPv4TlsAddress": {"description": "IPv4 TLS address", "type": "string"}, "IPv4Udp": {"description": "status of IPv4 UDP port", "type": "string"}, "IPv4UdpAddress": {"description": "IPv4 UDP address", "type": "string"}, "IPv6Mtls": {"description": "status of IPv6 MTLS port", "type": "string"}, "IPv6Tcp": {"description": "status of IPv6 TCP port", "type": "string"}, "IPv6Tls": {"description": "status of IPv6 TLS port", "type": "string"}, "IPv6Udp": {"description": "status of IPv6 UDP port", "type": "string"}, "MinSessionRefreshInterval": {"default": 500, "description": "The minimum value the VCS will negotiate for the session refresh interval for SIP calls.", "maximum": 86400, "minimum": 90, "type": "integer"}, "MutualTlsMode": {"default": "Off", "description": "Switch Mutual TLS mode on to enable a separate port to enforce Mutual TLS authentication                          on incoming SIP calls to this VCS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "MutualTlsPort": {"default": 5062, "description": "The listening port for incoming SIP Mutual TLS calls.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "OutRegRefreshMax": {"default": 3600, "description": "The maximum allowed value for a SIP registration refresh period for Outbound registrations.                        Requests for a value greater than this will result in a lower value being returned                         (calculated according to the Outbound registration refresh strategy). ", "maximum": 7200, "minimum": 30, "type": "integer"}, "OutRegRefreshMin": {"default": 600, "description": "The minimum allowed value for a SIP registration refresh period for Outbound registrations.                        Requests for a value lower than this will result in the registration being rejected with a                         423 Interval Too Brief response. ", "maximum": 3600, "minimum": 30, "type": "integer"}, "OutRegRefreshStrategy": {"default": "Variable", "description": "Method used to generate the SIP registration expiry period for Outbound registrations.                         The registration expiry period is the period within which a SIP endpoint must re-register                         to prevent its registration expiring. Maximum: uses the lesser of the configured maximum                         refresh value and the value requested in the registration. Variable: generates a random                         value between the configured minimum refresh value and the lesser of the configured                         maximum refresh value and the value requested in the registration. ", "enum": ["Variable", "Maximum"], "type": "string"}, "SessionRefreshInterval": {"default": 1800, "description": "The maximum time allowed between session refresh requests for SIP calls.", "maximum": 86400, "minimum": 90, "type": "integer"}, "SipMaxSize": {"default": 32768, "description": "Specifies the maximum size of SIP messages that can be handled by the server (in bytes). ", "maximum": 1048576, "minimum": 1, "type": "integer"}, "SipMode": {"default": "Off", "description": "Determines whether or not the VCS will provide SIP registrar and SIP proxy functionality.This mode must be enabled in order to use either the Presence Server or the Presence User Agent.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SipRegProxyMode": {"default": "Off", "description": "Specifies how the VCS handles registration requests for domains for which it is not acting                        as a SIP registrar (non-local domains). Off: registration requests are not proxied.                         Proxy to known only: registration requests are proxied in accordance with existing call                         processing rules, but only to known neighbor, traversal client and traversal server zones.                         Proxy to any: registration requests are proxied in accordance with existing call processing                         rules to all known zones. ", "enum": ["Off", "ProxyToKnownOnly", "ProxyToAny"], "type": "string"}, "SipTcpConnectTimeout": {"default": 10, "description": "Specifies the maximum number of seconds to wait for an outgoing SIP TCP                         connection to be established.", "maximum": 150, "minimum": 1, "type": "integer"}, "StdRegRefreshMax": {"default": 60, "description": "The maximum allowed value for a SIP registration refresh period for standard registrations.                        Requests for a value greater than this will result in a lower value being returned                         (calculated according to the standard registration refresh strategy).", "maximum": 7200, "minimum": 30, "type": "integer"}, "StdRegRefreshMin": {"default": 45, "description": "The minimum allowed value for a SIP registration refresh period for standard registrations.                        Requests for a value lower than this will result in the registration being rejected with a                         423 Interval Too Brief response.  ", "maximum": 3600, "minimum": 30, "type": "integer"}, "StdRegRefreshStrategy": {"default": "Maximum", "description": "Method used to generate the SIP registration expiry period for standard registrations.                        The registration expiry period is the period within which a SIP endpoint must re-register                         to prevent its registration expiring. Maximum: uses the lesser of the configured maximum                         refresh value and the value requested in the registration. Variable: generates a random value                         between the configured minimum refresh value and the lesser of the configured maximum refresh                         value and the value requested in the registration", "enum": ["Maximum", "Variable"], "type": "string"}, "StunKeepAliveForRegisteredPathEnabled": {"default": "On", "description": "Enable STUN keepalive for Unified CM High Availability", "pattern": "^(?i)(on|off)$", "type": "string"}, "TcpMode": {"default": "Off", "description": "Determines whether incoming and outgoing SIP messages using the TCP protocol are allowed. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "TcpOutboundPortEnd": {"default": 29999, "description": "Specifies the upper port in the range to be used by outbound TCP/TLS SIP connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "TcpOutboundPortStart": {"default": 25000, "description": "Specifies the lower port in the range to be used by outbound TCP/TLS SIP connections.", "maxmimum": 65534, "minimum": 1024, "type": "integer"}, "TcpPort": {"default": 5060, "description": "The listening port for incoming SIP TCP connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "TlsHandshakeTimeout": {"default": 5, "description": "Specifies the timeout period for TLS socket handshake in seconds", "maximum": 120, "minimum": 1, "type": "integer"}, "TlsMode": {"default": "On", "description": "Determines whether incoming and outgoing SIP messages using the TLS protocol are allowed.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TlsPort": {"default": 5061, "description": "The listening port for incoming SIP TLS connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "UdpMode": {"default": "On", "description": "Determines whether incoming and outgoing SIP messages using the UDP protocol are allowed. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "UdpPort": {"default": 5060, "description": "The listening port for incoming SIP UDP messages.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "UseCrl": {"default": "Yes", "description": "Controls whether the Certificate Revocation Lists (CRLs)                         may be used to perform certificate revocation checking", "pattern": "^(?i)(yes|no)$", "type": "string"}, "UseOcsp": {"default": "Yes", "description": "Controls whether the Online Certificate Status Protocol (OCSP)                         may be used to perform certificate revocation checking", "pattern": "^(?i)(yes|no)$", "type": "string"}}, "required": ["UdpPort", "MutualTlsMode", "TlsMode", "TcpMode", "UdpMode", "SipMode", "TcpPort", "SessionRefreshInterval", "TlsHandshakeTimeout", "TcpOutboundPortEnd", "TlsPort", "MutualTlsPort", "TcpOutboundPortStart", "MinSessionRefreshInterval", "CertRevocationCheckMode", "OutRegRefreshStrategy", "SipRegProxyMode", "StdRegRefreshStrategy", "StdRegRefreshMin", "OutRegRefreshMin", "StdRegRefreshMax", "OutRegRefreshMax", "StunKeepAliveForRegisteredPathEnabled", "SipTcpConnectTimeout", "SipMaxSize"], "type": "object"}, "type": ["array"]}
  description: CRUD operations for SIP STATUS Rest API
/provisioning/common/protocol/sip/advanced: &id054
  GET:
    body: {}
    description: GET the SIP advanced configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "items": {"properties": {"SipMaxSize": {"default": 32768, "description": "Specifies the maximum size of SIP messages that can be handled by the server (in bytes). ", "maximum": 1048576, "minimum": 1, "type": "integer"}, "SipTcpConnectTimeout": {"default": 10, "description": "Specifies the maximum number of seconds to wait for an outgoing SIP TCP                         connection to be established.", "maximum": 150, "minimum": 1, "type": "integer"}, "StunKeepAliveForRegisteredPathEnabled": {"default": "On", "description": "Enable STUN keepalive for Unified CM High Availability", "pattern": "^(?i)(on|off)$", "type": "string"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"SipMaxSize": {"default": 32768, "description": "Specifies the maximum size of SIP messages that can be handled by the server (in bytes). ", "maximum": 1048576, "minimum": 1, "type": "integer"}, "SipTcpConnectTimeout": {"default": 10, "description": "Specifies the maximum number of seconds to wait for an outgoing SIP TCP                         connection to be established.", "maximum": 150, "minimum": 1, "type": "integer"}, "StunKeepAliveForRegisteredPathEnabled": {"default": "On", "description": "Enable STUN keepalive for Unified CM High Availability", "pattern": "^(?i)(on|off)$", "type": "string"}}}
    description: Update the SIP advanced configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: CRUD operations for SIP Advanced Rest API
/provisioning/common/protocol/sip/certrevokecheck: &id055
  GET:
    body: {}
    description: GET the SIP Certification Revoke Check
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "items": {"additionalProperties": true, "properties": {"AllowCrlDownloadsFromCdps": {"default": "Yes", "description": "Controls whether the download of CRLs from the CDP URIs                         contained in X.509 certificates is allowed.", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CertRevocationCheckMode": {"default": "On", "description": "Controls whether revocation checking is performed for certificates exchanged during                         SIP TLS connection establishment.", "pattern": "^(?i)(on|off)$", "type": "string"}, "FallbackBehavior": {"default": "TreatAsNotRevoked", "description": "Controls the revocation checking behavior", "enum": ["TreatAsNotRevoked", "TreatAsRevoked"], "type": "string"}, "UseCrl": {"default": "Yes", "description": "Controls whether the Certificate Revocation Lists (CRLs)                         may be used to perform certificate revocation checking", "pattern": "^(?i)(yes|no)$", "type": "string"}, "UseOcsp": {"default": "Yes", "description": "Controls whether the Online Certificate Status Protocol (OCSP)                         may be used to perform certificate revocation checking", "pattern": "^(?i)(yes|no)$", "type": "string"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AllowCrlDownloadsFromCdps": {"default": "Yes", "description": "Controls whether the download of CRLs from the CDP URIs                         contained in X.509 certificates is allowed.", "pattern": "^(?i)(yes|no)$", "type": "string"}, "CertRevocationCheckMode": {"default": "On", "description": "Controls whether revocation checking is performed for certificates exchanged during                         SIP TLS connection establishment.", "pattern": "^(?i)(on|off)$", "type": "string"}, "FallbackBehavior": {"default": "TreatAsNotRevoked", "description": "Controls the revocation checking behavior", "enum": ["TreatAsNotRevoked", "TreatAsRevoked"], "type": "string"}, "UseCrl": {"default": "Yes", "description": "Controls whether the Certificate Revocation Lists (CRLs)                         may be used to perform certificate revocation checking", "pattern": "^(?i)(yes|no)$", "type": "string"}, "UseOcsp": {"default": "Yes", "description": "Controls whether the Online Certificate Status Protocol (OCSP)                         may be used to perform certificate revocation checking", "pattern": "^(?i)(yes|no)$", "type": "string"}}}
    description: Update the SIP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: CRUD operations for SIP Certification Revoke Check Rest API
/provisioning/common/protocol/sip/configuration: &id056
  GET:
    body: {}
    description: GET the SIP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "items": {"additionalProperties": true, "properties": {"MinSessionRefreshInterval": {"default": 500, "description": "The minimum value the VCS will negotiate for the session refresh interval for SIP calls.", "maximum": 86400, "minimum": 90, "type": "integer"}, "MutualTlsMode": {"default": "Off", "description": "Switch Mutual TLS mode on to enable a separate port to enforce Mutual TLS authentication                          on incoming SIP calls to this VCS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "MutualTlsPort": {"default": 5062, "description": "The listening port for incoming SIP Mutual TLS calls.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "SessionRefreshInterval": {"default": 1800, "description": "The maximum time allowed between session refresh requests for SIP calls.", "maximum": 86400, "minimum": 90, "type": "integer"}, "SipMode": {"default": "Off", "description": "Determines whether or not the VCS will provide SIP registrar and SIP proxy functionality.This mode must be enabled in order to use either the Presence Server or the Presence User Agent.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TcpMode": {"default": "Off", "description": "Determines whether incoming and outgoing SIP messages using the TCP protocol are allowed. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "TcpOutboundPortEnd": {"default": 29999, "description": "Specifies the upper port in the range to be used by outbound TCP/TLS SIP connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "TcpOutboundPortStart": {"default": 25000, "description": "Specifies the lower port in the range to be used by outbound TCP/TLS SIP connections.", "maxmimum": 65534, "minimum": 1024, "type": "integer"}, "TcpPort": {"default": 5060, "description": "The listening port for incoming SIP TCP connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "TlsHandshakeTimeout": {"default": 5, "description": "Specifies the timeout period for TLS socket handshake in seconds", "maximum": 120, "minimum": 1, "type": "integer"}, "TlsMode": {"default": "On", "description": "Determines whether incoming and outgoing SIP messages using the TLS protocol are allowed.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TlsPort": {"default": 5061, "description": "The listening port for incoming SIP TLS connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "UdpMode": {"default": "On", "description": "Determines whether incoming and outgoing SIP messages using the UDP protocol are allowed. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "UdpPort": {"default": 5060, "description": "The listening port for incoming SIP UDP messages.", "maximum": 65534, "minimum": 1024, "type": "integer"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"MinSessionRefreshInterval": {"default": 500, "description": "The minimum value the VCS will negotiate for the session refresh interval for SIP calls.", "maximum": 86400, "minimum": 90, "type": "integer"}, "MutualTlsMode": {"default": "Off", "description": "Switch Mutual TLS mode on to enable a separate port to enforce Mutual TLS authentication                          on incoming SIP calls to this VCS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "MutualTlsPort": {"default": 5062, "description": "The listening port for incoming SIP Mutual TLS calls.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "SessionRefreshInterval": {"default": 1800, "description": "The maximum time allowed between session refresh requests for SIP calls.", "maximum": 86400, "minimum": 90, "type": "integer"}, "SipMode": {"default": "Off", "description": "Determines whether or not the VCS will provide SIP registrar and SIP proxy functionality.This mode must be enabled in order to use either the Presence Server or the Presence User Agent.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TcpMode": {"default": "Off", "description": "Determines whether incoming and outgoing SIP messages using the TCP protocol are allowed. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "TcpOutboundPortEnd": {"default": 29999, "description": "Specifies the upper port in the range to be used by outbound TCP/TLS SIP connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "TcpOutboundPortStart": {"default": 25000, "description": "Specifies the lower port in the range to be used by outbound TCP/TLS SIP connections.", "maxmimum": 65534, "minimum": 1024, "type": "integer"}, "TcpPort": {"default": 5060, "description": "The listening port for incoming SIP TCP connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "TlsHandshakeTimeout": {"default": 5, "description": "Specifies the timeout period for TLS socket handshake in seconds", "maximum": 120, "minimum": 1, "type": "integer"}, "TlsMode": {"default": "On", "description": "Determines whether incoming and outgoing SIP messages using the TLS protocol are allowed.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TlsPort": {"default": 5061, "description": "The listening port for incoming SIP TLS connections.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "UdpMode": {"default": "On", "description": "Determines whether incoming and outgoing SIP messages using the UDP protocol are allowed. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "UdpPort": {"default": 5060, "description": "The listening port for incoming SIP UDP messages.", "maximum": 65534, "minimum": 1024, "type": "integer"}}}
    description: Update the SIP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: CRUD operations for SIP Configuration Rest API
/provisioning/common/protocol/sip/registrationcontrol: &id057
  GET:
    body: {}
    description: GET SIP Registration Control
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "items": {"additionalProperties": true, "properties": {"OutRegRefreshMax": {"default": 3600, "description": "The maximum allowed value for a SIP registration refresh period for Outbound registrations.                        Requests for a value greater than this will result in a lower value being returned                         (calculated according to the Outbound registration refresh strategy). ", "maximum": 7200, "minimum": 30, "type": "integer"}, "OutRegRefreshMin": {"default": 600, "description": "The minimum allowed value for a SIP registration refresh period for Outbound registrations.                        Requests for a value lower than this will result in the registration being rejected with a                         423 Interval Too Brief response. ", "maximum": 3600, "minimum": 30, "type": "integer"}, "OutRegRefreshStrategy": {"default": "Variable", "description": "Method used to generate the SIP registration expiry period for Outbound registrations.                         The registration expiry period is the period within which a SIP endpoint must re-register                         to prevent its registration expiring. Maximum: uses the lesser of the configured maximum                         refresh value and the value requested in the registration. Variable: generates a random                         value between the configured minimum refresh value and the lesser of the configured                         maximum refresh value and the value requested in the registration. ", "enum": ["Variable", "Maximum"], "type": "string"}, "SipRegProxyMode": {"default": "Off", "description": "Specifies how the VCS handles registration requests for domains for which it is not acting                        as a SIP registrar (non-local domains). Off: registration requests are not proxied.                         Proxy to known only: registration requests are proxied in accordance with existing call                         processing rules, but only to known neighbor, traversal client and traversal server zones.                         Proxy to any: registration requests are proxied in accordance with existing call processing                         rules to all known zones. ", "enum": ["Off", "ProxyToKnownOnly", "ProxyToAny"], "type": "string"}, "StdRegRefreshMax": {"default": 60, "description": "The maximum allowed value for a SIP registration refresh period for standard registrations.                        Requests for a value greater than this will result in a lower value being returned                         (calculated according to the standard registration refresh strategy).", "maximum": 7200, "minimum": 30, "type": "integer"}, "StdRegRefreshMin": {"default": 45, "description": "The minimum allowed value for a SIP registration refresh period for standard registrations.                        Requests for a value lower than this will result in the registration being rejected with a                         423 Interval Too Brief response.  ", "maximum": 3600, "minimum": 30, "type": "integer"}, "StdRegRefreshStrategy": {"default": "Maximum", "description": "Method used to generate the SIP registration expiry period for standard registrations.                        The registration expiry period is the period within which a SIP endpoint must re-register                         to prevent its registration expiring. Maximum: uses the lesser of the configured maximum                         refresh value and the value requested in the registration. Variable: generates a random value                         between the configured minimum refresh value and the lesser of the configured maximum refresh                         value and the value requested in the registration", "enum": ["Maximum", "Variable"], "type": "string"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"OutRegRefreshMax": {"default": 3600, "description": "The maximum allowed value for a SIP registration refresh period for Outbound registrations.                        Requests for a value greater than this will result in a lower value being returned                         (calculated according to the Outbound registration refresh strategy). ", "maximum": 7200, "minimum": 30, "type": "integer"}, "OutRegRefreshMin": {"default": 600, "description": "The minimum allowed value for a SIP registration refresh period for Outbound registrations.                        Requests for a value lower than this will result in the registration being rejected with a                         423 Interval Too Brief response. ", "maximum": 3600, "minimum": 30, "type": "integer"}, "OutRegRefreshStrategy": {"default": "Variable", "description": "Method used to generate the SIP registration expiry period for Outbound registrations.                         The registration expiry period is the period within which a SIP endpoint must re-register                         to prevent its registration expiring. Maximum: uses the lesser of the configured maximum                         refresh value and the value requested in the registration. Variable: generates a random                         value between the configured minimum refresh value and the lesser of the configured                         maximum refresh value and the value requested in the registration. ", "enum": ["Variable", "Maximum"], "type": "string"}, "SipRegProxyMode": {"default": "Off", "description": "Specifies how the VCS handles registration requests for domains for which it is not acting                        as a SIP registrar (non-local domains). Off: registration requests are not proxied.                         Proxy to known only: registration requests are proxied in accordance with existing call                         processing rules, but only to known neighbor, traversal client and traversal server zones.                         Proxy to any: registration requests are proxied in accordance with existing call processing                         rules to all known zones. ", "enum": ["Off", "ProxyToKnownOnly", "ProxyToAny"], "type": "string"}, "StdRegRefreshMax": {"default": 60, "description": "The maximum allowed value for a SIP registration refresh period for standard registrations.                        Requests for a value greater than this will result in a lower value being returned                         (calculated according to the standard registration refresh strategy).", "maximum": 7200, "minimum": 30, "type": "integer"}, "StdRegRefreshMin": {"default": 45, "description": "The minimum allowed value for a SIP registration refresh period for standard registrations.                        Requests for a value lower than this will result in the registration being rejected with a                         423 Interval Too Brief response.  ", "maximum": 3600, "minimum": 30, "type": "integer"}, "StdRegRefreshStrategy": {"default": "Maximum", "description": "Method used to generate the SIP registration expiry period for standard registrations.                        The registration expiry period is the period within which a SIP endpoint must re-register                         to prevent its registration expiring. Maximum: uses the lesser of the configured maximum                         refresh value and the value requested in the registration. Variable: generates a random value                         between the configured minimum refresh value and the lesser of the configured maximum refresh                         value and the value requested in the registration", "enum": ["Maximum", "Variable"], "type": "string"}}}
    description: UPDATE SIP Registration Control
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: CRUD operations for SIP Registration Control Rest API
/provisioning/common/qos: &id058
  GET:
    body: {}
    description: Read the QoS configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"properties": {"Audio": {"default": 46, "description": "The DSCP value to be stamped onto SIP and H.323 audio media traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}, "Signaling": {"default": 24, "description": "The DSCP value to be stamped onto all SIP and H.323 signalling traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}, "Video": {"default": 34, "description": "The DSCP value to be stamped onto SIP and H.323 video media traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}, "XMPP": {"default": 24, "description": "The DSCP value to be stamped onto XMPP traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"properties": {"Audio": {"default": 46, "description": "The DSCP value to be stamped onto SIP and H.323 audio media traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}, "Signaling": {"default": 24, "description": "The DSCP value to be stamped onto all SIP and H.323 signalling traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}, "Video": {"default": 34, "description": "The DSCP value to be stamped onto SIP and H.323 video media traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}, "XMPP": {"default": 24, "description": "The DSCP value to be stamped onto XMPP traffic routed through the Expressway. Note: you must restart the system for any changes to take effect.", "maximum": 63, "minimum": 0, "type": "integer"}}}
    description: Update QoS configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update or Get the current Quality of Service(QoS) configuration
/provisioning/common/searchrule: &id010
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "The name of the SearchRule", "maxLength": 50, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: Deleting a search rule
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Fetches (all / by name) search rules defined along with their parameters
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the search rule.", "maxLength": 64, "minLength": 0, "type": "string"}, "Mode": {"default": "AnyAlias", "description": "The type of alias for which this search rule applies. AliasPatternMatch: the alias must match the specified pattern type and string. AnyAlias: any alias (providing it is not an IP address) is allowed. AnyIPAddress: the alias must be an IP address.", "enum": ["AliasPatternMatch", "AnyAlias", "AnyIPAddress"], "type": "string"}, "MustAuthenticateRequest": {"default": "No", "description": "Specifies whether this search rule applies only to authenticated search requests.", "enum": ["Yes", "No"], "type": "string"}, "Name": {"description": "The name of the SearchRule", "maxLength": 50, "minLength": 1, "type": "string"}, "OnSuccessfulMatch": {"default": "Continue", "description": "Specifies the ongoing search behavior if the alias matches all of the search rule's conditions. Continue: continue applying the remaining search rules (in priority order) until the endpoint identified by the alias is found. Stop: any remaining search rules with a lower priority are not applied, even if the endpoint identified by the alias is ultimately not found.", "enum": ["Continue", "Stop"], "type": "string"}, "PatternBehavior": {"default": "Strip", "description": "Determines whether the matched part of the alias is modified before being sent to the target zone or policy service. (Applies to Alias Pattern Match mode only.) Leave: the alias is not modified. Strip: the matching prefix or suffix is removed from the alias. Replace: the matching part of the alias is substituted with the text in the replace string.", "enum": ["Leave", "Strip", "Replace"], "type": "string"}, "PatternString": {"description": "The pattern against which the alias is compared. (Applies to Alias pattern match mode only.) Note: if the pattern string is a Regex, you can refer to the regular expressions reference table in the online help.", "maxLength": 60, "minLength": 0, "type": "string"}, "PatternType": {"default": "Prefix", "description": "How the pattern string must match the alias for the rule to be applied. (Applies to Alias Pattern Match mode only.) Exact: the entire string must exactly match the alias character for character. Prefix: the string must appear at the beginning of the alias. Suffix: the string must appear at the end of the alias. Regex: the string is treated as a regular expression.", "enum": ["Exact", "Prefix", "Suffix", "Regex", "null"], "type": "string"}, "Priority": {"default": 100, "description": "The order in the search process that this rule is applied, when compared to the priority of the other search rules. All priority 1 search rules are applied first, followed by all priority 2 search rules, and so on.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Protocol": {"default": "Any", "description": "The source protocol for which this rule applies.", "enum": ["Any", "H323", "SIP"], "type": "string"}, "ReplaceString": {"description": "The string to substitute for the part of the alias that matches the pattern. (Applies to Replace pattern behavior only.)", "maxLength": 60, "minLength": 0, "type": "string"}, "SIPVariant": {"default": "Any", "description": "Select which type of SIP messages this search rule will process. Choose MicrosoftAny if you want the search rule to route MicrosoftSIP and MicrosoftIMP. Choose Standard to ignore Microsoft types and route standards-compliant SIP, or choose Any to route all types.", "enum": ["Any", "Standard", "MicrosoftAny", "MicrosoftSIP", "MicrosoftIMP"], "type": "string"}, "Source": {"default": "Any", "description": "The sources of the requests for which this rule applies. Any: locally registered devices, neighbor or traversal zones, and any non-registered devices. AllZones: locally registered devices plus neighbor or traversal zones. LocalZone: locally registered devices only. Named: a specific zone or subzone.", "enum": ["Any", "AllZones", "LocalZone", "Named"], "type": "string"}, "SourceName": {"description": "The specific source zone or subzone for which this rule applies. Choose from the Default Zone, Default Subzone or any other configured zone or subzone.", "type": "string"}, "State": {"default": "Enabled", "description": "Indicates if the search rule is enabled or disabled. Disabled search rules are ignored.", "enum": ["Enabled", "Disabled"], "type": "string"}, "SystemGenerated": {"description": "Indicates if the searchrule is system generated or not", "type": "string"}, "TargetName": {"description": "The zone name or policy service name to query if the alias matches the search rule.", "maxLength": 60, "minLength": 1, "type": "string"}}, "required": ["SIPVariant", "Protocol", "Name", "ReplaceString", "OnSuccessfulMatch", "SourceName", "TargetName", "PatternString", "State", "Priority", "Source", "PatternType", "Mode", "PatternBehavior", "MustAuthenticateRequest", "Description"], "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the search rule.", "maxLength": 64, "minLength": 0, "type": "string"}, "Mode": {"default": "AnyAlias", "description": "The type of alias for which this search rule applies. AliasPatternMatch: the alias must match the specified pattern type and string. AnyAlias: any alias (providing it is not an IP address) is allowed. AnyIPAddress: the alias must be an IP address.", "enum": ["AliasPatternMatch", "AnyAlias", "AnyIPAddress"], "type": "string"}, "MustAuthenticateRequest": {"default": "No", "description": "Specifies whether this search rule applies only to authenticated search requests.", "enum": ["Yes", "No"], "type": "string"}, "Name": {"description": "The name of the SearchRule", "maxLength": 50, "minLength": 1, "type": "string"}, "OnSuccessfulMatch": {"default": "Continue", "description": "Specifies the ongoing search behavior if the alias matches all of the search rule's conditions. Continue: continue applying the remaining search rules (in priority order) until the endpoint identified by the alias is found. Stop: any remaining search rules with a lower priority are not applied, even if the endpoint identified by the alias is ultimately not found.", "enum": ["Continue", "Stop"], "type": "string"}, "PatternBehavior": {"default": "Strip", "description": "Determines whether the matched part of the alias is modified before being sent to the target zone or policy service. (Applies to Alias Pattern Match mode only.) Leave: the alias is not modified. Strip: the matching prefix or suffix is removed from the alias. Replace: the matching part of the alias is substituted with the text in the replace string.", "enum": ["Leave", "Strip", "Replace"], "type": "string"}, "PatternString": {"description": "The pattern against which the alias is compared. (Applies to Alias pattern match mode only.) Note: if the pattern string is a Regex, you can refer to the regular expressions reference table in the online help.", "maxLength": 60, "minLength": 0, "type": "string"}, "PatternType": {"default": "Prefix", "description": "How the pattern string must match the alias for the rule to be applied. (Applies to Alias Pattern Match mode only.) Exact: the entire string must exactly match the alias character for character. Prefix: the string must appear at the beginning of the alias. Suffix: the string must appear at the end of the alias. Regex: the string is treated as a regular expression.", "enum": ["Exact", "Prefix", "Suffix", "Regex", "null"], "type": "string"}, "Priority": {"default": 100, "description": "The order in the search process that this rule is applied, when compared to the priority of the other search rules. All priority 1 search rules are applied first, followed by all priority 2 search rules, and so on.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Protocol": {"default": "Any", "description": "The source protocol for which this rule applies.", "enum": ["Any", "H323", "SIP"], "type": "string"}, "ReplaceString": {"description": "The string to substitute for the part of the alias that matches the pattern. (Applies to Replace pattern behavior only.)", "maxLength": 60, "minLength": 0, "type": "string"}, "SIPVariant": {"default": "Any", "description": "Select which type of SIP messages this search rule will process. Choose MicrosoftAny if you want the search rule to route MicrosoftSIP and MicrosoftIMP. Choose Standard to ignore Microsoft types and route standards-compliant SIP, or choose Any to route all types.", "enum": ["Any", "Standard", "MicrosoftAny", "MicrosoftSIP", "MicrosoftIMP"], "type": "string"}, "Source": {"default": "Any", "description": "The sources of the requests for which this rule applies. Any: locally registered devices, neighbor or traversal zones, and any non-registered devices. AllZones: locally registered devices plus neighbor or traversal zones. LocalZone: locally registered devices only. Named: a specific zone or subzone.", "enum": ["Any", "AllZones", "LocalZone", "Named"], "type": "string"}, "SourceName": {"description": "The specific source zone or subzone for which this rule applies. Choose from the Default Zone, Default Subzone or any other configured zone or subzone.", "type": "string"}, "State": {"default": "Enabled", "description": "Indicates if the search rule is enabled or disabled. Disabled search rules are ignored.", "enum": ["Enabled", "Disabled"], "type": "string"}, "TargetName": {"description": "The zone name or policy service name to query if the alias matches the search rule.", "maxLength": 60, "minLength": 1, "type": "string"}}, "required": ["Name", "Priority", "TargetName"]}
    description: Creates a new search rule
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the search rule.", "maxLength": 64, "minLength": 0, "type": "string"}, "Mode": {"default": "AnyAlias", "description": "The type of alias for which this search rule applies. AliasPatternMatch: the alias must match the specified pattern type and string. AnyAlias: any alias (providing it is not an IP address) is allowed. AnyIPAddress: the alias must be an IP address.", "enum": ["AliasPatternMatch", "AnyAlias", "AnyIPAddress"], "type": "string"}, "MustAuthenticateRequest": {"default": "No", "description": "Specifies whether this search rule applies only to authenticated search requests.", "enum": ["Yes", "No"], "type": "string"}, "Name": {"description": "The name of the SearchRule", "maxLength": 50, "minLength": 1, "type": "string"}, "NewName": {"description": "The name of the SearchRule", "maxLength": 50, "minLength": 1, "type": "string"}, "OnSuccessfulMatch": {"default": "Continue", "description": "Specifies the ongoing search behavior if the alias matches all of the search rule's conditions. Continue: continue applying the remaining search rules (in priority order) until the endpoint identified by the alias is found. Stop: any remaining search rules with a lower priority are not applied, even if the endpoint identified by the alias is ultimately not found.", "enum": ["Continue", "Stop"], "type": "string"}, "PatternBehavior": {"default": "Strip", "description": "Determines whether the matched part of the alias is modified before being sent to the target zone or policy service. (Applies to Alias Pattern Match mode only.) Leave: the alias is not modified. Strip: the matching prefix or suffix is removed from the alias. Replace: the matching part of the alias is substituted with the text in the replace string.", "enum": ["Leave", "Strip", "Replace"], "type": "string"}, "PatternString": {"description": "The pattern against which the alias is compared. (Applies to Alias pattern match mode only.) Note: if the pattern string is a Regex, you can refer to the regular expressions reference table in the online help.", "maxLength": 60, "minLength": 0, "type": "string"}, "PatternType": {"default": "Prefix", "description": "How the pattern string must match the alias for the rule to be applied. (Applies to Alias Pattern Match mode only.) Exact: the entire string must exactly match the alias character for character. Prefix: the string must appear at the beginning of the alias. Suffix: the string must appear at the end of the alias. Regex: the string is treated as a regular expression.", "enum": ["Exact", "Prefix", "Suffix", "Regex", "null"], "type": "string"}, "Priority": {"default": 100, "description": "The order in the search process that this rule is applied, when compared to the priority of the other search rules. All priority 1 search rules are applied first, followed by all priority 2 search rules, and so on.", "maximum": 65534, "minimum": 1, "type": "integer"}, "Protocol": {"default": "Any", "description": "The source protocol for which this rule applies.", "enum": ["Any", "H323", "SIP"], "type": "string"}, "ReplaceString": {"description": "The string to substitute for the part of the alias that matches the pattern. (Applies to Replace pattern behavior only.)", "maxLength": 60, "minLength": 0, "type": "string"}, "SIPVariant": {"default": "Any", "description": "Select which type of SIP messages this search rule will process. Choose MicrosoftAny if you want the search rule to route MicrosoftSIP and MicrosoftIMP. Choose Standard to ignore Microsoft types and route standards-compliant SIP, or choose Any to route all types.", "enum": ["Any", "Standard", "MicrosoftAny", "MicrosoftSIP", "MicrosoftIMP"], "type": "string"}, "Source": {"default": "Any", "description": "The sources of the requests for which this rule applies. Any: locally registered devices, neighbor or traversal zones, and any non-registered devices. AllZones: locally registered devices plus neighbor or traversal zones. LocalZone: locally registered devices only. Named: a specific zone or subzone.", "enum": ["Any", "AllZones", "LocalZone", "Named"], "type": "string"}, "SourceName": {"description": "The specific source zone or subzone for which this rule applies. Choose from the Default Zone, Default Subzone or any other configured zone or subzone.", "type": "string"}, "State": {"default": "Enabled", "description": "Indicates if the search rule is enabled or disabled. Disabled search rules are ignored.", "enum": ["Enabled", "Disabled"], "type": "string"}, "TargetName": {"description": "The zone name or policy service name to query if the alias matches the search rule.", "maxLength": 60, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: Updating the configuration of an existing search rule
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: CRUD operations for SearchRule Rest API
/provisioning/common/searchrule/name/<name>: *id010
/provisioning/common/serviceselect: &id059
  GET:
    body: {}
    description: Fetches Expressway Service details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"items": {"B2B": {"default": "No", "description": "Business to Business (B2B) enables secure connectivity options that allow dialing to and from non-Cisco Hosted Collaboration Solution enterprises reachable through the Internet.", "enum": ["Yes", "No"], "type": "string"}, "BoxType": {"default": "Expressway-C", "description": "Cisco Expressway Series (Expressway) is designed specifically for comprehensive collaboration services.It features established firewall-traversal technology and helps to redefine traditional enterprise collaboration boundaries, to support our Cisco vision of any-to-any collaboration.", "enum": ["Expressway-C", "Expressway-E"], "type": "string"}, "CMR": {"default": "No", "description": "The Expressway no longer requires rich media session licenses for calls to and from cloud-based CMRs. This includesSIP calls between Collaboration Cloud and the CMR Hybrid solution.", "enum": ["Yes", "No"], "type": "string"}, "CiscoWebexHybridServices": {"default": "No", "description": "Cisco Webex Hybrid Services tie your premises-based solutions into the Cisco Collaboration cloud to deliver a more capable, better integrated collaboration user experience.", "enum": ["Yes", "No"], "type": "string"}, "JabberGuest": {"default": "No", "description": "Cisco Jabber Guest is a consumer to business (C2B) solution that extends the reach of Cisco's enterprise telephony to people outside of a corporate firewall who do not have phones registered with Cisco Unified Communications Manager.", "enum": ["Yes", "No"], "type": "string"}, "MRA": {"default": "No", "description": "Cisco Unified Communications Mobile and Remote Access is a core part of the Cisco Collaboration Edge Architecture", "enum": ["Yes", "No"], "type": "string"}, "MicrosoftGatewayService": {"default": "No", "description": "The solution extends the presence and instant messaging capabilities of Microsoft Lync by providing access to a broad set of Cisco Unified Communications capabilities; including software phone standards-based video, unified messaging, conferencing, desktop phone control and phone presence.", "enum": ["Yes", "No"], "type": "string"}, "Registrar": {"default": "No", "description": "The Expressway supports the SIP protocol. It can act as a SIP registrar, SIP proxy and as a SIP Presence Server. Expressway can provide interworking between SIP and H.323, translating between the two protocols to enable endpoints that only support one of the protocols to call each other.", "enum": ["Yes", "No"], "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"B2B": {"default": "No", "description": "Business to Business (B2B) enables secure connectivity options that allow dialing to and from non-Cisco Hosted Collaboration Solution enterprises reachable through the Internet.", "enum": ["Yes", "No"], "type": "string"}, "BoxType": {"default": "Expressway-C", "description": "Cisco Expressway Series (Expressway) is designed specifically for comprehensive collaboration services.It features established firewall-traversal technology and helps to redefine traditional enterprise collaboration boundaries, to support our Cisco vision of any-to-any collaboration.", "enum": ["Expressway-C", "Expressway-E"], "type": "string"}, "CMR": {"default": "No", "description": "The Expressway no longer requires rich media session licenses for calls to and from cloud-based CMRs. This includesSIP calls between Collaboration Cloud and the CMR Hybrid solution.", "enum": ["Yes", "No"], "type": "string"}, "CiscoWebexHybridServices": {"default": "No", "description": "Cisco Webex Hybrid Services tie your premises-based solutions into the Cisco Collaboration cloud to deliver a more capable, better integrated collaboration user experience.", "enum": ["Yes", "No"], "type": "string"}, "JabberGuest": {"default": "No", "description": "Cisco Jabber Guest is a consumer to business (C2B) solution that extends the reach of Cisco's enterprise telephony to people outside of a corporate firewall who do not have phones registered with Cisco Unified Communications Manager.", "enum": ["Yes", "No"], "type": "string"}, "MRA": {"default": "No", "description": "Cisco Unified Communications Mobile and Remote Access is a core part of the Cisco Collaboration Edge Architecture", "enum": ["Yes", "No"], "type": "string"}, "MicrosoftGatewayService": {"default": "No", "description": "The solution extends the presence and instant messaging capabilities of Microsoft Lync by providing access to a broad set of Cisco Unified Communications capabilities; including software phone standards-based video, unified messaging, conferencing, desktop phone control and phone presence.", "enum": ["Yes", "No"], "type": "string"}, "Registrar": {"default": "No", "description": "The Expressway supports the SIP protocol. It can act as a SIP registrar, SIP proxy and as a SIP Presence Server. Expressway can provide interworking between SIP and H.323, translating between the two protocols to enable endpoints that only support one of the protocols to call each other.", "enum": ["Yes", "No"], "type": "string"}}
    description: Update Expressway Service Select configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update and Get Expressway Service Select configuration
/provisioning/common/sftpconfig: &id060
  GET:
    body: {}
    description: Read SFTP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"Password": {"description": "Password used by the Expressway to access the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "RsaKey": {"description": "RSA key of the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "SftpServer": {"description": "FQDN or IP address of the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "Username": {"description": "Username used by the Expressway to access the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Password": {"description": "Password used by the Expressway to access the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "RsaKey": {"description": "RSA key of the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "SftpServer": {"description": "FQDN or IP address of the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "Username": {"description": "Username used by the Expressway to access the SFTP server. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["SftpServer", "Username", "Password", "RsaKey"], "type": ["object"]}
    description: Fetch and update SFTP Configuration.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilitates the read and update of SFTPConfig
/provisioning/common/smartlicensing/action: &id061
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "maxProperties": 1, "minProperties": 1, "properties": {"Deregister": {"default": "on", "description": "The product instance reverts to evaluation mode provided the evaluation period has not expired. All license entitlements used for this product instance are released immediately to the virtual account and are available for other product instances to use it.", "pattern": "^(?i)(on)$", "type": "string"}, "Renew Authorization now": {"default": "on", "description": "Perform this operation if automatic authorization statusrenewal failed due to network connectivity issues withcloud-based or On-Prem Cisco Smart Software Manager.", "pattern": "^(?i)(on)$", "type": "string"}, "Renew Registration now": {"default": "on", "description": "Perform this operation if automatic registration renewal fails due to network connectivity issues with cloud-based or On-Prem Cisco Smart Software Manager..", "pattern": "^(?i)(on)$", "type": "string"}, "ReservationEnable": {"default": "off", "description": "Perform this operation to enable Smart License reservation mode", "pattern": "^(?i)(on|off)$", "type": "string"}, "Update Usage Details": {"default": "on", "description": "Perform this operation to report Entitlement usage data to cloud-based or On-Prem Cisco Smart Software Manager .Product will go into Evalmode if not registered to Cisco Smart Software Manager", "pattern": "^(?i)(on)$", "type": "string"}}}
    description: Perform Smartlicensing Action
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to post SmartLicensing Actions Feature
/provisioning/common/smartlicensing/cancelReservationRequest: &id062
  PUT:
    body: {}
    description: Cancels reservation process
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Class to handle SL cancelling reservation request
/provisioning/common/smartlicensing/generateReversationRequest: &id063
  PUT:
    body: {}
    description: Requesting SL reservation code.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Class to handle SL reservation request
/provisioning/common/smartlicensing/registerWithReservationAuthorizationCode: &id064
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"ReservationAuthorizationCode": {"description": "Authorization code generated on CSSM portal used for permanent or specific licensereservation", "type": "string"}}, "required": ["ReservationAuthorizationCode"]}
    description: Installs authorization code
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Class to handle authorization code installation
/provisioning/common/smartlicensing/registration: &id065
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Reregister": {"default": "No", "description": "Perform this operation to reregister the product instance in the following cases: Previous registration attempt of this product instance failed due to network connectivity issue and you want to reregister after resolving this issue. To reregister the product instance, already registered with a virtual account, to a different virtual account.", "maxLength": 3, "minLength": 0, "pattern": "^(?i)(Yes|No)$", "type": "string"}, "Token": {"description": "Use the product instance Registration token that you generated from cloud-based Cisco Smart Software Manager or your Cisco Smart Software Manager On-Prem to register the product instance.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["Token"]}
    description: Sets Smartlicensing mode to On
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add/modify SmartLicensing Feature
/provisioning/common/smartlicensing/returnReservation: &id066
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"ReturnAuthorizationCode": {"description": "Return authorization code generated on Expressway used for returning licenses before theyhave been installed", "type": "string"}}}
    description: Requests for return code
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Class to handle SL return reservation request
/provisioning/common/smartlicensing/transport: &id067
  GET:
    body: {}
    description: Read Smart License Transport
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "anyOf": [{"definitions": {"ProxyServer": {"$id": "#ProxyServer", "properties": {"Password": {"description": "The password for authorizing requests at the proxy server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Port": {"default": 80, "description": "The port on which the proxy server is listening for requests", "maximum": 65534, "minimum": 1, "type": "integer"}, "ProxyAddress": {"description": "Address of your proxy server. Enter either IPv4 address or FQDN of the proxy", "maxLength": 1024, "minLength": 0, "type": "string"}, "Username": {"description": "The username for authorizing requests at the proxy server.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "required": ["ProxyAddress", "Port"]}}, "dependencies": {"TransportSettings": {"oneOf": [{"allOf": [{"not": {"required": ["URL"]}}, {"not": {"required": ["ProxyServer"]}}], "properties": {"TransportSettings": {"enum": ["direct"]}}}, {"allOf": [{"not": {"required": ["ProxyServer"]}}], "properties": {"TransportSettings": {"enum": ["on-prem"]}, "URL": {"description": "Enter the protocol and FQDN of the On-Prem server prefixed to SmartTransport. For example, https://example.com/SmartTransport.", "maxLength": 1024, "minLength": 0, "pattern": "^https://*.*/SmartTransport$", "type": "string"}}, "required": ["URL"]}, {"allOf": [{"not": {"required": ["URL"]}}], "properties": {"ProxyServer": {"#ref": "#/definitions/ProxyServer"}, "TransportSettings": {"enum": ["proxy"]}}, "required": ["ProxyServer"]}]}}, "properties": {"Do not share my hostname or IP address with Cisco": {"default": "No", "description": "Use if hostname and IP address of this product instance must not be sent to the cloud-based Cisco Smart Software Manager or Cisco Smart Software Manager On-Prem.", "enum": ["Yes", "No"], "type": "string"}, "TransportSettings": {"default": "direct", "description": "Determines how this product instance communicates with cloud-based Cisco Smart Software Manager to send and receive usage information.Direct: Communicates directly over the internet to the cloud-based Cisco Smart Software Manager.on-prem cssm: Communicates through a Cisco Smart Software Manager On-Prem deployed on your premises. For more information, see Cisco Smart Software Manager On-Prem in the online help.Proxy server: Communicates over the internet through a proxy server.Note: Transport settings can be changed only when product instance is not Registered", "enum": ["direct", "on-prem", "proxy"], "type": "string"}}, "required": ["TransportSettings"]}, {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "required": ["Message"]}]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": true, "anyOf": [{"definitions": {"ProxyServer": {"$id": "#ProxyServer", "properties": {"Password": {"description": "The password for authorizing requests at the proxy server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Port": {"default": 80, "description": "The port on which the proxy server is listening for requests", "maximum": 65534, "minimum": 1, "type": "integer"}, "ProxyAddress": {"description": "Address of your proxy server. Enter either IPv4 address or FQDN of the proxy", "maxLength": 1024, "minLength": 0, "type": "string"}, "Username": {"description": "The username for authorizing requests at the proxy server.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "required": ["ProxyAddress", "Port"]}}, "dependencies": {"TransportSettings": {"oneOf": [{"allOf": [{"not": {"required": ["URL"]}}, {"not": {"required": ["ProxyServer"]}}], "properties": {"TransportSettings": {"enum": ["direct"]}}}, {"allOf": [{"not": {"required": ["ProxyServer"]}}], "properties": {"TransportSettings": {"enum": ["on-prem"]}, "URL": {"description": "Enter the protocol and FQDN of the On-Prem server prefixed to SmartTransport. For example, https://example.com/SmartTransport.", "maxLength": 1024, "minLength": 0, "pattern": "^https://*.*/SmartTransport$", "type": "string"}}, "required": ["URL"]}, {"allOf": [{"not": {"required": ["URL"]}}], "properties": {"ProxyServer": {"#ref": "#/definitions/ProxyServer"}, "TransportSettings": {"enum": ["proxy"]}}, "required": ["ProxyServer"]}]}}, "properties": {"Do not share my hostname or IP address with Cisco": {"default": "No", "description": "Use if hostname and IP address of this product instance must not be sent to the cloud-based Cisco Smart Software Manager or Cisco Smart Software Manager On-Prem.", "enum": ["Yes", "No"], "type": "string"}, "TransportSettings": {"default": "direct", "description": "Determines how this product instance communicates with cloud-based Cisco Smart Software Manager to send and receive usage information.Direct: Communicates directly over the internet to the cloud-based Cisco Smart Software Manager.on-prem cssm: Communicates through a Cisco Smart Software Manager On-Prem deployed on your premises. For more information, see Cisco Smart Software Manager On-Prem in the online help.Proxy server: Communicates over the internet through a proxy server.Note: Transport settings can be changed only when product instance is not Registered", "enum": ["direct", "on-prem", "proxy"], "type": "string"}}, "required": ["TransportSettings"]}, {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "required": ["Message"]}]}
    description: Perform Smartlicensing Action
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add/modify SmartLicensing Transport
/provisioning/common/snmp: &id068
  GET:
    body: {}
    description: Fetches the SNMP details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"CommunityName": {"default": "public", "description": "The Expressway's SNMP community name", "maxLength": 1024, "minLength": 0, "type": "string"}, "DMIOnlyMode": {"default": "Off", "description": "Sets dedicated management interface only mode to access the Expressway SNMP", "pattern": "^(?i)(on|off)$", "type": "string"}, "SNMPMode": {"default": "Disabled", "description": "Controls the level of SNMP support.", "enum": ["Disabled", "V2C", "V3SecureSNMP", "V3PlusTMSSupport"], "type": "string"}, "SystemContact": {"default": "Administrator", "description": "The name of the person who can be contacted regarding issues with the Expressway.", "maxLength": 1024, "minLength": 0, "type": "string"}, "SystemDescription": {"default": "None", "description": "A custom description of the system as viewed by SNMP.", "maxLength": 1024, "minLength": 0, "type": "string"}, "SystemLocation": {"description": "The physical location of the system.", "maxLength": 1024, "minLength": 0, "type": "string"}, "V3AuthenticationMode": {"default": "On", "description": "Enables or disables SNMPv3 authentication.", "pattern": "^(?i)(on|off)$", "type": "string"}, "V3AuthenticationPassword": {"description": "The password used to encrypt authentication credentials.", "maxLength": 1024, "minLength": 8, "type": "string"}, "V3PrivacyMode": {"default": "On", "description": "Enables or disables SNMPv3 encryption", "pattern": "^(?i)(on|off)$", "type": "string"}, "V3PrivacyPassword": {"description": "The password used to encrypt messages.", "maxLength": 1024, "minLength": 8, "type": "string"}, "V3UserName": {"description": "The Expressway's SNMP username, used to identify this SNMP agent to the SNMP manager.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "type": "object"}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"CommunityName": {"default": "public", "description": "The Expressway's SNMP community name", "maxLength": 1024, "minLength": 0, "type": "string"}, "DMIOnlyMode": {"default": "Off", "description": "Sets dedicated management interface only mode to access the Expressway SNMP", "pattern": "^(?i)(on|off)$", "type": "string"}, "SNMPMode": {"default": "Disabled", "description": "Controls the level of SNMP support.", "enum": ["Disabled", "V2C", "V3SecureSNMP", "V3PlusTMSSupport"], "type": "string"}, "SystemContact": {"default": "Administrator", "description": "The name of the person who can be contacted regarding issues with the Expressway.", "maxLength": 1024, "minLength": 0, "type": "string"}, "SystemDescription": {"default": "None", "description": "A custom description of the system as viewed by SNMP.", "maxLength": 1024, "minLength": 0, "type": "string"}, "SystemLocation": {"description": "The physical location of the system.", "maxLength": 1024, "minLength": 0, "type": "string"}, "V3AuthenticationMode": {"default": "On", "description": "Enables or disables SNMPv3 authentication.", "pattern": "^(?i)(on|off)$", "type": "string"}, "V3AuthenticationPassword": {"description": "The password used to encrypt authentication credentials.", "maxLength": 1024, "minLength": 8, "type": "string"}, "V3PrivacyMode": {"default": "On", "description": "Enables or disables SNMPv3 encryption", "pattern": "^(?i)(on|off)$", "type": "string"}, "V3PrivacyPassword": {"description": "The password used to encrypt messages.", "maxLength": 1024, "minLength": 8, "type": "string"}, "V3UserName": {"description": "The Expressway's SNMP username, used to identify this SNMP agent to the SNMP manager.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "type": "object"}
    description: Updates SNMP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of SNMP
/provisioning/common/supportlog: &id011
  GET:
    body: {}
    description: Return current developer logging level Read function can also accomodate name or level filters
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"ModuleLogLevel": {"items": {"properties": {"level": {"description": "Current log level of the module", "type": "string"}, "name": {"description": "Name of network, support module", "type": "string"}}, "type": "object"}, "type": "array"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Level": {"description": "Log level to setExample Structure \"Level\":\"trace\"", "pattern": "^(?i)(fatal|error|warn|info|debug|trace)$", "type": "string"}, "Name": {"items": {"description": "Name of the support module. One or more support modules can be passedExample Structure \"Name\":[\"developer.restapi\",\"developer.iwf\",\"developer.edgemanager\"]", "pattern": "^(?i)(developer(\\.).*)", "type": "string"}, "type": "array"}}, "required": ["Name", "Level"]}
    description: Update one or more developer logging module log levels FATAL, ERROR, WARN, INFO, DEBUG, TRACE
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilitates updation and read of DEVELOPER log levels RAML url /provisioning/common/developerlogger with GET,PUT Methods PUT method returns 405 for filtered requests
/provisioning/common/supportlog/level/<level>: *id011
/provisioning/common/supportlog/name/<name>: *id011
/provisioning/common/time/ntpserver: &id012
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"index": {"description": "The priority of the ntp server address", "maximum": 5, "minimum": 1, "type": "integer"}}, "required": ["index"]}
    description: Deletes the NTPServer record
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Fetches all ntp server details defined.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Address": {"description": "Sets the IP address or Fully Qualified Domain Name (FQDN) of up to 5 NTP servers to be used when synchronizing system time.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Authentication": {"default": "disabled", "description": "The type of NTP server authentication to use. Disabled: no authentication is used. Symmetric key: uses key values entered here that must match exactly the equivalent settings on the NTP server. Private key: uses an automatically generated private key with which to authenticate messages sent to the NTP server.", "enum": ["disabled", "symmetric", "private_key"], "type": "string"}, "Hash": {"default": "sha1", "description": "The cryptographic hash type to use with NTP symmetric authentication. It must match the hash type for the specified key on the NTP server.", "enum": ["sha1", "md5"], "type": "string"}, "KeyId": {"description": "The key identifier to use with NTP symmetric authentication. It must match a trusted key on the NTP server.", "maximum": 65535, "minimum": 1, "type": "integer"}, "PassPhrase": {"description": "The pass phrase to use with NTP symmetric authentication. It must match the pass phrase associated with the same key ID on the NTP server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"description": "The priority of the ntp server address", "maximum": 5, "minimum": 1, "type": "integer"}}, "required": ["Address", "Authentication", "KeyId", "Hash", "index"], "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Address": {"description": "Sets the IP address or Fully Qualified Domain Name (FQDN) of up to 5 NTP servers to be used when synchronizing system time.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Authentication": {"default": "disabled", "description": "The type of NTP server authentication to use. Disabled: no authentication is used. Symmetric key: uses key values entered here that must match exactly the equivalent settings on the NTP server. Private key: uses an automatically generated private key with which to authenticate messages sent to the NTP server.", "enum": ["disabled", "symmetric", "private_key"], "type": "string"}, "Hash": {"default": "sha1", "description": "The cryptographic hash type to use with NTP symmetric authentication. It must match the hash type for the specified key on the NTP server.", "enum": ["sha1", "md5"], "type": "string"}, "KeyId": {"description": "The key identifier to use with NTP symmetric authentication. It must match a trusted key on the NTP server.", "maximum": 65535, "minimum": 1, "type": "integer"}, "PassPhrase": {"description": "The pass phrase to use with NTP symmetric authentication. It must match the pass phrase associated with the same key ID on the NTP server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"description": "The priority of the ntp server address", "maximum": 5, "minimum": 1, "type": "integer"}}, "required": ["Address", "index"]}
    description: Creates a ntp server address entry
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Address": {"description": "Sets the IP address or Fully Qualified Domain Name (FQDN) of up to 5 NTP servers to be used when synchronizing system time.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Authentication": {"default": "disabled", "description": "The type of NTP server authentication to use. Disabled: no authentication is used. Symmetric key: uses key values entered here that must match exactly the equivalent settings on the NTP server. Private key: uses an automatically generated private key with which to authenticate messages sent to the NTP server.", "enum": ["disabled", "symmetric", "private_key"], "type": "string"}, "Hash": {"default": "sha1", "description": "The cryptographic hash type to use with NTP symmetric authentication. It must match the hash type for the specified key on the NTP server.", "enum": ["sha1", "md5"], "type": "string"}, "KeyId": {"description": "The key identifier to use with NTP symmetric authentication. It must match a trusted key on the NTP server.", "maximum": 65535, "minimum": 1, "type": "integer"}, "PassPhrase": {"description": "The pass phrase to use with NTP symmetric authentication. It must match the pass phrase associated with the same key ID on the NTP server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "index": {"description": "The priority of the ntp server address", "maximum": 5, "minimum": 1, "type": "integer"}}, "required": ["Address", "index"]}
    description: Updates the ntp server details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of NTP Server details
/provisioning/common/time/ntpserver/index/<index>: *id012
/provisioning/common/time/status: &id069
  GET:
    body: {}
    description: Fetches the ntp server status details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"NtpServer": {"items": {"properties": {"Address": {"type": "string"}, "Authentication": {"type": "string"}, "Condition": {"type": "string"}, "Delay": {"type": "string"}, "Dispersion": {"type": "string"}, "Event": {"type": "string"}, "Flash": {"type": "string"}, "Jitter": {"type": "string"}, "Offset": {"type": "string"}, "Reachability": {"type": "string"}, "RefID": {"type": "string"}, "RefTime": {"type": "string"}, "RootDelay": {"type": "string"}, "RootDispersion": {"type": "string"}, "Stratum": {"type": "string"}}, "type": "object"}, "maxItems": 5, "minItems": 0, "type": "array"}, "NtpStatus": {"type": "string"}}, "required": ["NtpStatus", "NtpServer"], "type": ["object"]}
  description: Facilities the read of time status
/provisioning/common/time/timezone: &id070
  GET:
    body: {}
    description: Fetches the timezone details defined.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"TimeZone": {"default": "UTC", "description": "Sets the local time zone of the system. Time zone names follow the POSIX naming convention e.g. Europe/London or America/New_York.", "type": "string"}}, "required": ["TimeZone"], "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"TimeZone": {"default": "UTC", "description": "Sets the local time zone of the system. Time zone names follow the POSIX naming convention e.g. Europe/London or America/New_York.", "type": "string"}}, "required": ["TimeZone"]}
    description: Updates the time zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of Time Zone
/provisioning/common/transform: &id013
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Priority": {"default": 1, "description": "Assigns a priority to the specified transform. Transforms are compared with incoming aliases in order of priority, and the priority must be unique for each transform.", "maximum": 65534, "minimum": 1, "type": "integer"}}, "required": ["Priority"]}
    description: Deleting a transform
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Fetches (all / by Priority) transforms defined along with their parameters
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the transform.", "maxLength": 64, "minLength": 0, "type": "string"}, "PatternBehavior": {"default": "Strip", "description": "How the alias is modified. Strip: removes the matching prefix or suffix from the alias. Replace: substitutes the matching part of the alias with the text in the replace string. AddPrefix: prepends the Additional text to the alias. AddSuffix: appends the Additional text to the alias.", "enum": ["Strip", "Replace", "AddPrefix", "AddSuffix"], "type": "string"}, "PatternReplaceString": {"description": "The text string to use in conjunction with the selected Pattern behavior.", "maxLength": 60, "minLength": 0, "type": "string"}, "PatternString": {"description": "The pattern against which the alias is compared.", "maxLength": 60, "minLength": 1, "type": "string"}, "PatternType": {"default": "Prefix", "description": "How the pattern string must match the alias for the transform to be applied. Exact: the entire string must exactly match the alias character for character. Prefix: the string must appear at the beginning of the alias. Suffix: the string must appear at the end of the alias. Regex: the string is treated as a regular expression.", "enum": ["Exact", "Prefix", "Suffix", "Regex"], "type": "string"}, "Priority": {"default": 1, "description": "Assigns a priority to the specified transform. Transforms are compared with incoming aliases in order of priority, and the priority must be unique for each transform.", "maximum": 65534, "minimum": 1, "type": "integer"}, "State": {"default": "Enabled", "description": "Indicates if the transform is enabled or disabled. Disabled transforms are ignored.", "enum": ["Enabled", "Disabled"], "type": "string"}}, "required": ["PatternType", "PatternReplaceString", "PatternString", "Priority", "State", "PatternBehavior", "Description"], "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the transform.", "maxLength": 64, "minLength": 0, "type": "string"}, "PatternBehavior": {"default": "Strip", "description": "How the alias is modified. Strip: removes the matching prefix or suffix from the alias. Replace: substitutes the matching part of the alias with the text in the replace string. AddPrefix: prepends the Additional text to the alias. AddSuffix: appends the Additional text to the alias.", "enum": ["Strip", "Replace", "AddPrefix", "AddSuffix"], "type": "string"}, "PatternReplaceString": {"description": "The text string to use in conjunction with the selected Pattern behavior.", "maxLength": 60, "minLength": 0, "type": "string"}, "PatternString": {"description": "The pattern against which the alias is compared.", "maxLength": 60, "minLength": 1, "type": "string"}, "PatternType": {"default": "Prefix", "description": "How the pattern string must match the alias for the transform to be applied. Exact: the entire string must exactly match the alias character for character. Prefix: the string must appear at the beginning of the alias. Suffix: the string must appear at the end of the alias. Regex: the string is treated as a regular expression.", "enum": ["Exact", "Prefix", "Suffix", "Regex"], "type": "string"}, "Priority": {"default": 1, "description": "Assigns a priority to the specified transform. Transforms are compared with incoming aliases in order of priority, and the priority must be unique for each transform.", "maximum": 65534, "minimum": 1, "type": "integer"}, "State": {"default": "Enabled", "description": "Indicates if the transform is enabled or disabled. Disabled transforms are ignored.", "enum": ["Enabled", "Disabled"], "type": "string"}}, "required": ["Priority", "PatternString", "PatternBehavior"]}
    description: Creates a new transform
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the transform.", "maxLength": 64, "minLength": 0, "type": "string"}, "NewPriority": {"default": 1, "description": "Assigns a priority to the specified transform. Transforms are compared with incoming aliases in order of priority, and the priority must be unique for each transform.", "maximum": 65534, "minimum": 1, "type": "integer"}, "PatternBehavior": {"default": "Strip", "description": "How the alias is modified. Strip: removes the matching prefix or suffix from the alias. Replace: substitutes the matching part of the alias with the text in the replace string. AddPrefix: prepends the Additional text to the alias. AddSuffix: appends the Additional text to the alias.", "enum": ["Strip", "Replace", "AddPrefix", "AddSuffix"], "type": "string"}, "PatternReplaceString": {"description": "The text string to use in conjunction with the selected Pattern behavior.", "maxLength": 60, "minLength": 0, "type": "string"}, "PatternString": {"description": "The pattern against which the alias is compared.", "maxLength": 60, "minLength": 1, "type": "string"}, "PatternType": {"default": "Prefix", "description": "How the pattern string must match the alias for the transform to be applied. Exact: the entire string must exactly match the alias character for character. Prefix: the string must appear at the beginning of the alias. Suffix: the string must appear at the end of the alias. Regex: the string is treated as a regular expression.", "enum": ["Exact", "Prefix", "Suffix", "Regex"], "type": "string"}, "Priority": {"default": 1, "description": "Assigns a priority to the specified transform. Transforms are compared with incoming aliases in order of priority, and the priority must be unique for each transform.", "maximum": 65534, "minimum": 1, "type": "integer"}, "State": {"default": "Enabled", "description": "Indicates if the transform is enabled or disabled. Disabled transforms are ignored.", "enum": ["Enabled", "Disabled"], "type": "string"}}, "required": ["Priority"]}
    description: Updating the configuration of an existing transform
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: CRUD operations for Transform Rest API
/provisioning/common/transform/priority/<priority>: *id013
/provisioning/common/upgrade: &id071
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AutoReboot": {"default": "Yes", "description": "Reboots the node automatically after upgrade for the new software image to take effect", "pattern": "^(?i)(no|yes)$", "type": "string"}, "ClusterUpgrade": {"default": "No", "description": "Self upgrade or cluster upgrade", "pattern": "^(?i)(no|yes)$", "type": "string"}, "ImageDownloadMode": {"default": "SFTP", "description": "Image download mode", "pattern": "^(?i)(sftp|embedded)$", "type": "string"}, "UpgradeFileLocationSftpPath": {"description": "Location of Upgrade image on SFTP server.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "UpgradeFileName": {"description": "Upgrade image name.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "UpgradeFileSha512": {"description": "SHA512 of upgrade image.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "WaitForCallDisconnect": {"default": 0, "description": "No. of minutes to wait for call disconnect before upgrade.", "maximum": 60, "minimum": 0, "type": "integer"}}, "required": ["UpgradeFileLocationSftpPath", "UpgradeFileName", "UpgradeFileSha512"], "type": ["object"]}
    description: Create Update request for the config.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilitates creating upgrade request
/provisioning/common/zone/dnszone: &id014
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "Name of the zone to be deleted", "maxLength": 50, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: Delete the DNS zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Gets the zone configuration details for DNS zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AutomaticallyRespondToSIPSearches": {"default": "Off", "description": "Determines what happens when the Expressway receives a SIP search that originated as an H.323 search, destined for this zone. Off: a SIP OPTIONS message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "EnableNaptrMtlsOverride": {"default": "Off", "description": "Webex Zone feature flag (should only be used in conjunction with Webex zone) that allows the zone switch between advertizing MTLS port in Via and Record-Route based on finding SIPSM+D2T in a DNS NAPTR lookup.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "IncludeAddressRecord": {"default": "Off", "description": "Determines whether, if no NAPTR (SIP) or SRV (SIP and H.323) records have been found for the dialed alias via this zone, the Expressway will then query for A and AAAA DNS records. On: the Expressway will query for A or AAAA records. If any are found, the Expressway will not then query any lower priority zones. Off: the Expressway will not query for A and AAAA records and instead will continue with the search, querying the remaining lower priority zones. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "SIPAuthenticationTrustMode": {"default": "Off", "description": "Used in conjunction with the Authentication Policy to control whether pre-authenticated SIP messages (ones containing a P-Asserted-Identity header) received from this zone are trusted and are subsequently treated as authenticated or unauthenticated within the Expressway. On: pre-authenticated messages are trusted without further challenge and subsequently treated as authenticated within the Expressway. Unauthenticated messages are challenged if the Authentication Policy is set to Check credentials. Off: any existing authenticated indicators (the P-Asserted-Identity header) are removed from the message. Messages from a local domain are challenged if the Authentication Policy is set to Check credentials. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPDomainToSearchFor": {"description": "Enter a FQDN to find in DNS instead of searching for the domain on the outbound SIP URI. The original SIP URI is not affected. ", "maxLength": 225, "minLength": 0, "type": "string"}, "SIPFallbackTransportProtocol": {"default": "UDP", "description": "Determines which transport type is used for SIP calls from the DNS zone, when DNS NAPTR records and SIP URI parameters do not provide the preferred transport information. RFC 3263 suggests that UDP should be used. ", "enum": ["UDP", "TCP", "TLS"], "type": "string"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway for SIP calls (including interworked calls) to and from this zone.", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPModifyDnsRequest": {"default": "Off", "description": "Routes outbound SIP calls from this zone to a manually specified SIP domain instead of the domain in the dialed destination. This option is primarily intended for use with Cisco Spark Call Service. See www.cisco.com/go/hybrid-services. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressway's B2BUA preserves or rewrites the parameters in SIP requests routed via this zone. On preserves the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA. Off allows the B2BUA to rewrite the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA, if necessary.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\" such that if they are received by the local Expressway again they will be rejected. On: SIP requests sent out via this zone that are received again by this Expressway will be rejected. Off: SIP requests sent out via this zone that are received by this Expressway again will be processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPRecordRouteAddressType": {"default": "IP", "description": "Controls whether the Expressway uses its IP address or host name in the record-route or path headers of outgoing SIP requests to this zone. Note: setting this value to Hostname also requires a valid DNS system host name to be configured on the Expressway. ", "enum": ["IP", "Hostname"], "type": "string"}, "SIPTLSVerifyInboundMapping": {"default": "Off", "description": "Switch Inbound TLS mapping On to map inbound TLS connections to this zone if the peer certificate contains the TLS verify subject name. If the received certificate does not contain the TLS verify subject name (as CN or SAN), then the connection is not mapped to this zone. Switch Inbound TLS mapping Off to prevent the Expressway from attempting to map inbound TLS connections to this zone. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authentication between this Expressway and the traversal client. If enabled, a TLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifySubjectName": {"description": "The certificate holder's name to look for in the traversal client's X.509 certificate (must be in either the Subject Common Name or the Subject Alternative Name attributes).", "maxLength": 128, "minLength": 1, "type": "string"}, "SIPUDPBFCPFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/BFCP. This option may be required to enable interoperability with SIP devices that do not support the UDP/BFCP protocol. On: any media line referring to the UDP/BFCP protocol is replaced with TCP/BFCP and disabled. Off: INVITE requests are not modified. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUDPIXFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/UDT/IX or UDP/DTLS/UDT/IX. This option may be required to enable interoperability with SIP devices that do not support the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol. On: any media line referring to the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol is replaced with RTP/AVP and disabled. Off: INVITE requests are not modified. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SendEmptyINVITEForInterworkedCalls": {"default": "On", "description": "Determines whether the Expressway generates a SIP INVITE message with no SDP to send to this zone. INVITEs with no SDP mean that the destination device is asked to initiate the codec selection, and are used when the call has been interworked locally from H.323. On: SIP INVITEs with no SDP are generated and sent to this neighbor. Off: SIP INVITEs are generated and a pre-configured SDP is inserted before the INVITEs are sent to this neighbor. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "Status": {"descritpion": "Status of the zone", "type": "string"}, "ZoneProfile": {"default": "Default", "description": "Determines how the zone's advanced settings are configured. Default: uses the factory default profile. Custom: allows you to configure each setting individually. Alternatively, choose one of the preconfigured profiles to automatically use the appropriate settings required for connections to that type of system.", "enum": ["Default", "Custom", "Cisco Unified Communications Manager", "Cisco Unified Communications Manager(8.6.1 or 8.6.2)", "Cisco Unified Communications Manager(9.x or later)", "Nortel Communication Server 1000", "Infrastructure device"], "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AutomaticallyRespondToSIPSearches": {"default": "Off", "description": "Determines what happens when the Expressway receives a SIP search that originated as an H.323 search, destined for this zone. Off: a SIP OPTIONS message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "EnableNaptrMtlsOverride": {"default": "Off", "description": "Webex Zone feature flag (should only be used in conjunction with Webex zone) that allows the zone switch between advertizing MTLS port in Via and Record-Route based on finding SIPSM+D2T in a DNS NAPTR lookup.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "IncludeAddressRecord": {"default": "Off", "description": "Determines whether, if no NAPTR (SIP) or SRV (SIP and H.323) records have been found for the dialed alias via this zone, the Expressway will then query for A and AAAA DNS records. On: the Expressway will query for A or AAAA records. If any are found, the Expressway will not then query any lower priority zones. Off: the Expressway will not query for A and AAAA records and instead will continue with the search, querying the remaining lower priority zones. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "SIPAuthenticationTrustMode": {"default": "Off", "description": "Used in conjunction with the Authentication Policy to control whether pre-authenticated SIP messages (ones containing a P-Asserted-Identity header) received from this zone are trusted and are subsequently treated as authenticated or unauthenticated within the Expressway. On: pre-authenticated messages are trusted without further challenge and subsequently treated as authenticated within the Expressway. Unauthenticated messages are challenged if the Authentication Policy is set to Check credentials. Off: any existing authenticated indicators (the P-Asserted-Identity header) are removed from the message. Messages from a local domain are challenged if the Authentication Policy is set to Check credentials. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPDomainToSearchFor": {"description": "Enter a FQDN to find in DNS instead of searching for the domain on the outbound SIP URI. The original SIP URI is not affected. ", "maxLength": 225, "minLength": 0, "type": "string"}, "SIPFallbackTransportProtocol": {"default": "UDP", "description": "Determines which transport type is used for SIP calls from the DNS zone, when DNS NAPTR records and SIP URI parameters do not provide the preferred transport information. RFC 3263 suggests that UDP should be used. ", "enum": ["UDP", "TCP", "TLS"], "type": "string"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway for SIP calls (including interworked calls) to and from this zone.", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPModifyDnsRequest": {"default": "Off", "description": "Routes outbound SIP calls from this zone to a manually specified SIP domain instead of the domain in the dialed destination. This option is primarily intended for use with Cisco Spark Call Service. See www.cisco.com/go/hybrid-services. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressway's B2BUA preserves or rewrites the parameters in SIP requests routed via this zone. On preserves the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA. Off allows the B2BUA to rewrite the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA, if necessary.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\" such that if they are received by the local Expressway again they will be rejected. On: SIP requests sent out via this zone that are received again by this Expressway will be rejected. Off: SIP requests sent out via this zone that are received by this Expressway again will be processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPRecordRouteAddressType": {"default": "IP", "description": "Controls whether the Expressway uses its IP address or host name in the record-route or path headers of outgoing SIP requests to this zone. Note: setting this value to Hostname also requires a valid DNS system host name to be configured on the Expressway. ", "enum": ["IP", "Hostname"], "type": "string"}, "SIPTLSVerifyInboundMapping": {"default": "Off", "description": "Switch Inbound TLS mapping On to map inbound TLS connections to this zone if the peer certificate contains the TLS verify subject name. If the received certificate does not contain the TLS verify subject name (as CN or SAN), then the connection is not mapped to this zone. Switch Inbound TLS mapping Off to prevent the Expressway from attempting to map inbound TLS connections to this zone. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authentication between this Expressway and the traversal client. If enabled, a TLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifySubjectName": {"description": "The certificate holder's name to look for in the traversal client's X.509 certificate (must be in either the Subject Common Name or the Subject Alternative Name attributes).", "maxLength": 128, "minLength": 1, "type": "string"}, "SIPUDPBFCPFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/BFCP. This option may be required to enable interoperability with SIP devices that do not support the UDP/BFCP protocol. On: any media line referring to the UDP/BFCP protocol is replaced with TCP/BFCP and disabled. Off: INVITE requests are not modified. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUDPIXFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/UDT/IX or UDP/DTLS/UDT/IX. This option may be required to enable interoperability with SIP devices that do not support the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol. On: any media line referring to the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol is replaced with RTP/AVP and disabled. Off: INVITE requests are not modified. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SendEmptyINVITEForInterworkedCalls": {"default": "On", "description": "Determines whether the Expressway generates a SIP INVITE message with no SDP to send to this zone. INVITEs with no SDP mean that the destination device is asked to initiate the codec selection, and are used when the call has been interworked locally from H.323. On: SIP INVITEs with no SDP are generated and sent to this neighbor. Off: SIP INVITEs are generated and a pre-configured SDP is inserted before the INVITEs are sent to this neighbor. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "ZoneProfile": {"default": "Default", "description": "Determines how the zone's advanced settings are configured. Default: uses the factory default profile. Custom: allows you to configure each setting individually. Alternatively, choose one of the preconfigured profiles to automatically use the appropriate settings required for connections to that type of system.", "enum": ["Default", "Custom", "Cisco Unified Communications Manager", "Cisco Unified Communications Manager(8.6.1 or 8.6.2)", "Cisco Unified Communications Manager(9.x or later)", "Nortel Communication Server 1000", "Infrastructure device"], "type": "string"}}, "required": ["Name"]}
    description: creates DNS zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AutomaticallyRespondToSIPSearches": {"default": "Off", "description": "Determines what happens when the Expressway receives a SIP search that originated as an H.323 search, destined for this zone. Off: a SIP OPTIONS message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "EnableNaptrMtlsOverride": {"default": "Off", "description": "Webex Zone feature flag (should only be used in conjunction with Webex zone) that allows the zone switch between advertizing MTLS port in Via and Record-Route based on finding SIPSM+D2T in a DNS NAPTR lookup.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "IncludeAddressRecord": {"default": "Off", "description": "Determines whether, if no NAPTR (SIP) or SRV (SIP and H.323) records have been found for the dialed alias via this zone, the Expressway will then query for A and AAAA DNS records. On: the Expressway will query for A or AAAA records. If any are found, the Expressway will not then query any lower priority zones. Off: the Expressway will not query for A and AAAA records and instead will continue with the search, querying the remaining lower priority zones. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "NewName": {"description": "The new name of zone", "maxLength": 50, "minLength": 1, "type": "string"}, "SIPAuthenticationTrustMode": {"default": "Off", "description": "Used in conjunction with the Authentication Policy to control whether pre-authenticated SIP messages (ones containing a P-Asserted-Identity header) received from this zone are trusted and are subsequently treated as authenticated or unauthenticated within the Expressway. On: pre-authenticated messages are trusted without further challenge and subsequently treated as authenticated within the Expressway. Unauthenticated messages are challenged if the Authentication Policy is set to Check credentials. Off: any existing authenticated indicators (the P-Asserted-Identity header) are removed from the message. Messages from a local domain are challenged if the Authentication Policy is set to Check credentials. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPDomainToSearchFor": {"description": "Enter a FQDN to find in DNS instead of searching for the domain on the outbound SIP URI. The original SIP URI is not affected. ", "maxLength": 225, "minLength": 0, "type": "string"}, "SIPFallbackTransportProtocol": {"default": "UDP", "description": "Determines which transport type is used for SIP calls from the DNS zone, when DNS NAPTR records and SIP URI parameters do not provide the preferred transport information. RFC 3263 suggests that UDP should be used. ", "enum": ["UDP", "TCP", "TLS"], "type": "string"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway for SIP calls (including interworked calls) to and from this zone.", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPModifyDnsRequest": {"default": "Off", "description": "Routes outbound SIP calls from this zone to a manually specified SIP domain instead of the domain in the dialed destination. This option is primarily intended for use with Cisco Spark Call Service. See www.cisco.com/go/hybrid-services. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressway's B2BUA preserves or rewrites the parameters in SIP requests routed via this zone. On preserves the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA. Off allows the B2BUA to rewrite the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA, if necessary.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\" such that if they are received by the local Expressway again they will be rejected. On: SIP requests sent out via this zone that are received again by this Expressway will be rejected. Off: SIP requests sent out via this zone that are received by this Expressway again will be processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPRecordRouteAddressType": {"default": "IP", "description": "Controls whether the Expressway uses its IP address or host name in the record-route or path headers of outgoing SIP requests to this zone. Note: setting this value to Hostname also requires a valid DNS system host name to be configured on the Expressway. ", "enum": ["IP", "Hostname"], "type": "string"}, "SIPTLSVerifyInboundMapping": {"default": "Off", "description": "Switch Inbound TLS mapping On to map inbound TLS connections to this zone if the peer certificate contains the TLS verify subject name. If the received certificate does not contain the TLS verify subject name (as CN or SAN), then the connection is not mapped to this zone. Switch Inbound TLS mapping Off to prevent the Expressway from attempting to map inbound TLS connections to this zone. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authentication between this Expressway and the traversal client. If enabled, a TLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifySubjectName": {"description": "The certificate holder's name to look for in the traversal client's X.509 certificate (must be in either the Subject Common Name or the Subject Alternative Name attributes).", "maxLength": 128, "minLength": 1, "type": "string"}, "SIPUDPBFCPFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/BFCP. This option may be required to enable interoperability with SIP devices that do not support the UDP/BFCP protocol. On: any media line referring to the UDP/BFCP protocol is replaced with TCP/BFCP and disabled. Off: INVITE requests are not modified. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUDPIXFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/UDT/IX or UDP/DTLS/UDT/IX. This option may be required to enable interoperability with SIP devices that do not support the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol. On: any media line referring to the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol is replaced with RTP/AVP and disabled. Off: INVITE requests are not modified. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SendEmptyINVITEForInterworkedCalls": {"default": "On", "description": "Determines whether the Expressway generates a SIP INVITE message with no SDP to send to this zone. INVITEs with no SDP mean that the destination device is asked to initiate the codec selection, and are used when the call has been interworked locally from H.323. On: SIP INVITEs with no SDP are generated and sent to this neighbor. Off: SIP INVITEs are generated and a pre-configured SDP is inserted before the INVITEs are sent to this neighbor. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "ZoneProfile": {"default": "Default", "description": "Determines how the zone's advanced settings are configured. Default: uses the factory default profile. Custom: allows you to configure each setting individually. Alternatively, choose one of the preconfigured profiles to automatically use the appropriate settings required for connections to that type of system.", "enum": ["Default", "Custom", "Cisco Unified Communications Manager", "Cisco Unified Communications Manager(8.6.1 or 8.6.2)", "Cisco Unified Communications Manager(9.x or later)", "Nortel Communication Server 1000", "Infrastructure device"], "type": "string"}}, "required": ["Name"]}
    description: updates the existing DNS zone configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: facilitates create, read, update and delete (CRUD) operations for DNS zone
/provisioning/common/zone/dnszone/name/<name>: *id014
/provisioning/common/zone/neighborzone: &id015
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "Name of the zone to be deleted", "maxLength": 50, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: Delete the zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Reads the Zone data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages from this zone and whether they are subsequently treated as authenticated, unauthenticated, or are rejected. The behavior varies for H.323 messages, SIP messages that originate from a local domain and SIP messages that originate from non-local domains.", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AutomaticallyRespondToH323Searches": {"default": "Off", "description": "Determines what happens when the Expressway receives an H.323 search, destined for this zone. Off: an LRQ message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "AutomaticallyRespondToSIPSearches": {"default": "Off", "description": "Determines what happens when the Expressway receives a SIP search that originated as an H.323 search, destined for this zone. Off: a SIP OPTIONS  message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "CallSignalingRoutedMode": {"default": "Auto", "description": "Specifies how the Expressway handles the signaling for calls to and from this neighbor. Auto: signaling is taken as determined by the Call routed mode configuration. Always: signaling is always taken for calls to or from this neighbor, regardless of the Call routed mode configuration.", "enum": ["Auto", "Always"], "type": "string"}, "H323CallSignalingPort": {"default": 1720, "description": "Specifies the port on the neighbor to be used for H.323 calls to and from this Expressway.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "InterworkingSIPSearchStrategy": {"default": "Options", "description": "Determines how the Expressway searches for SIP endpoints when interworking an H.323 call. Options: the Expressway sends an OPTIONS request,Info: the Expressway sends an INFO request.", "enum": ["Options", "Info"], "type": "string"}, "MonitorPeerStatus": {"default": "Yes", "description": "Specifies whether the Expressway monitors the status of the zones peers. If enabled, H.323 LRQs and/or SIP OPTIONS are periodically sent to the peers. If a peer fails to respond, that peer is marked as inactive. If all peers fail to respond the zone is marked as inactive", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server. If you are using secure traversal, then this value must be either the Common Name or one of the Subject Alternate Names on the traversal servers certificate. IP addresses or hostnames are therefore not recommended. If the traversal server is a cluster of Expressway-Es, this is the FQDN of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "SIPAuthenticationTrustMode": {"default": "Off", "description": "Used in conjunction with the Authentication Policy to control whether pre-authenticated SIP messages (ones containing a P-Asserted-Identity header) received from this zone are trusted and are subsequently treated as authenticated or unauthenticated within the Expressway. On: pre-authenticated messages are trusted without further challenge and subsequently treated as authenticated within the Expressway. Unauthenticated messages are challenged if the Authentication Policy is set to Check credentials. Off: any existing authenticated indicators (the P-Asserted-Identity header) are removed from the message. Messages from a local domain are challenged if the Authentication Policy is set to Check credentials.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPEncryptionMode": {"default": "Auto", "description": "Determines whether or not the Expressway allows encrypted SIP calls on this zone. Auto: SIP calls are encrypted if a secure SIP transport (TLS) is used. Microsoft: SIP calls are encrypted using MS-SRTP. Off: SIP calls are never encrypted.", "enum": ["Auto", "Microsoft", "Off"], "type": "string"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway for SIP calls (including interworked calls) to and from this zone. Auto: no specific media encryption policy is applied by the Expressway. Media encryption is purely dependent on endpoint requests. Best effort: use encryption if available, otherwise fall back to unencrypted media. ForceEncrypted (Force encrypted): all media must be encrypted. ForceunEncrypted (Force unencrypted): all media must be unencrypted. ", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted", "CucmBestEffort"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultipartMIMEStripMode": {"default": "Off", "description": "Controls whether multipart MIME stripping is performed on requests from this zone. This must be set to On for connections to a Microsoft Office Communications Server 2007.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devices in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether B2BUA in this node preserves or rewrites the parameters in SIP requests routed via this zone", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone will be poisoned such that if they are received by the local Expressway again they will be rejected ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPProxyRequireHeaderStripList": {"description": "A comma separated list of option tags to search for and remove from Proxy-Require headers in SIP requests received from this zone. By default, no option tags are specified", "maxLength": 255, "minLength": 0, "type": "string"}, "SIPREFERMode": {"default": "Forward", "description": "Determines how SIP REFER requests are handled. Forward: SIP REFER requests are forwarded to the target. Terminate: SIP REFER requests are terminated by the Expressway.", "enum": ["Forward", "Terminate"], "type": "string"}, "SIPRecordRouteAddressType": {"default": "IP", "description": "Controls whether the Expressway uses its IP address or host name in the record-route or path headers of outgoing SIP requests to this zone. Note: setting this value to Hostname also requires a valid DNS system host name to be configured on the Expressway.", "enum": ["IP", "Hostname"], "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authenticationbetween this Expressway and the traversal client. If enabled,aTLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTransport": {"default": "TLS", "description": "The transport protocol to use for SIP calls to and from thetraversal client.", "enum": ["TLS", "UDP", "TCP"], "type": "string"}, "SIPUDPBFCPFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/BFCP This option may be required to enable interoperability with SIP devices that do not support the UDP/BFCP protocol. On: any media line referring to the UDP/BFCP protocol is replaced with TCP/BFCP and disabled. Off: INVITE requests are not modified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUDPIXFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/UDT/IX or UDP/DTLS/UDT/IX. This option may be required to enable interoperability with SIP devices that do not support the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol.On: any media line referring to the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol is replaced with RTP/AVP and disabled. Off: INVITE requests are not modified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUPDATEStripMode": {"default": "Off", "description": "Determines whether or not the Expressway strips the UPDATE method from the Allow header of all requests and responses received from, and sent to, this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SendEmptyINVITEForInterworkedCalls": {"default": "Off", "description": "Determines whether the Expressway generates a SIP INVITE message with no SDP to send to this zone. INVITEs with no SDP mean that the destination device is asked to initiate the codec selection, and are used when the call has been interworked locally from H.323. On: SIP INVITEs with no SDP are generated and sent to this neighbor. Off: SIP INVITEs are generated and a pre-configured SDP is inserted before the INVITEs are sent to this neighbor.", "pattern": "^(?i)(on|off)$", "type": "string"}, "Status": {"description": "The status of the zone", "maxLength": 1024, "minLength": 1, "type": "string"}, "SystemGenerated": {"default": "No", "description": "Specifies whether zone configuration editable or only viewable", "pattern": "^(?i)(yes|no)$", "type": "string"}, "ZoneProfile": {"default": "Default", "description": "Determines how the zone's advanced settings are configured. Default: uses the factory default profile. Custom: allows you to configure each setting individually. Alternatively, choose one of the preconfigured profiles to automatically use the appropriate settings required for connections to that type of system.", "enum": ["Default", "Custom", "Cisco Unified Communications Manager", "Cisco Unified Communications Manager(8.6.1 or 8.6.2)", "Cisco Unified Communications Manager(9.x or later)", "Nortel Communication Server 1000", "Infrastructure device", "Microsoft Infrastructure", "Unified Communications"], "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages from this zone and whether they are subsequently treated as authenticated, unauthenticated, or are rejected. The behavior varies for H.323 messages, SIP messages that originate from a local domain and SIP messages that originate from non-local domains.", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AutomaticallyRespondToH323Searches": {"default": "Off", "description": "Determines what happens when the Expressway receives an H.323 search, destined for this zone. Off: an LRQ message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "AutomaticallyRespondToSIPSearches": {"default": "Off", "description": "Determines what happens when the Expressway receives a SIP search that originated as an H.323 search, destined for this zone. Off: a SIP OPTIONS  message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "CallSignalingRoutedMode": {"default": "Auto", "description": "Specifies how the Expressway handles the signaling for calls to and from this neighbor. Auto: signaling is taken as determined by the Call routed mode configuration. Always: signaling is always taken for calls to or from this neighbor, regardless of the Call routed mode configuration.", "enum": ["Auto", "Always"], "type": "string"}, "H323CallSignalingPort": {"default": 1720, "description": "Specifies the port on the neighbor to be used for H.323 calls to and from this Expressway.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "InterworkingSIPSearchStrategy": {"default": "Options", "description": "Determines how the Expressway searches for SIP endpoints when interworking an H.323 call. Options: the Expressway sends an OPTIONS request,Info: the Expressway sends an INFO request.", "enum": ["Options", "Info"], "type": "string"}, "MonitorPeerStatus": {"default": "Yes", "description": "Specifies whether the Expressway monitors the status of the zones peers. If enabled, H.323 LRQs and/or SIP OPTIONS are periodically sent to the peers. If a peer fails to respond, that peer is marked as inactive. If all peers fail to respond the zone is marked as inactive", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server. If you are using secure traversal, then this value must be either the Common Name or one of the Subject Alternate Names on the traversal servers certificate. IP addresses or hostnames are therefore not recommended. If the traversal server is a cluster of Expressway-Es, this is the FQDN of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "SIPAuthenticationTrustMode": {"default": "Off", "description": "Used in conjunction with the Authentication Policy to control whether pre-authenticated SIP messages (ones containing a P-Asserted-Identity header) received from this zone are trusted and are subsequently treated as authenticated or unauthenticated within the Expressway. On: pre-authenticated messages are trusted without further challenge and subsequently treated as authenticated within the Expressway. Unauthenticated messages are challenged if the Authentication Policy is set to Check credentials. Off: any existing authenticated indicators (the P-Asserted-Identity header) are removed from the message. Messages from a local domain are challenged if the Authentication Policy is set to Check credentials.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPEncryptionMode": {"default": "Auto", "description": "Determines whether or not the Expressway allows encrypted SIP calls on this zone. Auto: SIP calls are encrypted if a secure SIP transport (TLS) is used. Microsoft: SIP calls are encrypted using MS-SRTP. Off: SIP calls are never encrypted.", "enum": ["Auto", "Microsoft", "Off"], "type": "string"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway for SIP calls (including interworked calls) to and from this zone. Auto: no specific media encryption policy is applied by the Expressway. Media encryption is purely dependent on endpoint requests. Best effort: use encryption if available, otherwise fall back to unencrypted media. ForceEncrypted (Force encrypted): all media must be encrypted. ForceunEncrypted (Force unencrypted): all media must be unencrypted. ", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted", "CucmBestEffort"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultipartMIMEStripMode": {"default": "Off", "description": "Controls whether multipart MIME stripping is performed on requests from this zone. This must be set to On for connections to a Microsoft Office Communications Server 2007.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devices in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether B2BUA in this node preserves or rewrites the parameters in SIP requests routed via this zone", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone will be poisoned such that if they are received by the local Expressway again they will be rejected ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPProxyRequireHeaderStripList": {"description": "A comma separated list of option tags to search for and remove from Proxy-Require headers in SIP requests received from this zone. By default, no option tags are specified", "maxLength": 255, "minLength": 0, "type": "string"}, "SIPREFERMode": {"default": "Forward", "description": "Determines how SIP REFER requests are handled. Forward: SIP REFER requests are forwarded to the target. Terminate: SIP REFER requests are terminated by the Expressway.", "enum": ["Forward", "Terminate"], "type": "string"}, "SIPRecordRouteAddressType": {"default": "IP", "description": "Controls whether the Expressway uses its IP address or host name in the record-route or path headers of outgoing SIP requests to this zone. Note: setting this value to Hostname also requires a valid DNS system host name to be configured on the Expressway.", "enum": ["IP", "Hostname"], "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authenticationbetween this Expressway and the traversal client. If enabled,aTLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTransport": {"default": "TLS", "description": "The transport protocol to use for SIP calls to and from thetraversal client.", "enum": ["TLS", "UDP", "TCP"], "type": "string"}, "SIPUDPBFCPFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/BFCP This option may be required to enable interoperability with SIP devices that do not support the UDP/BFCP protocol. On: any media line referring to the UDP/BFCP protocol is replaced with TCP/BFCP and disabled. Off: INVITE requests are not modified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUDPIXFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/UDT/IX or UDP/DTLS/UDT/IX. This option may be required to enable interoperability with SIP devices that do not support the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol.On: any media line referring to the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol is replaced with RTP/AVP and disabled. Off: INVITE requests are not modified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUPDATEStripMode": {"default": "Off", "description": "Determines whether or not the Expressway strips the UPDATE method from the Allow header of all requests and responses received from, and sent to, this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SendEmptyINVITEForInterworkedCalls": {"default": "Off", "description": "Determines whether the Expressway generates a SIP INVITE message with no SDP to send to this zone. INVITEs with no SDP mean that the destination device is asked to initiate the codec selection, and are used when the call has been interworked locally from H.323. On: SIP INVITEs with no SDP are generated and sent to this neighbor. Off: SIP INVITEs are generated and a pre-configured SDP is inserted before the INVITEs are sent to this neighbor.", "pattern": "^(?i)(on|off)$", "type": "string"}, "ZoneProfile": {"default": "Default", "description": "Determines how the zone's advanced settings are configured. Default: uses the factory default profile. Custom: allows you to configure each setting individually. Alternatively, choose one of the preconfigured profiles to automatically use the appropriate settings required for connections to that type of system.", "enum": ["Default", "Custom", "Cisco Unified Communications Manager", "Cisco Unified Communications Manager(8.6.1 or 8.6.2)", "Cisco Unified Communications Manager(9.x or later)", "Nortel Communication Server 1000", "Infrastructure device", "Microsoft Infrastructure", "Unified Communications"], "type": "string"}}, "required": ["Name", "PeerAddress"]}
    description: creates Neighbor zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages from this zone and whether they are subsequently treated as authenticated, unauthenticated, or are rejected. The behavior varies for H.323 messages, SIP messages that originate from a local domain and SIP messages that originate from non-local domains.", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AutomaticallyRespondToH323Searches": {"default": "Off", "description": "Determines what happens when the Expressway receives an H.323 search, destined for this zone. Off: an LRQ message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "AutomaticallyRespondToSIPSearches": {"default": "Off", "description": "Determines what happens when the Expressway receives a SIP search that originated as an H.323 search, destined for this zone. Off: a SIP OPTIONS  message is sent to the zone. On: searches are responded to automatically, without being forwarded to the zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "CallSignalingRoutedMode": {"default": "Auto", "description": "Specifies how the Expressway handles the signaling for calls to and from this neighbor. Auto: signaling is taken as determined by the Call routed mode configuration. Always: signaling is always taken for calls to or from this neighbor, regardless of the Call routed mode configuration.", "enum": ["Auto", "Always"], "type": "string"}, "H323CallSignalingPort": {"default": 1720, "description": "Specifies the port on the neighbor to be used for H.323 calls to and from this Expressway.", "maximum": 65534, "minimum": 1024, "type": "integer"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "InterworkingSIPSearchStrategy": {"default": "Options", "description": "Determines how the Expressway searches for SIP endpoints when interworking an H.323 call. Options: the Expressway sends an OPTIONS request,Info: the Expressway sends an INFO request.", "enum": ["Options", "Info"], "type": "string"}, "MonitorPeerStatus": {"default": "Yes", "description": "Specifies whether the Expressway monitors the status of the zones peers. If enabled, H.323 LRQs and/or SIP OPTIONS are periodically sent to the peers. If a peer fails to respond, that peer is marked as inactive. If all peers fail to respond the zone is marked as inactive", "pattern": "^(?i)(yes|no)$", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "NewName": {"description": "The new name of zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server. If you are using secure traversal, then this value must be either the Common Name or one of the Subject Alternate Names on the traversal servers certificate. IP addresses or hostnames are therefore not recommended. If the traversal server is a cluster of Expressway-Es, this is the FQDN of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "SIPAuthenticationTrustMode": {"default": "Off", "description": "Used in conjunction with the Authentication Policy to control whether pre-authenticated SIP messages (ones containing a P-Asserted-Identity header) received from this zone are trusted and are subsequently treated as authenticated or unauthenticated within the Expressway. On: pre-authenticated messages are trusted without further challenge and subsequently treated as authenticated within the Expressway. Unauthenticated messages are challenged if the Authentication Policy is set to Check credentials. Off: any existing authenticated indicators (the P-Asserted-Identity header) are removed from the message. Messages from a local domain are challenged if the Authentication Policy is set to Check credentials.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPEncryptionMode": {"default": "Auto", "description": "Determines whether or not the Expressway allows encrypted SIP calls on this zone. Auto: SIP calls are encrypted if a secure SIP transport (TLS) is used. Microsoft: SIP calls are encrypted using MS-SRTP. Off: SIP calls are never encrypted.", "enum": ["Auto", "Microsoft", "Off"], "type": "string"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway for SIP calls (including interworked calls) to and from this zone. Auto: no specific media encryption policy is applied by the Expressway. Media encryption is purely dependent on endpoint requests. Best effort: use encryption if available, otherwise fall back to unencrypted media. ForceEncrypted (Force encrypted): all media must be encrypted. ForceunEncrypted (Force unencrypted): all media must be unencrypted. ", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted", "CucmBestEffort"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultipartMIMEStripMode": {"default": "Off", "description": "Controls whether multipart MIME stripping is performed on requests from this zone. This must be set to On for connections to a Microsoft Office Communications Server 2007.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devices in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether B2BUA in this node preserves or rewrites the parameters in SIP requests routed via this zone", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone will be poisoned such that if they are received by the local Expressway again they will be rejected ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPProxyRequireHeaderStripList": {"description": "A comma separated list of option tags to search for and remove from Proxy-Require headers in SIP requests received from this zone. By default, no option tags are specified", "maxLength": 255, "minLength": 0, "type": "string"}, "SIPREFERMode": {"default": "Forward", "description": "Determines how SIP REFER requests are handled. Forward: SIP REFER requests are forwarded to the target. Terminate: SIP REFER requests are terminated by the Expressway.", "enum": ["Forward", "Terminate"], "type": "string"}, "SIPRecordRouteAddressType": {"default": "IP", "description": "Controls whether the Expressway uses its IP address or host name in the record-route or path headers of outgoing SIP requests to this zone. Note: setting this value to Hostname also requires a valid DNS system host name to be configured on the Expressway.", "enum": ["IP", "Hostname"], "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authenticationbetween this Expressway and the traversal client. If enabled,aTLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTransport": {"default": "TLS", "description": "The transport protocol to use for SIP calls to and from thetraversal client.", "enum": ["TLS", "UDP", "TCP"], "type": "string"}, "SIPUDPBFCPFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/BFCP This option may be required to enable interoperability with SIP devices that do not support the UDP/BFCP protocol. On: any media line referring to the UDP/BFCP protocol is replaced with TCP/BFCP and disabled. Off: INVITE requests are not modified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUDPIXFilterMode": {"default": "Off", "description": "Determines whether INVITE requests sent to this zone filter out UDP/UDT/IX or UDP/DTLS/UDT/IX. This option may be required to enable interoperability with SIP devices that do not support the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol.On: any media line referring to the UDP/UDT/IX or UDP/DTLS/UDT/IX protocol is replaced with RTP/AVP and disabled. Off: INVITE requests are not modified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPUPDATEStripMode": {"default": "Off", "description": "Determines whether or not the Expressway strips the UPDATE method from the Allow header of all requests and responses received from, and sent to, this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SendEmptyINVITEForInterworkedCalls": {"default": "Off", "description": "Determines whether the Expressway generates a SIP INVITE message with no SDP to send to this zone. INVITEs with no SDP mean that the destination device is asked to initiate the codec selection, and are used when the call has been interworked locally from H.323. On: SIP INVITEs with no SDP are generated and sent to this neighbor. Off: SIP INVITEs are generated and a pre-configured SDP is inserted before the INVITEs are sent to this neighbor.", "pattern": "^(?i)(on|off)$", "type": "string"}, "ZoneProfile": {"default": "Default", "description": "Determines how the zone's advanced settings are configured. Default: uses the factory default profile. Custom: allows you to configure each setting individually. Alternatively, choose one of the preconfigured profiles to automatically use the appropriate settings required for connections to that type of system.", "enum": ["Default", "Custom", "Cisco Unified Communications Manager", "Cisco Unified Communications Manager(8.6.1 or 8.6.2)", "Cisco Unified Communications Manager(9.x or later)", "Nortel Communication Server 1000", "Infrastructure device", "Microsoft Infrastructure", "Unified Communications"], "type": "string"}}, "required": ["Name"]}
    description: updates zone configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: facilitates creation , updation and read of Client zone
/provisioning/common/zone/neighborzone/name/<name>: *id015
/provisioning/configuration/allowlist/autopaths: &id072
  GET:
    body: {}
    description: HTTP Get endpoint logic to retrieve auto generated HTTPAllowList records
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"methods": {"description": "Comma seperated list of which HTTP methodsare allowed by this rule. Empty string touse configured default methods.", "pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}, "path": {"description": "Url path to allow MRA clients access to outside of enterprise network.", "minLength": 0, "type": "string"}, "ports": {"description": "Ports for which this http allow rule is applied.", "maxLength": 1024, "minLength": 1, "type": "string"}, "protocol": {"description": "Protocol for which this http allow rule is applied.", "enum": ["http", "https", "wss"]}, "servertype": {"description": "The type of server for this HTTP allow rule.", "enum": ["cms", "cucm", "cup", "ucxn", "tftp", "jabberc"]}, "uuid": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: Moebius API endpoint for HTTPAllowListAuto resource
/provisioning/configuration/allowlist/control: &id073
  GET:
    body: {}
    description: This is a single record endpoint. Perform a HTTP GET against this resource
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"methods": {"pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"methods": {"pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}}}
    description: update the singleton control record data will already be matched against a valid regular expression for this field at this point
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Moebius API Endpoint for HTTPAllowListControl resource
/provisioning/configuration/allowlist/manualpaths: &id074
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"description": {"description": "A Meaningful description for this rule, to help you recognise its purpose.", "maxLength": 1024, "minLength": 1, "type": "string"}, "matchtype": {"default": "exact", "description": "Defines how closely the client-supplied URL should match the rule.", "enum": ["exact", "prefix"], "type": "string"}, "methods": {"description": "Comma seperated list of which HTTP methodsare allowed by this rule. Empty string touse configured default methods.", "pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}, "url": {"description": "URL to allow MRA clients to access from outside the enterprise network.", "maxLength": 1024, "minLength": 1, "pattern": "((wss|http|https):\\/\\/(.*):(\\d+)(\\/.*)?)", "type": "string"}, "uuid": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}}
    description: delete record.
  GET:
    body: {}
    description: Read all manually created HTTP allow list rules and modify them so they are consistent with what information we present to the customer. sanitised_keys shows the information we are presenting.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"items": {"properties": {"description": {"description": "A Meaningful description for this rule, to help you recognise its purpose.", "maxLength": 1024, "minLength": 1, "type": "string"}, "matchtype": {"default": "exact", "description": "Defines how closely the client-supplied URL should match the rule.", "enum": ["exact", "prefix"], "type": "string"}, "methods": {"description": "Comma seperated list of which HTTP methodsare allowed by this rule. Empty string touse configured default methods.", "pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}, "url": {"description": "URL to allow MRA clients to access from outside the enterprise network.", "maxLength": 1024, "minLength": 1, "pattern": "((wss|http|https):\\/\\/(.*):(\\d+)(\\/.*)?)", "type": "string"}, "uuid": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"description": {"description": "A Meaningful description for this rule, to help you recognise its purpose.", "maxLength": 1024, "minLength": 1, "type": "string"}, "matchtype": {"default": "exact", "description": "Defines how closely the client-supplied URL should match the rule.", "enum": ["exact", "prefix"], "type": "string"}, "methods": {"description": "Comma seperated list of which HTTP methodsare allowed by this rule. Empty string touse configured default methods.", "pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}, "url": {"description": "URL to allow MRA clients to access from outside the enterprise network.", "maxLength": 1024, "minLength": 1, "pattern": "((wss|http|https):\\/\\/(.*):(\\d+)(\\/.*)?)", "type": "string"}, "uuid": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}}
    description: create a new manual HTTP allow list rule.
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"description": {"description": "A Meaningful description for this rule, to help you recognise its purpose.", "maxLength": 1024, "minLength": 1, "type": "string"}, "matchtype": {"default": "exact", "description": "Defines how closely the client-supplied URL should match the rule.", "enum": ["exact", "prefix"], "type": "string"}, "methods": {"description": "Comma seperated list of which HTTP methodsare allowed by this rule. Empty string touse configured default methods.", "pattern": "(((GET|PUT|POST|DELETE|OPTIONS|HEAD|PATCH|CONNECT),?)+|^$)", "type": "string"}, "url": {"description": "URL to allow MRA clients to access from outside the enterprise network.", "maxLength": 1024, "minLength": 1, "pattern": "((wss|http|https):\\/\\/(.*):(\\d+)(\\/.*)?)", "type": "string"}, "uuid": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}}
    description: Update record. Must provide the uuid and all fields needing to be updated
  description: API Endpoint For Creating/Reading/Updating manual HTTP allow list records
/provisioning/controller/b2bua/microsoftinterop/configuration: &id075
  GET:
    body: {}
    description: Gets Microsoft Interoperability configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "properties": {"destinationAddress": {"description": "The IP address or Fully Qualified Domain Name (FQDN) of the Microsoft server where the                         Expressway sends signaling messages for Microsoft soft clients. Note: You must also add all                        Microsoft servers that can send signaling to the Expressway as trusted hosts.", "maxLength": 1024, "minLength": 0, "type": "string"}, "expresswayB2BUAPort": {"default": 65070, "description": "The port used on the B2BUA for communicating with the Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "expresswayEncryption": {"default": "auto", "description": "Controls how the B2BUA handles encrypted and unencrypted call legs (there is a call leg on                         either side of the B2BUA;one to the Microsoft client, the other to the Cisco endpoint).                        \\u00a0Required: both legs of the call must be encrypted.Auto: encrypted and unencrypted                         combinations are supported. This means that one leg of the call could be encrypted while                         the other leg could be unencrypted. \n", "enum": ["auto", "off", "on", "best_effort", "cucm_best_effort"], "type": "string"}, "hopCount": {"default": 70, "description": "Specifies the Max-Forwards value to use in SIP messages.\\u00a0", "maximum": 255, "minimum": 1, "type": "integer"}, "impServer_1": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_2": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_3": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_4": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_5": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_6": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "inBoundSipBrokerEnabled": {"default": "off", "description": "If\\u00a0Yes, the Expressway inspects inbound Microsoft SIP, and forwards messaging and                         presence traffic towards the specified external servers. The Expressway itself still handles                        the audio/video messages.If No, the Expressway attempts to process all inbound Microsoft SIP.", "enum": ["on", "off"], "type": "string"}, "inBoundSipBrokerPort": {"default": 5061, "description": "The listening port on the external presence messaging servers. The port must be listening                         on the same transport protocol that is used by the Microsoft server to the Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "index": {"description": "Index value of record", "minLength": 1, "type": "string"}, "listeningPort": {"default": 5061, "description": "The IP port on the Hardware Load Balancer, Director or Front End                         Processor to which the Expressway sends the signaling messages. ", "maximum": 65535, "minimum": 1024, "type": "integer"}, "mediaPortRangeEnd": {"default": 57000, "description": "The upper port in the range used by the B2BUA for handling media. Ensure that the port range                        does not overlap with other port ranges used by this Expressway or this Expressway's TURN                         server.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "mediaPortRangeStart": {"default": 56000, "description": "The lower port in the range used by the B2BUA for handling media. Ensure that the port range                         does not overlap with other port ranges used by this Expressway or this Expressway's TURN                         server.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "microsoftB2BUAPort": {"default": 65072, "description": "The port used on the B2BUA for communicating with the Microsoft server. ", "maximum": 65535, "minimum": 1024, "type": "integer"}, "microsoftEncryption": {"default": "auto", "description": "Controls how the B2BUA handles encrypted and unencrypted call legs (there is a call leg on                         either side of the B2BUA; one to the Microsoft client, the other to the Cisco endpoint).                        \\u00a0Required: both legs of the call must be encrypted. Auto: encrypted and unencrypted                         combinations are supported. This means that one leg of the call could be encrypted while                         the other leg could be unencrypted. \n", "enum": ["auto", "off", "on", "best_effort", "cucm_best_effort"], "type": "string"}, "minimumSessionRefreshInterval": {"default": 500, "description": "The minimum value the B2BUA will negotiate for the session refresh interval for SIP calls.                         For further information refer to the definition of Min-SE header in RFC 4028. ", "maximum": 65535, "minimum": 90, "type": "integer"}, "mode": {"default": "off", "description": "Enables or disables Microsoft interoperability. Required:                         Microsoft Interoperability option key", "enum": ["on", "off"], "type": "string"}, "rdpMaxSessions": {"default": 10, "description": "Enter a value to limit the number of simultaneous RDP transcoding sessions on the Expressway.                         Higher values will mean that more system resources can be consumed by RDP transcoding,                         which could impact other services.", "maxLength": 100, "minLength": 1, "type": "integer"}, "rdpTcpPortRangeEnd": {"default": 6099, "description": "Defines the end of the range on which the B2BUA listens for TCP media from the client sending                         RDP. Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "rdpTcpPortRangeStart": {"default": 6000, "description": "Defines the start of the range on which the B2BUA listens for TCP media from the client                         sending RDP. Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "rdpTranscodingEnabled": {"default": "off", "description": "Controls whether the B2BUA offers Remote Desktop Protocol transcoding. ", "enum": ["on", "off"], "type": "string"}, "rdpUdpPortRangeEnd": {"default": 6199, "description": "Defines the end of the range on which the B2BUA sends UDP media to the client receiving the                         transcoded RDP.Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maxLength": 65535, "minLength": 1024, "type": "integer"}, "rdpUdpPortRangeStart": {"default": 6100, "description": "Defines the start of the range on which the B2BUA sends UDP media to the client receiving the                        transcoded RDP. Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "sessionRefreshInterval": {"default": 1800, "description": "The maximum time allowed between session refresh requests for SIP calls.                         For further information refer to the definition of Session-Expires in RFC 4028. ", "maximum": 65535, "minimum": 90, "type": "integer"}, "signallingTransport": {"default": "TLS", "description": "The transport type used for connection to the Microsoft infrastructure.", "enum": ["TCP", "TLS"], "type": "string"}, "turnServiceOffering": {"default": "off", "description": "Controls whether the B2BUA offers TURN services. This is recommended for calls traversing                         a Microsoft Edge server.\\u00a0", "enum": ["on", "off"], "type": "string"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"properties": {"destinationAddress": {"description": "The IP address or Fully Qualified Domain Name (FQDN) of the Microsoft server where the                         Expressway sends signaling messages for Microsoft soft clients. Note: You must also add all                        Microsoft servers that can send signaling to the Expressway as trusted hosts.", "maxLength": 1024, "minLength": 0, "type": "string"}, "expresswayB2BUAPort": {"default": 65070, "description": "The port used on the B2BUA for communicating with the Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "expresswayEncryption": {"default": "auto", "description": "Controls how the B2BUA handles encrypted and unencrypted call legs (there is a call leg on                         either side of the B2BUA;one to the Microsoft client, the other to the Cisco endpoint).                        \\u00a0Required: both legs of the call must be encrypted.Auto: encrypted and unencrypted                         combinations are supported. This means that one leg of the call could be encrypted while                         the other leg could be unencrypted. \n", "enum": ["auto", "off", "on", "best_effort", "cucm_best_effort"], "type": "string"}, "hopCount": {"default": 70, "description": "Specifies the Max-Forwards value to use in SIP messages.\\u00a0", "maximum": 255, "minimum": 1, "type": "integer"}, "impServer_1": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_2": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_3": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_4": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_5": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "impServer_6": {"description": "Hostname, IP address, or Fully Qualified Domain Name of                         an external presence messaging server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "inBoundSipBrokerEnabled": {"default": "off", "description": "If\\u00a0Yes, the Expressway inspects inbound Microsoft SIP, and forwards messaging and                         presence traffic towards the specified external servers. The Expressway itself still handles                        the audio/video messages.If No, the Expressway attempts to process all inbound Microsoft SIP.", "enum": ["on", "off"], "type": "string"}, "inBoundSipBrokerPort": {"default": 5061, "description": "The listening port on the external presence messaging servers. The port must be listening                         on the same transport protocol that is used by the Microsoft server to the Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "index": {"description": "Index value of record", "minLength": 1, "type": "string"}, "listeningPort": {"default": 5061, "description": "The IP port on the Hardware Load Balancer, Director or Front End                         Processor to which the Expressway sends the signaling messages. ", "maximum": 65535, "minimum": 1024, "type": "integer"}, "mediaPortRangeEnd": {"default": 57000, "description": "The upper port in the range used by the B2BUA for handling media. Ensure that the port range                        does not overlap with other port ranges used by this Expressway or this Expressway's TURN                         server.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "mediaPortRangeStart": {"default": 56000, "description": "The lower port in the range used by the B2BUA for handling media. Ensure that the port range                         does not overlap with other port ranges used by this Expressway or this Expressway's TURN                         server.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "microsoftB2BUAPort": {"default": 65072, "description": "The port used on the B2BUA for communicating with the Microsoft server. ", "maximum": 65535, "minimum": 1024, "type": "integer"}, "microsoftEncryption": {"default": "auto", "description": "Controls how the B2BUA handles encrypted and unencrypted call legs (there is a call leg on                         either side of the B2BUA; one to the Microsoft client, the other to the Cisco endpoint).                        \\u00a0Required: both legs of the call must be encrypted. Auto: encrypted and unencrypted                         combinations are supported. This means that one leg of the call could be encrypted while                         the other leg could be unencrypted. \n", "enum": ["auto", "off", "on", "best_effort", "cucm_best_effort"], "type": "string"}, "minimumSessionRefreshInterval": {"default": 500, "description": "The minimum value the B2BUA will negotiate for the session refresh interval for SIP calls.                         For further information refer to the definition of Min-SE header in RFC 4028. ", "maximum": 65535, "minimum": 90, "type": "integer"}, "mode": {"default": "off", "description": "Enables or disables Microsoft interoperability. Required:                         Microsoft Interoperability option key", "enum": ["on", "off"], "type": "string"}, "rdpMaxSessions": {"default": 10, "description": "Enter a value to limit the number of simultaneous RDP transcoding sessions on the Expressway.                         Higher values will mean that more system resources can be consumed by RDP transcoding,                         which could impact other services.", "maxLength": 100, "minLength": 1, "type": "integer"}, "rdpTcpPortRangeEnd": {"default": 6099, "description": "Defines the end of the range on which the B2BUA listens for TCP media from the client sending                         RDP. Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "rdpTcpPortRangeStart": {"default": 6000, "description": "Defines the start of the range on which the B2BUA listens for TCP media from the client                         sending RDP. Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "rdpTranscodingEnabled": {"default": "off", "description": "Controls whether the B2BUA offers Remote Desktop Protocol transcoding. ", "enum": ["on", "off"], "type": "string"}, "rdpUdpPortRangeEnd": {"default": 6199, "description": "Defines the end of the range on which the B2BUA sends UDP media to the client receiving the                         transcoded RDP.Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maxLength": 65535, "minLength": 1024, "type": "integer"}, "rdpUdpPortRangeStart": {"default": 6100, "description": "Defines the start of the range on which the B2BUA sends UDP media to the client receiving the                        transcoded RDP. Avoid overlapping other port ranges used by this Expressway.\\u00a0", "maximum": 65535, "minimum": 1024, "type": "integer"}, "sessionRefreshInterval": {"default": 1800, "description": "The maximum time allowed between session refresh requests for SIP calls.                         For further information refer to the definition of Session-Expires in RFC 4028. ", "maximum": 65535, "minimum": 90, "type": "integer"}, "signallingTransport": {"default": "TLS", "description": "The transport type used for connection to the Microsoft infrastructure.", "enum": ["TCP", "TLS"], "type": "string"}, "turnServiceOffering": {"default": "off", "description": "Controls whether the B2BUA offers TURN services. This is recommended for calls traversing                         a Microsoft Edge server.\\u00a0", "enum": ["on", "off"], "type": "string"}}}
    description: Update Microsoft Interoperability configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Update or Get the current Microsoft Interoperability configuration
/provisioning/controller/b2bua/microsoftinterop/restartservice: &id076
  POST:
    body: {}
    description: performs MicrosoftInterop restart. This API does not wait for the restart to complete. Hence, if invoked multiple times, will restart the service that many times sequentially.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: MicrosoftInterop Restart
/provisioning/controller/b2bua/microsoftinterop/trustedhosts: &id016
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"index": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["index"]}
    description: delete Trusted Host.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read all existing Trusted Host instances.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "items": {"additionalProperties": false, "properties": {"IpAddress": {"description": "The IP address of the trusted host device. Note: you must restart the B2BUA service for any changes to the set of trusted hosts take effect.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Name": {"description": "A free-form description of the trusted host device. Range: 0 to 1024 characters", "maxLength": 1024, "minLength": 0, "type": "string"}, "Type": {"description": "The type of device that may send signaling messages to the B2BUA.Microsoft infrastructure: this includes Hardware Load Balancers, Directors and Front End Processors.", "enum": ["Microsoft infrastructure"], "type": "string"}, "index": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["IpAddress", "Type", "Name", "index"]}}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"IpAddress": {"description": "The IP address of the trusted host device. Note: you must restart the B2BUA service for any changes to the set of trusted hosts take effect.", "format": "ipv4", "type": "string"}, "Name": {"description": "A free-form description of the trusted host device. Range: 0 to 1024 characters", "maxLength": 1024, "minLength": 0, "type": "string"}, "Type": {"description": "The type of device that may send signaling messages to the B2BUA.Microsoft infrastructure: this includes Hardware Load Balancers, Directors and Front End Processors.", "enum": ["Microsoft infrastructure"], "type": "string"}}, "required": ["IpAddress", "Type"]}
    description: creates a new Trusted host.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"IpAddress": {"description": "The IP address of the trusted host device. Note: you must restart the B2BUA service for any changes to the set of trusted hosts take effect.", "format": "ipv4", "type": "string"}, "Name": {"description": "A free-form description of the trusted host device. Range: 0 to 1024 characters", "maxLength": 1024, "minLength": 0, "type": "string"}, "Type": {"description": "The type of device that may send signaling messages to the B2BUA.Microsoft infrastructure: this includes Hardware Load Balancers, Directors and Front End Processors.", "enum": ["Microsoft infrastructure"], "type": "string"}, "index": {"description": "Unique identifier for record.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["IpAddress", "Type", "index"]}
    description: update Trusted host.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add, update and delete Trusted hosts configurations. Also lists all the current configurations
/provisioning/controller/b2bua/microsoftinterop/trustedhosts/index/<index>: *id016
/provisioning/controller/b2bua/turnservers: &id017
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"index": {"description": "Unique Identifier for the record", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["index"], "type": ["object"]}
    description: Delete the B2BUA TURN server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Gets all the configured B2BUA TURN Servers
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the TURN server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "IpAddress": {"description": "The IP address of a TURN server to offer when establishing ICE calls(for example, with a Microsoft Edge server). The TURN server must be RFC 5245compliant, for example a Expressway-E TURN server", "oneOf": [{"format": "ipv4"}, {"format": "ipv6"}], "type": "string"}, "Port": {"default": 3478, "description": "The listening port on the TURN server", "maximum": 65535, "minimum": 1024, "type": "integer"}, "UserName": {"description": "The username to access the TURN server.", "maxLength": 1024, "minLength": 1, "type": "string"}, "index": {"description": "Unique Identifier for the record", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "required": ["IpAddress", "Port", "UserName"], "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the TURN server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "IpAddress": {"description": "The IP address of a TURN server to offer when establishing ICE calls(for example, with a Microsoft Edge server). The TURN server must be RFC 5245compliant, for example a Expressway-E TURN server", "oneOf": [{"format": "ipv4"}, {"format": "ipv6"}], "type": "string"}, "Password": {"description": "The password to access the TURN server.Range: 0 to 1024 characters", "maxLength": 1024, "minLength": 0, "type": "string"}, "Port": {"default": 3478, "description": "The listening port on the TURN server", "maximum": 65535, "minimum": 1024, "type": "integer"}, "UserName": {"description": "The username to access the TURN server.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["IpAddress", "Port", "UserName"]}
    description: Create a new B2BUA TURN server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Description": {"description": "A free-form description of the TURN server.", "maxLength": 1024, "minLength": 0, "type": "string"}, "IpAddress": {"description": "The IP address of a TURN server to offer when establishing ICE calls(for example, with a Microsoft Edge server). The TURN server must be RFC 5245compliant, for example a Expressway-E TURN server", "oneOf": [{"format": "ipv4"}, {"format": "ipv6"}], "type": "string"}, "Password": {"description": "The password to access the TURN server.Range: 0 to 1024 characters", "maxLength": 1024, "minLength": 0, "type": "string"}, "Port": {"default": 3478, "description": "The listening port on the TURN server", "maximum": 65535, "minimum": 1024, "type": "integer"}, "UserName": {"description": "The username to access the TURN server.", "maxLength": 1024, "minLength": 1, "type": "string"}, "index": {"description": "Unique Identifier for the record", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["index"], "type": ["object"]}
    description: Update the B2BUA TURN Server
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add, update and delete B2BUA TURN Server configurations. Also lists all the current configurations
/provisioning/controller/b2bua/turnservers/index/<uuid>: *id017
/provisioning/controller/server/cucm: &id077
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Publisher": {"description": "The FQDN or IP address of a Unified CM publisher to be deleted.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["Publisher"], "type": ["object"]}
    description: Delete the given CUCM configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read the available configurations
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AesGcm": {"description": "State of AES GCM mode. If advanced encryption AES GCM mode is enabled, the TLS zone to Unified CM will offer advanced encryption AES GCM for media traffic.", "pattern": "^(?i)(on|off)$", "type": "string"}, "AxlUsername": {"description": "The username used by the Expressway to access the Unified CM publisher.The user must have the Standard AXL API Access role. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "IcePassthrough": {"description": "State of ICE Passthrough mode. It controls how the CUCM Neighbor zone which auto generated based from this UC Server supports ICE Passthrough. ", "pattern": "^(?i)(on|off|exclusive)$", "type": "string"}, "Publisher": {"description": "The FQDN or IP address of a Unified CM publisher.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "SipUpdateForSessionRefresh": {"description": "State of SIP UPDATE usage for session refresh. If SIP UPDATE is enabled for session refresh, the zones to Unified CM will send SIP UPDATE messages for session refresh provided SIP UPDATE is supported by UAS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TlsVerify": {"description": "State of the TLS verify mode. If TLS verify mode is enabled, the Unified CM system's FQDN  or IP address must be contained within the X.509 certificate presented by that system (in either the Subject Common Name or the Subject Alternative Name attributes of the certificate). The certificate itself must also be valid and signed by a trusted certificate authority.", "pattern": "^(?i)(on|off)$", "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AesGcm": {"description": "State of AES GCM mode. If advanced encryption AES GCM mode is enabled, the TLS zone to Unified CM will offer advanced encryption AES GCM for media traffic.", "pattern": "^(?i)(on|off)$", "type": "string"}, "AxlPassword": {"description": "The password used by the Expressway to access the Unified CM publisher.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "AxlUsername": {"description": "The username used by the Expressway to access the Unified CM publisher.The user must have the Standard AXL API Access role. Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "IcePassthrough": {"description": "State of ICE Passthrough mode. It controls how the CUCM Neighbor zone which auto generated based from this UC Server supports ICE Passthrough. ", "pattern": "^(?i)(on|off|exclusive)$", "type": "string"}, "Publisher": {"description": "The FQDN or IP address of a Unified CM publisher.Range: 1 to 1024 characters", "maxLength": 1024, "minLength": 1, "type": "string"}, "SipUpdateForSessionRefresh": {"description": "State of SIP UPDATE usage for session refresh. If SIP UPDATE is enabled for session refresh, the zones to Unified CM will send SIP UPDATE messages for session refresh provided SIP UPDATE is supported by UAS.", "pattern": "^(?i)(on|off)$", "type": "string"}, "TlsVerify": {"description": "State of the TLS verify mode. If TLS verify mode is enabled, the Unified CM system's FQDN  or IP address must be contained within the X.509 certificate presented by that system (in either the Subject Common Name or the Subject Alternative Name attributes of the certificate). The certificate itself must also be valid and signed by a trusted certificate authority.", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["Publisher", "AxlUsername", "AxlPassword"]}
    description: Create a new configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add and update cucm configurations. Also lists all the current configurations
/provisioning/controller/server/imp: &id078
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Publisher": {"description": "The FQDN or IP address of the IM and Presence Service database publisher node to be deleted.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["Publisher"], "type": ["object"]}
    description: Delete the given IMP configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read the available configurations
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AxlUsername": {"description": "The username used by the Expressway to access the IM and Presence publisher.The user must have the Standard AXL API Access role.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Publisher": {"description": "The FQDN or IP address of the IM and Presence Service database publisher node.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "On", "description": "State of the TLS verify mode. If TLS verify mode is enabled, the IM and Presence Servicenode's FQDN or IP address must be contained within the X.509 certificate presented by thatsystem (in either the Subject Common Name or the Subject Alternative Name attributes of thecertificate). The certificate itself must also be valid and signed by a trusted certificateauthority.", "pattern": "^(?i)(on|off)$", "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AxlPassword": {"description": "The password used by the Expressway to access the IM and Presence publisher.", "maxLength": 1024, "minLength": 1, "type": "string"}, "AxlUsername": {"description": "The username used by the Expressway to access the IM and Presence publisher.The user must have the Standard AXL API Access role.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Publisher": {"description": "The FQDN or IP address of the IM and Presence Service database publisher node.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "On", "description": "State of the TLS verify mode. If TLS verify mode is enabled, the IM and Presence Servicenode's FQDN or IP address must be contained within the X.509 certificate presented by thatsystem (in either the Subject Common Name or the Subject Alternative Name attributes of thecertificate). The certificate itself must also be valid and signed by a trusted certificateauthority.", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["Publisher", "AxlUsername", "AxlPassword"]}
    description: Create a new configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add and update imp configurations. Also lists all the current configurations
/provisioning/controller/server/ucs: &id079
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Publisher": {"description": "The FQDN or IP address of a Unity Connection publisher to be deleted.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["Publisher"], "type": ["object"]}
    description: Delete the given UCS configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read the available configurations
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"Publisher": {"description": "The FQDN or IP address of a Unity Connection publisher.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "On", "description": "State of the TLS verify mode. If TLS verify mode is enabled, the Unity Connection system'sFQDN or IP address must be contained within the X.509 certificate presented by thatsystem (in either the Subject Common Name or the Subject Alternative Name attributes of thecertificate). The certificate itself must also be valid and signed by a trusted certificateauthority.", "pattern": "^(?i)(on|off)$", "type": "string"}, "Username": {"description": "The username used by the Expressway to access the Unity Connection publisher.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Password": {"description": "The password used by the Expressway to access the Unity Connection publisher.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Publisher": {"description": "The FQDN or IP address of a Unity Connection publisher.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TlsVerify": {"default": "On", "description": "State of the TLS verify mode. If TLS verify mode is enabled, the Unity Connection system'sFQDN or IP address must be contained within the X.509 certificate presented by thatsystem (in either the Subject Common Name or the Subject Alternative Name attributes of thecertificate). The certificate itself must also be valid and signed by a trusted certificateauthority.", "pattern": "^(?i)(on|off)$", "type": "string"}, "Username": {"description": "The username used by the Expressway to access the Unity Connection publisher.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "required": ["Publisher", "Username", "Password"]}
    description: Create a new configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: The resource class to add, update and delete Unity connection configuration.
/provisioning/controller/zone/traversalclient: &id018
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "Name of the zone to be deleted", "maxLength": 50, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: Delete the zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Reads the Zone data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages                        from this zone and whether they are subsequently treated as                        authenticated, unauthenticated, or are rejected. The behavior                        varies for H.323 messages, SIP messages that originate from a                        local domain and SIP messages that originate from non-local domains.", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AuthenticationUserName": {"description": "The user name used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 0, "type": "string"}, "DisconnectOnFailInterval": {"default": 0, "description": "Disconnect on Fail Interval in seconds - when a zone is in a failed state this setting will determine the frequency that the connection for the SIP OPTIONS Ping message will be disconnected. 0 means the feature is disabled.", "maximum": 3600, "minimum": 0, "type": "integer"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "H323Protocol": {"default": "Assent", "description": "Determines which of the two firewall traversal protocols will be                         used for H323 calls to and from the traversal server.                        Note: the same protocol must be set on the server for calls to and                        from this traversal client. will be used for H323 calls to and from                        the traversal client.", "enum": ["Assent", "H46018"], "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server.                                   If you are using secure traversal, then this value must be either the                                   Common Name or one of the Subject Alternate Names on the traversal servers                                   certificate. IP addresses or hostnames are therefore not recommended.                                   If the traversal server is a cluster of Expressway-Es, this is the FQDN                                   of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "RetryInterval": {"default": 120, "description": "Specifies the interval (in seconds) with which a failed attempt                        to establish a connection to the traversal server should be retried.                        establish a connection to the traversal server should be retried", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1, "type": "integer"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway                        for SIP calls (including interworked calls) to and from this zone.                        Auto: no specific media encryption policy is applied by the Expressway.                              Media encryption is purely dependent on endpoint requests.                        Best effort: use encryption if available, otherwise fall                                      back to unencrypted media.                        ForceEncrypted (Force encrypted): all media must be encrypted.                        ForceunEncrypted (Force unencrypted): all media must be unencrypted.", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devicesi                        in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressways B2BUA preserves or                        rewrites the parameters in SIP requests routed via this zone.                        On preserves the SIP Request URI and Contact parameters of                        requests routing between this zone and the B2BUA. Off allows the                        B2BUA to rewrite the SIP Request URI and Contact parameters of                        requests routing between this zone and the B2BUA, if necessary.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\"                        such that if they are received by the local Expressway again they will                        be rejected.On: SIP requests sent out via this zone that are received                        again by this Expressway will be rejected. Off: SIP requests sent out                        via this zone that are received by this Expressway again will be                        processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authentication                          between this Expressway and the traversal client. If enabled, a                          TLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTransport": {"default": "TLS", "description": "The transport protocol to use for SIP calls to and from the                          traversal client.", "enum": ["TLS", "UDP", "TCP"], "type": "string"}, "Status": {"description": "The status of the zone", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages                        from this zone and whether they are subsequently treated as                        authenticated, unauthenticated, or are rejected. The behavior                        varies for H.323 messages, SIP messages that originate from a                        local domain and SIP messages that originate from non-local domains.", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AuthenticationPassword": {"description": "The Password used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 1, "type": "string"}, "AuthenticationUserName": {"description": "The user name used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 0, "type": "string"}, "DisconnectOnFailInterval": {"default": 0, "description": "Disconnect on Fail Interval in seconds - when a zone is in a failed state this setting will determine the frequency that the connection for the SIP OPTIONS Ping message will be disconnected. 0 means the feature is disabled.", "maximum": 3600, "minimum": 0, "type": "integer"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "H323Protocol": {"default": "Assent", "description": "Determines which of the two firewall traversal protocols will be                         used for H323 calls to and from the traversal server.                        Note: the same protocol must be set on the server for calls to and                        from this traversal client. will be used for H323 calls to and from                        the traversal client.", "enum": ["Assent", "H46018"], "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server.                                   If you are using secure traversal, then this value must be either the                                   Common Name or one of the Subject Alternate Names on the traversal servers                                   certificate. IP addresses or hostnames are therefore not recommended.                                   If the traversal server is a cluster of Expressway-Es, this is the FQDN                                   of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "RetryInterval": {"default": 120, "description": "Specifies the interval (in seconds) with which a failed attempt                        to establish a connection to the traversal server should be retried.                        establish a connection to the traversal server should be retried", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1, "type": "integer"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway                        for SIP calls (including interworked calls) to and from this zone.                        Auto: no specific media encryption policy is applied by the Expressway.                              Media encryption is purely dependent on endpoint requests.                        Best effort: use encryption if available, otherwise fall                                      back to unencrypted media.                        ForceEncrypted (Force encrypted): all media must be encrypted.                        ForceunEncrypted (Force unencrypted): all media must be unencrypted.", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devicesi                        in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressways B2BUA preserves or                        rewrites the parameters in SIP requests routed via this zone.                        On preserves the SIP Request URI and Contact parameters of                        requests routing between this zone and the B2BUA. Off allows the                        B2BUA to rewrite the SIP Request URI and Contact parameters of                        requests routing between this zone and the B2BUA, if necessary.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\"                        such that if they are received by the local Expressway again they will                        be rejected.On: SIP requests sent out via this zone that are received                        again by this Expressway will be rejected. Off: SIP requests sent out                        via this zone that are received by this Expressway again will be                        processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authentication                          between this Expressway and the traversal client. If enabled, a                          TLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTransport": {"default": "TLS", "description": "The transport protocol to use for SIP calls to and from the                          traversal client.", "enum": ["TLS", "UDP", "TCP"], "type": "string"}}, "required": ["Name", "AuthenticationUserName", "AuthenticationPassword", "PeerAddress"]}
    description: creates unified communications traversal client
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages                        from this zone and whether they are subsequently treated as                        authenticated, unauthenticated, or are rejected. The behavior                        varies for H.323 messages, SIP messages that originate from a                        local domain and SIP messages that originate from non-local domains.", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AuthenticationPassword": {"description": "The Password used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 1, "type": "string"}, "AuthenticationUserName": {"description": "The user name used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 0, "type": "string"}, "DisconnectOnFailInterval": {"default": 0, "description": "Disconnect on Fail Interval in seconds - when a zone is in a failed state this setting will determine the frequency that the connection for the SIP OPTIONS Ping message will be disconnected. 0 means the feature is disabled.", "maximum": 3600, "minimum": 0, "type": "integer"}, "H323Mode": {"default": "Off", "description": "Determines whether H.323 calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "H323Port": {"description": "Specifies the port on the traversal server to be used for H.323 firewall traversal calls from this Expressway. If the traversal server is a Expressway-E, this must be the port number that has been configured on the Expressway-Es Traversal Server zone associated with this Expressway.will be used for H323 calls to and from the traversal client.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "H323Protocol": {"default": "Assent", "description": "Determines which of the two firewall traversal protocols will be                         used for H323 calls to and from the traversal server.                        Note: the same protocol must be set on the server for calls to and                        from this traversal client. will be used for H323 calls to and from                        the traversal client.", "enum": ["Assent", "H46018"], "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "NewName": {"description": "The new name of zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server.                                   If you are using secure traversal, then this value must be either the                                   Common Name or one of the Subject Alternate Names on the traversal servers                                   certificate. IP addresses or hostnames are therefore not recommended.                                   If the traversal server is a cluster of Expressway-Es, this is the FQDN                                   of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "RetryInterval": {"default": 120, "description": "Specifies the interval (in seconds) with which a failed attempt                        to establish a connection to the traversal server should be retried.                        establish a connection to the traversal server should be retried", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1, "type": "integer"}, "SIPMediaEncryptionMode": {"default": "Auto", "description": "Controls the media encryption policy applied by the Expressway                        for SIP calls (including interworked calls) to and from this zone.                        Auto: no specific media encryption policy is applied by the Expressway.                              Media encryption is purely dependent on endpoint requests.                        Best effort: use encryption if available, otherwise fall                                      back to unencrypted media.                        ForceEncrypted (Force encrypted): all media must be encrypted.                        ForceunEncrypted (Force unencrypted): all media must be unencrypted.", "enum": ["Auto", "BestEffort", "ForceEncrypted", "ForceunEncrypted"], "type": "string"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMode": {"default": "Off", "description": "Determines whether SIP calls will be allowed to and from this zone.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devicesi                        in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressways B2BUA preserves or                        rewrites the parameters in SIP requests routed via this zone.                        On preserves the SIP Request URI and Contact parameters of                        requests routing between this zone and the B2BUA. Off allows the                        B2BUA to rewrite the SIP Request URI and Contact parameters of                        requests routing between this zone and the B2BUA, if necessary.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\"                        such that if they are received by the local Expressway again they will                        be rejected.On: SIP requests sent out via this zone that are received                        again by this Expressway will be rejected. Off: SIP requests sent out                        via this zone that are received by this Expressway again will be                        processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTLSVerifyMode": {"default": "Off", "description": "Controls X.509 certificate checking and mutual authentication                          between this Expressway and the traversal client. If enabled, a                          TLS verify subject name must be specified.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPTransport": {"default": "TLS", "description": "The transport protocol to use for SIP calls to and from the                          traversal client.", "enum": ["TLS", "UDP", "TCP"], "type": "string"}}, "required": ["Name"]}
    description: updates zone configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: facilitates creation , updation and read of traversal Client zone
/provisioning/controller/zone/traversalclient/name/<name>: *id018
/provisioning/controller/zone/unifiedcommunicationstraversal: &id019
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Name": {"description": "Name of the zone to be deleted", "maxLength": 50, "minLength": 1, "type": "string"}}, "required": ["Name"]}
    description: Delete the unified communication traversal client zone
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Reads the Unified communication Zone data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages from this zone and whether they are subsequently treated as authenticated, unauthenticated, or are rejected. The behavior varies for H.323 messages, SIP messages that originate from a local domain and SIP messages that originate from non-local domains. ", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AuthenticationUserName": {"description": "The user name used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 0, "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server. If you are using secure traversal, then this value must be either the Common Name or one of the Subject Alternate Names on the traversal servers certificate. IP addresses or hostnames are therefore not recommended. If the traversal server is a cluster of Expressway-Es, this is the FQDN of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "RetryInterval": {"default": 120, "description": "Specifies the interval (in seconds) with which a failed attempt to establish a connection to the traversal server should be retried. establish a connection to the traversal server should be retried. ", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1, "type": "integer"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devices in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressways B2BUA preserves or rewrites the parameters in SIP requests routed via this zone. On preserves the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA. Off allows the B2BUA to rewrite the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA, if necessary. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\" such that if they are received by the local Expressway again they will be rejected.On: SIP requests sent out via this zone that are received again by this Expressway will be rejected. Off: SIP requests sent out via this zone that are received by this Expressway again will be processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}, "Status": {"description": "The status of the zone", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages from this zone and whether they are subsequently treated as authenticated, unauthenticated, or are rejected. The behavior varies for H.323 messages, SIP messages that originate from a local domain and SIP messages that originate from non-local domains. ", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AuthenticationPassword": {"description": "The Password used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 1, "type": "string"}, "AuthenticationUserName": {"description": "The user name used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 0, "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server. If you are using secure traversal, then this value must be either the Common Name or one of the Subject Alternate Names on the traversal servers certificate. IP addresses or hostnames are therefore not recommended. If the traversal server is a cluster of Expressway-Es, this is the FQDN of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "RetryInterval": {"default": 120, "description": "Specifies the interval (in seconds) with which a failed attempt to establish a connection to the traversal server should be retried. establish a connection to the traversal server should be retried. ", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1, "type": "integer"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devices in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressways B2BUA preserves or rewrites the parameters in SIP requests routed via this zone. On preserves the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA. Off allows the B2BUA to rewrite the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA, if necessary. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\" such that if they are received by the local Expressway again they will be rejected.On: SIP requests sent out via this zone that are received again by this Expressway will be rejected. Off: SIP requests sent out via this zone that are received by this Expressway again will be processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["Name", "AuthenticationUserName", "AuthenticationPassword", "PeerAddress"]}
    description: creates unified communications traversal client
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcceptProxiedRegistrations": {"default": "Allow", "description": "Controls whether proxied SIP registrations routed through this zone are accepted", "enum": ["Allow", "Deny"], "type": "string"}, "AuthenticationMode": {"default": "DoNotCheckCredentials", "description": "Controls how the Expressway authenticates incoming messages from this zone and whether they are subsequently treated as authenticated, unauthenticated, or are rejected. The behavior varies for H.323 messages, SIP messages that originate from a local domain and SIP messages that originate from non-local domains. ", "enum": ["DoNotCheckCredentials", "TreatAsAuthenticated", "CheckCredentials"], "type": "string"}, "AuthenticationPassword": {"description": "The Password used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 1, "type": "string"}, "AuthenticationUserName": {"description": "The user name used by the Expressway when connecting to the traversal server", "maxLength": 1024, "minLength": 0, "type": "string"}, "HopCount": {"default": 15, "description": "Specifies the hop count to be used when sending an alias search request to this zone. Note: if the search request was received from another zone and already has a hop count assigned, the lower of the two values will be used", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 255, "minimum": 1, "type": "integer"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "NewName": {"description": "The new name of zone", "maxLength": 50, "minLength": 1, "type": "string"}, "PeerAddress": {"items": {"description": "Enter the Fully Qualified Domain Name (FQDN) of the traversal server. If you are using secure traversal, then this value must be either the Common Name or one of the Subject Alternate Names on the traversal servers certificate. IP addresses or hostnames are therefore not recommended. If the traversal server is a cluster of Expressway-Es, this is the FQDN of one of the peers in that cluster.", "maxLength": 255, "minLength": 2, "type": "string"}, "maxItems": 6, "minItems": 0, "type": "array"}, "RetryInterval": {"default": 120, "description": "Specifies the interval (in seconds) with which a failed attempt to establish a connection to the traversal server should be retried. establish a connection to the traversal server should be retried. ", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1, "type": "integer"}, "SIPMediaICESupport": {"default": "Off", "description": "Controls how the Expressway supports ICE messages to and from the devices in this zone. The behavior depends upon the configuration of the ICE support setting on the incoming (ingress) and outgoing (egress) zone or subzone. When there is a mismatch of settings i.e. On on one side and Off on the other side, the Expressway invokes its back-to-back user agent (B2BUA) to perform ICE negotiation with the relevant host. When ICE support is enabled, you can also configure the TURN servers to offer as ICE candidates, if necessary. Default: Off", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPMultistreamMode": {"default": "On", "description": "Controls if the Expressway allows Multistream to and from devices in this zone. On: allow Multistream. Off: disallow Multistream.", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPParameterPreservationMode": {"default": "Off", "description": "Determines whether the Expressways B2BUA preserves or rewrites the parameters in SIP requests routed via this zone. On preserves the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA. Off allows the B2BUA to rewrite the SIP Request URI and Contact parameters of requests routing between this zone and the B2BUA, if necessary. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPoisonMode": {"default": "Off", "description": "Determines whether SIP requests sent out to this zone are \"poisoned\" such that if they are received by the local Expressway again they will be rejected.On: SIP requests sent out via this zone that are received again by this Expressway will be rejected. Off: SIP requests sent out via this zone that are received by this Expressway again will be processed as normal. ", "pattern": "^(?i)(on|off)$", "type": "string"}, "SIPPort": {"default": "7001", "description": "The port on the neighbor to use for outgoing SIP messages initiated from the Expressway. Default: 5061, Range: 1024 to 65534", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 65534, "minimum": 1024, "type": "integer"}, "SIPPreloadedSipRoutesSupport": {"default": "Off", "description": "Enable this zone to to process or reject SIP INVITE requests that contain Route header", "pattern": "^(?i)(on|off)$", "type": "string"}}, "required": ["Name"]}
    description: updates unified communication traversal client zone configuration
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Unified communication zone CREATE, UPDATE, READ and DELETE REST API
/provisioning/controller/zone/unifiedcommunicationstraversal/name/<name>: *id019
/provisioning/customnotification: &id020
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AlarmId": {"description": "Enter the alarm Id for which you want to customise or disable notifications.", "maximum": 5, "minimum": 5, "type": "string"}, "CustomEmail": {"description": "Enter the email id,                         if the DisableNotification is false, to receive alarm notifications.", "maximum": 256, "minimum": 0, "type": "string"}, "DisableNotification": {"default": "true", "description": "Enter True, if you do not want to receive an email notification for this alarm.                         Enter False, if you want to receive a custom email notification for this alarm.", "enum": ["true", "false"], "type": "string"}}, "required": ["AlarmId"], "type": ["object"]}
    description: Delete custom notification configuration table with data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Read data from custom notification configuration table
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AlarmId": {"description": "Enter the alarm Id for which you want to customise or disable notifications.", "maximum": 5, "minimum": 5, "type": "string"}, "CustomEmail": {"description": "Enter the email id,                         if the DisableNotification is false, to receive alarm notifications.", "maximum": 256, "minimum": 0, "type": "string"}, "DisableNotification": {"default": "true", "description": "Enter True, if you do not want to receive an email notification for this alarm.                         Enter False, if you want to receive a custom email notification for this alarm.", "enum": ["true", "false"], "type": "string"}}, "type": "object"}, "type": ["array"]}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AlarmId": {"description": "Enter the alarm Id for which you want to customise or disable notifications.", "maximum": 5, "minimum": 5, "type": "string"}, "CustomEmail": {"description": "Enter the email id,                         if the DisableNotification is false, to receive alarm notifications.", "maximum": 256, "minimum": 0, "type": "string"}, "DisableNotification": {"default": "true", "description": "Enter True, if you do not want to receive an email notification for this alarm.                         Enter False, if you want to receive a custom email notification for this alarm.", "enum": ["true", "false"], "type": "string"}}, "required": ["AlarmId", "DisableNotification"], "type": ["object"]}
    description: Add custom notification configuration table with data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AlarmId": {"description": "Enter the alarm Id for which you want to customise or disable notifications.", "maximum": 5, "minimum": 5, "type": "string"}, "CustomEmail": {"description": "Enter the email id,                         if the DisableNotification is false, to receive alarm notifications.", "maximum": 256, "minimum": 0, "type": "string"}, "DisableNotification": {"default": "true", "description": "Enter True, if you do not want to receive an email notification for this alarm.                         Enter False, if you want to receive a custom email notification for this alarm.", "enum": ["true", "false"], "type": "string"}}, "required": ["AlarmId", "DisableNotification"], "type": ["object"]}
    description: Update custom notification configuration table with data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Read/update notification settings
/provisioning/customnotification/alarm_id/<alarm_id>: *id020
/provisioning/domaincerts/domain: &id080
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "domains": {"description": "List of multidomain cert domains.", "items": {"description": "One domain in a list of multidomain cert domains.", "properties": {"domain": "string"}, "type": "object"}, "type": "array"}}
  description: Read the list of defined multidomain cert domains.
/provisioning/domaincerts/domain/<domain>: &id081
  DELETE:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  POST:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Create, read, and delete a multidomain cert domain. Note that read is only an existence check; no domain-specific data is returned, only the HTTP status code (OK or Not Found).
/provisioning/domaincerts/domain/<domain>/acme/pendingcert: &id082
  DELETE:
    body: {}
    description: Deletes the pending certificate from the staging area.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: Returns the pending certificate in PEM format, along with information on the validity of the certificate with respect to the Certificate Authorities installed in the trust store.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"CertValid": {"description": "Specifies if the Pending certificate is valid with respect to the CAs in the trust store.", "enum": ["True", "False"], "type": "string"}, "CertValidationError": {"description": "The reason why the Pending certifcate is deemed invalid. This field is blank when the certificate is valid.", "maxLength": 4096, "minLength": 0, "type": "string"}, "Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "PemFile": {"description": "The PEM encoded Pending certificate file that was signed by the ACME provider chosen in the ACME Settings", "maxLength": 4096, "minLength": 0, "type": "string"}}, "type": ["object"]}
  POST:
    body: {}
    description: Initiates an ACME Signing request of the currently active CSR. If successful, the new certificate is stored in a staging area. It can be deployed by POSTing to /certs/acme/pendingcert/deploy API.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: GET, POST, DELETE of the Pending certificate resource. A Pending certificate is a certificate that has been signed by an ACME Provider. 'POST' will initiate a signing request, storing the certificate in the staging area. 'GET' returns the PEM encoded Pending certificate from the staging area. 'DELETE' removes the Pending certificate from the staging area. A new Pending certificate cannot be signed if one already exists in the staging area. Each certificate (Server or Domain) has its own staging area.
/provisioning/domaincerts/domain/<domain>/acme/pendingcert/deploy: &id083
  POST:
    body: {}
    description: Deploys the ACME certificate from the staging area to the Expressway. The services that use the new certificate will dynamically reload the new certificate without service interruption
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: POST of the Deploy pending certificate resource. A Pending certificate is a certificate that has been signed by an ACME Provider, that is waiting in the staging area. 'POST' will deploy the Pending certificate from the staging area to the Expressway. The Deploy is hitless and does not require a restart. The apprioprate services will dynamically reload the new certificate without service interruption.
/provisioning/domaincerts/domain/<domain>/acme/settings: &id084
  GET:
    body: {}
    description: Returns the ACME Settings for either the Server certificate or an SNI Domain certificate.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"AcmeManaged": {"description": "Enables/Disables the ACME service and defines if the service should automatically manage certificate renewal or allow the user to. In Manual mode, the user must call the Sign and Deploy API. In Automated mode, the certificates will be automatically fetched and deployed hitlessly in the specified renewal schedule.", "enum": ["Automated", "Manual", "Disabled"], "type": "string"}, "Message": {"description": "Success/Failure/Info message for the operation.", "type": "string"}, "ProviderUuid": {"description": "The UUID of the desired ACME provider. The UUID can be found via the Providers API. If left blank, the defult provider is used.", "maxLength": 40, "minLength": 0, "type": "string"}, "RenewKey": {"description": "Specifies how private keys should be managed when ACME is set to either Automated or Manual.When set to 'Retain', the private key is not changed when a new certificate is signed by the ACME Provider. When set to 'Rotate', a new private key is generated each time a new certificate is signed by the ACME Provider. ", "enum": ["Retain", "Rotate", ""], "type": "string"}, "RenewalSchedule": {"additionalProperties": false, "description": "The parameter is only used in Automated mode. This speficies the recurring time of the week when new signed certificates are automatically deployed. This deploy is hitless, services reload the new certificate without being restarted. e.g. '{'DaysOfWeek': ['Sun', 'Wed'], 'TimeOfDay: '23:59'}'", "properties": {"DaysOfWeek": {"items": {"description": "Days of the week truncated to 3 characters", "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], "type": "string"}, "type": "array"}, "TimeOfDay": {"description": "Time of day in HH:MM format. ", "maxLength": 5, "minLength": 5, "type": "string"}}, "type": "object"}}, "type": "object"}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcmeManaged": {"description": "Enables/Disables the ACME service and defines if the service should automatically manage certificate renewal or allow the user to. In Manual mode, the user must call the Sign and Deploy API. In Automated mode, the certificates will be automatically fetched and deployed hitlessly in the specified renewal schedule.", "enum": ["Automated", "Manual", "Disabled"], "type": "string"}, "ProviderUuid": {"description": "The UUID of the desired ACME provider. The UUID can be found via the Providers API. If left blank, the defult provider is used.", "maxLength": 40, "minLength": 0, "type": "string"}, "RenewKey": {"description": "Specifies how private keys should be managed when ACME is set to either Automated or Manual.When set to 'Retain', the private key is not changed when a new certificate is signed by the ACME Provider. When set to 'Rotate', a new private key is generated each time a new certificate is signed by the ACME Provider. ", "enum": ["Retain", "Rotate", ""], "type": "string"}, "RenewalSchedule": {"additionalProperties": false, "description": "The parameter is only used in Automated mode. This speficies the recurring time of the week when new signed certificates are automatically deployed. This deploy is hitless, services reload the new certificate without being restarted. e.g. '{'DaysOfWeek': ['Sun', 'Wed'], 'TimeOfDay: '23:59'}'", "properties": {"DaysOfWeek": {"items": {"description": "Days of the week truncated to 3 characters", "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], "type": "string"}, "type": "array"}, "TimeOfDay": {"description": "Time of day in HH:MM format. ", "maxLength": 5, "minLength": 5, "type": "string"}}, "type": "object"}}, "required": ["AcmeManaged"], "type": "object"}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AcmeManaged": {"description": "Enables/Disables the ACME service and defines if the service should automatically manage certificate renewal or allow the user to. In Manual mode, the user must call the Sign and Deploy API. In Automated mode, the certificates will be automatically fetched and deployed hitlessly in the specified renewal schedule.", "enum": ["Automated", "Manual", "Disabled"], "type": "string"}, "ProviderUuid": {"description": "The UUID of the desired ACME provider. The UUID can be found via the Providers API. If left blank, the defult provider is used.", "maxLength": 40, "minLength": 0, "type": "string"}, "RenewKey": {"description": "Specifies how private keys should be managed when ACME is set to either Automated or Manual.When set to 'Retain', the private key is not changed when a new certificate is signed by the ACME Provider. When set to 'Rotate', a new private key is generated each time a new certificate is signed by the ACME Provider. ", "enum": ["Retain", "Rotate", ""], "type": "string"}, "RenewalSchedule": {"additionalProperties": false, "description": "The parameter is only used in Automated mode. This speficies the recurring time of the week when new signed certificates are automatically deployed. This deploy is hitless, services reload the new certificate without being restarted. e.g. '{'DaysOfWeek': ['Sun', 'Wed'], 'TimeOfDay: '23:59'}'", "properties": {"DaysOfWeek": {"items": {"description": "Days of the week truncated to 3 characters", "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], "type": "string"}, "type": "array"}, "TimeOfDay": {"description": "Time of day in HH:MM format. ", "maxLength": 5, "minLength": 5, "type": "string"}}, "type": "object"}}, "required": ["AcmeManaged"], "type": "object"}
    description: Updates the ACME Settings for either the Server certificate or an SNI Domain certificate. To use a particular Provider, it must have a vaild Email address configured, and the Terms of Service must have been accepted.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Enable automatic certificate signing using ACME
/provisioning/domaincerts/domain/<domain>/cert: &id085
  DELETE:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "cert-pem": {"description": "JSON-encoded certificate PEM.", "type": "string"}}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"cert-pem": {"description": "JSON-encoded certificate PEM.", "type": "string"}, "hsm-key": {"default": "false", "description": "Install dummy private key and certificate generated by the HSM.", "enum": ["true", "false"], "type": "string"}, "key-pem": {"description": "JSON-encoded private key PEM.", "type": "string"}}, "required": ["cert-pem"], "type": ["object"]}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Create, read, and delete a domain's certificate information. There is no separate update operation, create is also used to update.
/provisioning/domaincerts/domain/<domain>/csr: &id086
  DELETE:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}, "csr-pem": {"description": "JSON-encoded certificate signing request PEM.", "type": "string"}}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"CommonName": {"description": "The commonName field in the subject of the signing request.", "type": "string"}, "Country": {"description": "The two-letter ISO code for the country where your organization is located.", "pattern": "^[a-zA-Z]{2}$", "type": "string"}, "DigestAlgorithm": {"default": "sha256", "description": "The Digest algorithm used for the signature. \t\t\t\t\tDefault: SHA-256", "enum": ["sha256", "sha384", "sha512"], "type": "string"}, "Email": {"description": "The email address to include in the certificate.", "type": "string"}, "HsmKey": {"default": "false", "description": "Generate private key and CSR using the HSM.", "enum": ["true", "false"], "type": "string"}, "KeyLength": {"default": 4096, "description": "The number of bits used for public and private key encryption. \t\t\t\t\tDefault: 4096", "enum": [2048, 4096], "type": "integer"}, "Locality": {"description": "The town or city where your organization is located.", "type": "string"}, "Organization": {"description": "The name of the organization or business.", "type": "string"}, "OrganizationalUnit": {"description": "The department name or organizational unit handling the certificate.", "type": "string"}, "Province": {"description": "The province, region, county, or state where your organization is located.", "type": "string"}, "SubjectAlternativeNames": {"description": "Additional SAN hostnames included in the signing request.", "items": {"description": "SAN hostname included in the signing request.", "type": "string"}, "type": "array"}}, "required": ["Country", "Province", "Locality", "Organization"], "type": ["object"]}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Create, read, and delete a certificate signing request for a domain. Update operation is not allowed for CSRs.
/provisioning/hsm/enroll: &id087
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: HSM enroll
/provisioning/hsm/mode: &id088
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Mode": {"description": "Is HSM mode enabled on cluster.", "enum": ["enabled", "disabled"], "type": "string"}}, "type": "object"}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Mode": {"description": "Is HSM mode enabled on cluster.", "enum": ["enabled", "disabled"], "type": "string"}}, "required": ["Mode"], "type": "object"}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Read/update HSM mode
/provisioning/hsm/module: &id089
  DELETE:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Ip": {"description": "Module IP address.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "required": ["Ip"], "type": "object"}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Modules": {"items": {"Esn": {"description": "HSM ESN.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Ip": {"description": "Module IP address.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Kneti": {"description": "HSM KNETI.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Port": {"default": 9004, "description": "Module port.", "maximum": 65535, "minimum": 1, "type": "integer"}, "admin_pass": {"description": "Admin Password", "maxLength": 4096, "minLength": 0, "type": "string"}, "application_data": {"default": "10:11", "description": "SafeNet application ID", "maxLength": 4096, "minLength": 1, "type": "string"}, "device_slot": {"default": 0, "description": "Slot ID configured on the SafeNet HSM", "maxLength": 1024, "minLength": 1, "type": "integer"}, "partition": {"description": "Partition", "maxLength": 4096, "minLength": 0, "type": "string"}, "session_pass": {"description": "Session Password", "maxLength": 4096, "minLength": 0, "type": "string"}}, "type": "array"}}, "type": "object"}
  POST:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Esn": {"description": "HSM ESN.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Ip": {"description": "Module IP address.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Kneti": {"description": "HSM KNETI.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Port": {"default": 9004, "description": "Module port.", "maximum": 65535, "minimum": 1, "type": "integer"}, "admin_pass": {"description": "Admin Password", "maxLength": 4096, "minLength": 0, "type": "string"}, "application_data": {"default": "10:11", "description": "SafeNet application ID", "maxLength": 4096, "minLength": 1, "type": "string"}, "device_slot": {"default": 0, "description": "Slot ID configured on the SafeNet HSM", "maxLength": 1024, "minLength": 1, "type": "integer"}, "partition": {"description": "Partition", "maxLength": 4096, "minLength": 0, "type": "string"}, "session_pass": {"description": "Session Password", "maxLength": 4096, "minLength": 0, "type": "string"}}, "required": ["Ip", "Esn", "Kneti", "admin_pass", "partition", "session_pass", "device_slot", "application_data"], "type": "object"}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Read/create/delete HSM modules
/provisioning/hsm/settings: &id090
  GET:
    body: {}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"HaGroupExists": {"description": "Internal field, not front facing", "type": "boolean"}, "Provider": {"description": "Name of HSM manufacturer.", "enum": ["safenet", "nshield", ""], "type": "string"}, "RfsIp": {"description": "IP address of remote file system.", "maxLength": 1024, "minLength": 0, "type": "string"}, "RfsPort": {"default": 9004, "description": "Port of remote file system.", "maximum": 65535, "minimum": 1, "type": "integer"}}, "type": "object"}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"HaGroupExists": {"description": "Internal field, not front facing", "type": "boolean"}, "Provider": {"description": "Name of HSM manufacturer.", "enum": ["safenet", "nshield", ""], "type": "string"}, "RfsIp": {"description": "IP address of remote file system.", "maxLength": 1024, "minLength": 0, "type": "string"}, "RfsPort": {"default": 9004, "description": "Port of remote file system.", "maximum": 65535, "minimum": 1, "type": "integer"}}, "required": ["Provider"], "type": "object"}
    description: null
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Read/update HSM settings
/provisioning/notification: &id091
  GET:
    body: {}
    description: Read data from notification configuration table
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Email": {"description": "The email address that the alarm notifications are sent from.", "type": "string"}, "Mode": {"default": "off", "description": "Enables email notifications from the configured SMTP server.", "type": "string"}, "Password": {"description": "The password of the ", "type": "string"}, "SMTPServerHost": {"description": "The server host of the SMTP server to which alarm notifications will be sent from.", "type": "string"}, "SMTPServerPort": {"default": 587, "description": "The server port of the SMTP server to which alarm notifications will be sent from.", "maximum": 65535, "minimum": 1, "type": "integer"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"Email": {"description": "The email address that the alarm notifications are sent from.", "type": "string"}, "Mode": {"default": "off", "description": "Enables email notifications from the configured SMTP server.", "type": "string"}, "Password": {"description": "The password of the ", "type": "string"}, "SMTPServerHost": {"description": "The server host of the SMTP server to which alarm notifications will be sent from.", "type": "string"}, "SMTPServerPort": {"default": 587, "description": "The server port of the SMTP server to which alarm notifications will be sent from.", "maximum": 65535, "minimum": 1, "type": "integer"}}, "required": ["Mode", "SMTPServerHost", "SMTPServerPort", "Email", "Password"], "type": ["object"]}
    description: Update notification configuration table with data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Read/update/ notification settings
/provisioning/restart: &id092
  POST:
    body: {}
    description: performs system restart
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: System Restarts
/provisioning/severitynotification: &id093
  GET:
    body: {}
    description: Read data from severity notification configuration table
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"AlertEmail": {"description": "The email address to which alert alarm notifications are sent ", "type": "string"}, "CriticalEmail": {"description": "The email address to which critical alarm notifications are sent ", "type": "string"}, "DebugEmail": {"description": "The email address to which debug alarm notifications are sent", "type": "string"}, "EmergencyEmail": {"description": "The email address to which emergency alarm notifications are sent.", "type": "string"}, "ErrorEmail": {"description": "The email address to which error alarm notifications are sent", "type": "string"}, "InfoEmail": {"description": "The email address to which info alarm notifications are sent", "type": "string"}, "NoticeEmail": {"description": "The email address to which notice alarm notifications are sent", "type": "string"}, "WarningEmail": {"description": "The email address to which warning alarm notifications are sent ", "type": "string"}}}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AlertEmail": {"description": "The email address to which alert alarm notifications are sent ", "type": "string"}, "CriticalEmail": {"description": "The email address to which critical alarm notifications are sent ", "type": "string"}, "DebugEmail": {"description": "The email address to which debug alarm notifications are sent", "type": "string"}, "EmergencyEmail": {"description": "The email address to which emergency alarm notifications are sent.", "type": "string"}, "ErrorEmail": {"description": "The email address to which error alarm notifications are sent", "type": "string"}, "InfoEmail": {"description": "The email address to which info alarm notifications are sent", "type": "string"}, "NoticeEmail": {"description": "The email address to which notice alarm notifications are sent", "type": "string"}, "WarningEmail": {"description": "The email address to which warning alarm notifications are sent ", "type": "string"}}, "type": ["object"]}
    description: Update severity notification configuration table with data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Read/update notification settings
/provisioning/sysinfo: &id094
  GET:
    body: {}
    description: Provides S/W Version, RestApi Version, Product Mode
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"ProductMode": {"description": "Mode is either of Cisco Telepresence Video Communication Server Control/                     Cisco Telepresence Video Communication Server Expressway/Expressway-C/Expressway-E", "type": "string"}, "RestapiVersion": {"description": "RestApi Component version", "type": "string"}, "SoftwareVersion": {"description": "Software version", "type": "string"}}, "type": ["object"]}
  description: gets the system info like version, product etc
/status/common/alarms: &id021
  GET:
    body: {}
    description: Fetches the alarm status details defined
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"additionalProperties": false, "properties": {"AlarmId": {"description": "read and update alarm status.", "maximum": 5, "minimum": 5, "type": "string"}, "AlarmStatus": {"description": "read and update alarm status.", "enum": ["Acknowledged"], "maxLength": 1024, "minLength": 0, "type": "string"}, "FirstRaised": {"description": "Time in UNIX Epoch since when the alarm was first time raised.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 4294967296, "minimum": 0, "type": "integer"}, "LastRaised": {"description": "Time in UNIX Epoch since when the alarm was last time raised.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 4294967296, "minimum": 0, "type": "integer"}, "Parameters": {"description": "parameters.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Severity": {"description": "severity level of alarm.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Solution": {"description": "solution link.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Status": {"description": "status of alarm.", "maxLength": 1024, "minLength": 0, "type": "string"}, "TotalCount": {"description": "The amount of times this alarm has been raised.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 4294967296, "minimum": 0, "type": "integer"}, "Uuid": {"description": "uuid.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "type": "object"}, "type": ["array"]}
  PUT:
    body:
      application/json:
        schema: |-
          {"additionalProperties": false, "properties": {"AlarmId": {"description": "read and update alarm status.", "maximum": 5, "minimum": 5, "type": "string"}, "AlarmStatus": {"description": "read and update alarm status.", "enum": ["Acknowledged"], "maxLength": 1024, "minLength": 0, "type": "string"}, "FirstRaised": {"description": "Time in UNIX Epoch since when the alarm was first time raised.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 4294967296, "minimum": 0, "type": "integer"}, "LastRaised": {"description": "Time in UNIX Epoch since when the alarm was last time raised.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 4294967296, "minimum": 0, "type": "integer"}, "Parameters": {"description": "parameters.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Severity": {"description": "severity level of alarm.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Solution": {"description": "solution link.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Status": {"description": "status of alarm.", "maxLength": 1024, "minLength": 0, "type": "string"}, "TotalCount": {"description": "The amount of times this alarm has been raised.", "exclusivemaximum": true, "exclusiveminimum": true, "maximum": 4294967296, "minimum": 0, "type": "integer"}, "Uuid": {"description": "uuid.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "required": ["AlarmId", "AlarmStatus"], "type": ["object"]}
    description: Update alarm status table
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "type": ["object"]}
  description: Facilities the read and update of alarm status
/status/common/alarms/status/<status>: *id021
/status/common/call/call: &id095
  GET:
    body: {}
    description: Fetches calls details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"ASideDestinationAlias": {"description": "The alias on the left (A side) of the call bridge (B2BUA calls).", "maxLength": 1024, "minLength": 0, "type": "string"}, "ASideRequestURI": {"description": "A request URI on the left (A side) of the call bridge (B2BUA calls).", "maxLength": 1024, "minLength": 0, "type": "string"}, "Active": {"description": "Information on whether the call is active or not.", "enum": ["True", "False"], "type": "string"}, "Audio": {"description": "Shows whether the call is using audio or not.", "enum": ["True", "False"], "type": "string"}, "BSideDestinationAlias": {"description": "The alias on the right (B side) of the call bridge (B2BUA calls).", "maxLength": 1024, "minLength": 0, "type": "string"}, "BSideRequestURI": {"description": "A request URI on the right (B side) of the call bridge (B2BUA calls).", "maxLength": 1024, "minLength": 0, "type": "string"}, "BoxCallSerialNumber": {"description": "Used in Nettle related call scenarios. Call coming back from Nettlewill have the same box call serial number as the original call.", "maxLength": 1024, "minLength": 0, "type": "string"}, "DestinationAlias": {"description": "The alias dialed from the device.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Details": {"description": "Call details.", "type": "string"}, "DisconnectReason": {"description": "The reason why the call was disconnected.", "maxLength": 1024, "minLength": 0, "type": "string"}, "EndTime": {"description": "The date and time when the call ended (completed calls only).", "maxLength": 1024, "minLength": 0, "type": "string"}, "ICECallType": {"description": "Information on ICE Passthrough call type.", "enum": ["na", "none", "host_to_host", "host_to_srvrflx", "host_to_relay", "srvrflx_to_srvrflx", "srvrflx_to_relay", "relay_to_relay", "host_to_prrflx", "srvrflx_to_prrflx", "relay_to_prrflx", "prrflx_to_prrflx"], "type": "string"}, "InitialCall": {"description": "Information on whether the call is initial or not.", "enum": ["True", "False"], "type": "string"}, "LastUpdatedTimestamp": {"default": 0, "description": "The point in time when the last call update happened.", "maximum": 2147483647, "minimum": -2147483648, "type": "integer"}, "Licensed": {"description": "Information on whether the call is licensed or not.", "enum": ["True", "False"], "type": "string"}, "LicensedAsTraversal": {"description": "Information on whether the call is licensed as traversal or not.", "enum": ["True", "False"], "type": "string"}, "MSConversationID": {"description": "Shows Microsoft Conversation ID.", "maxLength": 1024, "minLength": 0, "type": "string"}, "MediaRouted": {"description": "Shows whether the call is media routed or not.", "enum": ["True", "False"], "type": "string"}, "NonTraversalLicenseTokens": {"default": 0, "description": "Number of non traversal license tokens.", "maximum": 2147483647, "minimum": -2147483648, "type": "integer"}, "Protocol": {"description": "Shows whether the call used H.323, SIP, or both protocols. For calls passing through the B2BUA, this may show \"Multiple components\".", "maxLength": 1024, "minLength": 0, "type": "string"}, "ProtocolSummary": {"description": "Shows whether the call used H.323, SIP, or both protocols.", "maxLength": 1024, "minLength": 0, "type": "string"}, "RDP": {"description": "Shows whether the call is an RDP call or not.", "enum": ["True", "False"], "type": "string"}, "SIPVariant": {"description": "Standards-based, Microsoft AV, Microsoft SIP IM&P, or Microsoft Share to distinguish between the different implementations of SIP and SDP that can be routed by the Expressway.", "maxLength": 1024, "minLength": 0, "type": "string"}, "ServiceUUID": {"description": "Uniquely identifies an instance/usage of the B2BUA/IVY Application stack. -  (nettle, (inline B2bUA used for MRA), ivy (MS Interop), Bramble (MS Pressence Interop).", "maxLength": 1024, "minLength": 0, "type": "string"}, "SourceAlias": {"description": "The alias of the device that placed the call.", "maxLength": 1024, "minLength": 0, "type": "string"}, "StartTime": {"description": "The date and time when the call was placed.", "maxLength": 1024, "minLength": 0, "type": "string"}, "Status": {"description": "The reason the call ended (completed calls only).", "maxLength": 1024, "minLength": 0, "type": "string"}, "Tag": {"description": "Used to track calls passing through a number of Expressways.", "maxLength": 1024, "minLength": 0, "type": "string"}, "TraversalLicenseTokens": {"default": 0, "description": "Number of traversal license tokens.", "maximum": 2147483647, "minimum": -2147483648, "type": "integer"}}, "type": "object"}, "type": ["array"]}
  description: Facilities the read of status/call/call
/status/common/diagnosticlogging: &id096
  GET:
    body: {}
    description: Check diaglog running and download status
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"DownLoadStatus": {"description": "Displays whether the diagnostic file is available for download", "enum": ["Collection in progress", "Ready to download", "Not Available"], "type": "string"}, "LogEndTime": {"description": "Displays when the diagnostic logging was stopped. Not displayed when logging is runningFormat YYYY-MM-DD HH:MM:SS", "type": "string"}, "LogInitiator": {"description": "Displays who initiated the last diagnostic logging ", "type": "string"}, "LogStartTime": {"description": "Displays when the diagnostic logging was last startedFormat YYYY-MM-DD HH:MM:SS", "type": "string"}, "LoggingStatus": {"description": "Displays whether diagnostic logging is running", "enum": ["New Server. Diagnostic logging was never started", "Not Running", "Running"], "type": "string"}, "TCPDump": {"description": "Displays whether tcpdump is checked ", "enum": ["On", "Off"], "type": "string"}}}
  description: Provides logging and download file status RAML url /status/common/diagnosticlogging with GET Method
/status/common/fail2banbannedaddress: &id097
  GET:
    body: {}
    description: Fetches the fail2banbannedaddress details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"BannedAddress": {"description": "A banned intruder's host address", "maxLength": 1024, "minLength": 0, "type": "string"}, "EndTime": {"description": "The length of time (in seconds) for which the intruder's host address will be blocked", "maximum": 2147483647, "minimum": -2147483648, "type": "integer"}, "Jail": {"description": "A a combination of a filter and one or several actions, used to block IP addresses.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: Facilities the read of fail2banbannedaddress
/status/common/hardware: &id098
  GET:
    body: {}
    description: Reading hardware status parameters
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": true, "properties": {"HypervisedPlatform": {"description": "This Cisco system is running as a guest on a hypervised platform. See the host system for hardware status information.", "type": "string"}}, "type": ["object"]}
  description: Fetching hardware status parameters
/status/common/smartlicensing/licensing: &id099
  GET:
    body: {}
    description: Read Smart License Status data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"anyOf": [{"additionalProperties": true, "definitions": {"Auth": {"properties": {"AuthorizationExpires": {"description": "The time the authorization will expire if not renewed", "maxLength": 1024, "minLength": 0, "type": "string"}, "LastAuthorizationAttempt": {"description": "Time the last authorization or renewal was successful", "maxLength": 1024, "minLength": 0, "type": "string"}, "LicenseAuthorizationStatus": {"description": "The license authorization status of this Expressway product instance", "maxLength": 1024, "minLength": 0, "type": "string"}, "NextAuthorizationAttempt": {"description": "The time the next automatic renewal will occur", "maxLength": 1024, "minLength": 0, "type": "string"}}, "required": ["LicenseAuthorizationStatus"], "type": "object"}, "Reg": {"properties": {"InitialRegistration": {"description": "Time that the initial registration was successful                                 or if it failed it will contain the failure time", "maxLength": 1024, "minLength": 0, "type": "string"}, "NextRenewalAttempt": {"description": "Time that the last renewal was successful                                or if it failed it will contain the failure time", "maxLength": 1024, "minLength": 0, "type": "string"}, "RegistrationExpires": {"description": "The time the registration (id cert) will expire if not renewed", "maxLength": 1024, "minLength": 0, "type": "string"}, "RegistrationFailureReason": {"description": "The reason for Registration Failure", "maxLength": 1024, "minLength": 0, "type": "string"}, "RegistrationStatus": {"description": "The registration status of this Expressway product instance", "maxLength": 1024, "minLength": 0, "type": "string"}}, "required": ["RegistrationStatus"], "type": "object"}}, "properties": {"Authorization": {"#ref": "#/definitions/Auth"}, "EvalPeriodLeft": {"description": "Time left for Eval period Expiry", "maxLength": 1024, "minLength": 0, "type": "string"}, "ExportControlledFunctionality": {"description": "Allow export-controlled functionality on the products registered with this token", "enum": ["True", "False"], "type": "string"}, "Registration": {"#ref": "#/definitions/Reg"}, "SmartAccount": {"description": "Displays information about the customers Smart Account with Cisco", "maxLength": 1024, "minLength": 0, "type": "string"}, "VirtualAccount": {"description": "A self-defined construct to reflect the company organization.                   Licenses and Product instances can be distributed across virtual accounts.", "maxLength": 1024, "minLength": 0, "type": "string"}}}, {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "required": ["Message"]}]}
  description: The resource class to read Licensing status
/status/common/smartlicensing/usage: &id100
  GET:
    body: {}
    description: Read Smart License Usage data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"anyOf": [{"additionalProperties": false, "properties": {"LastUpdatedTime": {"description": "Last reported time to CSSM", "type": "string"}, "LicenseCount": {"default": 0, "description": "Number of used licenses in the license usage list", "maxLength": 3, "minLength": 0, "type": "integer"}, "LicenseUsage": {"additionalItems": false, "items": {"properties": {"CurrentUsage": {"default": 0, "description": "Count that was requested for this license", "type": "integer"}, "Description": {"description": "Description of the license", "type": "string"}, "LicenseType": {"description": "The short license name", "type": "string"}, "LicenseVersion": {"description": "License version", "type": "string"}, "Status": {"description": "Enforcement mode of this license", "type": "string"}}, "type": "object"}, "type": "array", "uniqueItems": true}}, "required": ["LicenseCount"], "type": "object"}, {"additionalProperties": false, "properties": {"Message": {"description": "Success/Failure/Info message for the operations.", "type": "string"}}, "required": ["Message"]}]}
  description: The resource class to read SmartLicensing usage data
/status/common/sysinfo: &id101
  GET:
    body: {}
    description: Reading system information parameters
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "properties": {"AdministrationSessions": {"description": "Number of administrator sessions", "type": "integer"}, "HardwareVersion": {"description": "Hardware version", "type": "string"}, "LocalTime": {"description": "Local time", "type": "string"}, "Product": {"description": "Product name", "type": "string"}, "SerialNumber": {"description": "Serial number", "type": "string"}, "SoftwareBuild": {"description": "Software build", "type": "string"}, "SoftwareName": {"description": "Software name", "type": "string"}, "SoftwareOptions": {"description": "Software options", "type": "string"}, "SoftwareReleaseDate": {"description": "Software release date", "type": "string"}, "SoftwareVersion": {"description": "Software version", "type": "string"}, "SystemName": {"description": "Name of the system", "type": "string"}, "SystemTime": {"description": "System time", "type": "string"}, "TimeZone": {"description": "Time zone", "type": "string"}, "UpTime": {"description": "Time since last restart or reboot", "type": "string"}, "UserSessions": {"description": "Number of user sessions", "type": "integer"}, "VMSize": {"description": "Virtual Machine size, it can be small, medium or large", "type": "string"}}, "type": ["object"]}
  description: Fetching system information parameters
/status/common/unifiedCommunications: &id102
  GET:
    body: {}
    description: Fetches Unified Communications Statuses details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"anyOf": [{"additionalProperties": false, "properties": {"IMPresenceService": {"description": "Return the status od IM and Presence Service, is it configured or not.", "maxLength": 256, "minLength": 1, "type": "string"}, "OAuthToken": {"description": "Return the status od OAuth token with refresh, is it configured or not.", "maxLength": 256, "minLength": 1, "type": "string"}, "SSOSupport": {"description": "Return the status od Single Sign-On support, is it configured or not.", "maxLength": 256, "minLength": 1, "type": "string"}, "UnifiedCMRegistrations": {"description": "Return the status od Unified CM Registrations, is it configured or not.", "maxLength": 256, "minLength": 1, "type": "string"}, "UnifiedCommunicationsStatus": {"description": "Return the status of Unified Communications mode, is it enabled or not.", "maxLength": 256, "minLength": 1, "type": "string"}, "XMPPFederation": {"description": "Return the status od XMPP Federation, is it configured or not.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"JabberGuest": {"description": "Return the status od Jabber Guest, is it configured or not.", "maxLength": 256, "minLength": 1, "type": "string"}, "UnifiedCommunicationsStatus": {"description": "Return the status of Unified Communications mode, is it enabled or not.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": "object"}]}
  description: Read data for Unified Communications Statuses
/status/common/unifiedCommunications/domains: &id103
  GET:
    body: {}
    description: Fetches Unified Communications Domains details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"oneOf": [{"additionalProperties": false, "items": {"type": "object"}, "properties": {"AssociatedZones": {"description": "The name of the Associated Zones.", "maxLength": 1024, "minLength": 1, "type": "string"}, "Name": {"description": "The name of the Domain.", "maxLength": 256, "minLength": 1, "type": "string"}, "Services": {"description": "The name of the related Services.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": ["array", "null"]}, {"additionalProperties": false, "properties": {"UnifiedCommunicationsStatus": {"description": "Return the status of Unified Communications mode, is it enabled or not.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": "object"}]}
  description: Fetches Unified Communications Domains details
/status/common/unifiedCommunications/neighbourZone: &id104
  GET:
    body: {}
    description: Fetches Unified Communications Neighbour Zones details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"type": "object"}, "properties": {"PeerAddress": {"description": "Return the name of the peer address associated with Neighbour Zone.", "maxLength": 256, "minLength": 1, "type": "string"}, "Status": {"description": "Return the status of Neighbour Zone.", "maxLength": 256, "minLength": 1, "type": "string"}, "ZoneName": {"description": "The name of the Neighbour Zone", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": ["array", "null"]}
  description: Fetches Unified Communications Neighbour Zones Status details
/status/common/unifiedCommunications/servers: &id105
  GET:
    body: {}
    description: Fetches Unified Communications Servers details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"oneOf": [{"additionalProperties": false, "properties": {"IMPresenceService": {"description": "Number of currently found IM and Presence Service nodes", "maximum": 256, "minimum": 0, "type": "integer"}, "UnifiedCMservers": {"description": "Number of currently found Unified CM nodes", "maximum": 256, "minimum": 0, "type": "integer"}, "UnityConnectionServers": {"description": "Number of currently found Unity Connection Servers", "maximum": 256, "minimum": 0, "type": "integer"}}, "type": "object"}, {"additionalProperties": false, "properties": {"JabberGuest": {"description": "Number of currently found Jabber Guest Servers", "maximum": 256, "minimum": 0, "type": "integer"}}, "type": "object"}, {"additionalProperties": false, "type": "null"}, {"additionalProperties": false, "properties": {"UnifiedCommunicationsStatus": {"description": "Return the status of Unified Communications mode, is it enabled or not.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": "object"}]}
  description: Fetches Unified Communications Servers details
/status/common/unifiedCommunications/sshTunnel: &id106
  GET:
    body: {}
    description: Fetches Unified Communications SSH Tunnels details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"oneOf": [{"additionalProperties": false, "items": {"type": "object"}, "properties": {"Domain": {"description": "Return the name of Domain.", "maxLength": 256, "minLength": 1, "type": "string"}, "Status": {"description": "Return the status of SSH tunnels.", "maxLength": 256, "minLength": 1, "type": "string"}, "Target": {"description": "Return the name of the target, connected expressway.", "maxLength": 1024, "minLength": 1, "type": "string"}, "TunnelCreated": {"description": "Return the time when the connection was created.", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": ["array", "null"]}, {"additionalProperties": false, "properties": {"UnifiedCommunicationsStatus": {"description": "Return the status of Unified Communications mode, is it enabled or not.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": "object"}]}
  description: Fetches Unified Communications SSH Tunnels Status details
/status/common/unifiedCommunications/zones: &id107
  GET:
    body: {}
    description: Fetches Unified Communications Zones details
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"oneOf": [{"additionalProperties": false, "items": {"type": "object"}, "properties": {"Name": {"description": "The name of the Zone.", "maxLength": 256, "minLength": 1, "type": "string"}, "SIPstatus": {"description": "SIP status of the zone.", "maxLength": 256, "minLength": 1, "type": "string"}, "Type": {"description": "Type of the zone.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": ["array", "null"]}, {"additionalProperties": false, "properties": {"UnifiedCommunicationsStatus": {"description": "Return the status of Unified Communications mode, is it enabled or not.", "maxLength": 256, "minLength": 1, "type": "string"}}, "type": "object"}]}
  description: Fetches Unified Communications Zones details
/status/common/upgradestatus: &id108
  GET:
    body: {}
    description: Read upgrade status from status file
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"Reason": {"description": "Reason for upgrade failure", "maxLength": 1024, "minLength": 1, "type": "string"}, "StatusUpdateTime": {"description": "Time at which the upgrade status was updated", "maxLength": 1024, "minLength": 1, "type": "string"}, "UpgradeStatus": {"description": "Status of the upgrade", "maxLength": 1024, "minLength": 1, "type": "string"}}, "type": "object"}, "required": ["UpgradeStatus"], "type": ["array"]}
  description: Facilitates read operation of Upgrade Status
/status/common/zone: &id109
  GET:
    body: {}
    description: Getting zones status data
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"Bandwidth": {"description": "Bandwidth used in the zone", "maximum": 65535, "minimum": 0, "type": "integer"}, "Calls": {"description": "Number of calls", "maximum": 65535, "minimum": 0, "type": "integer"}, "H323Status": {"default": "Off", "description": "Shows if H323 is enabled or disabled in the zone", "type": "string"}, "Name": {"description": "Name of the zone", "maxLength": 50, "minLength": 1, "type": "string"}, "SIPStatus": {"default": "Off", "description": "Shows if SIP is enabled or disabled in the zone", "type": "string"}, "SearchRuleStatus": {"default": "Disabled", "description": "Shows if Search rule is enabled or if there is no search rules configured", "type": "string"}, "Type": {"description": "Type of the zone", "maxLength": 50, "minLength": 1, "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: Get current zones statuses
/status/controller/ICEPassthroughMetrics: &id110
  GET:
    body: {}
    description: Fetches ICE Passthrough metrics
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"B2BUAConnectedCalls": {"default": 0, "description": "Number of calls processed and connected using the Expressway-C B2BUA.", "type": "integer"}, "CallsAttemptedWithOfferedICECandidates": {"default": "N/A", "description": "The number of calls connected using the Expressway-C B2BUA through ingress and egress zones configured for ICE Passthrough for which both endpoints offered ICE candidates. This count is irrespective of whether optimized media paths were used during the call.", "type": "string"}, "CallsWithICECandidatesOfferedByOneEndpoint": {"default": "N/A", "description": "The number of calls connected using the Expressway-C B2BUA through ingress and egress zones configured for ICE Passthrough for which only one endpoint offered ICE candidates.", "type": "string"}, "CallsWithICECandidatesOfferedWithoutRequiredExpresswayICEConfiguration": {"default": "N/A", "description": "The number of calls for which media paths were not optimized because ingress or egress zones were NOT configured for ICE Passthrough. However, one or both of the endpoints offered ICE candidates.", "type": "string"}, "CallsWithNonOptimizedMediaPaths": {"default": "N/A", "description": "The number of calls connected using the Expressway-C B2BUA through ingress and egress zones configured for ICE Passthrough for which ICE negotiation was not completed successfully.", "type": "string"}, "CallsWithOptimizedICEMediaPaths": {"default": 0, "description": "The number of calls for which media paths were optimized. That is, the calls were connected using the Expressway-C B2BUA, both endpoints offered ICE candidates, and optimized media paths were used after successful ICE Passthrough negotiation.", "type": "integer"}, "CallsWithRequiredExpresswayICEConfiguration ": {"default": "N/A", "description": "The number of calls connected using the Expressway-C B2BUA through ingress and egress zones configured for ICE Passthrough. This count is irrespective of whether endpoints were able to offer ICE candidates and whether optimized media paths were used. For ICE negotiation to be successful, the following must be enabled for both zones:ICE PassthroughTLS modeEncryption mode", "type": "string"}, "CallsWithoutICECandidates": {"default": "N/A", "description": "The number of calls connected using the Expressway-C B2BUA through ingress and egress zones configured for ICE Passthrough for which neither endpoint offered ICE candidates.", "type": "string"}, "EndTime": {"description": "The end date and time of the last ICE Passthrough metric collection.", "maxLength": 1024, "minLength": 0, "type": "string"}, "HostToHost": {"default": "N/A", "description": "Percentage of ICE Passthrough calls that were successfully negotiated as Host-to-Host calls.", "type": "string"}, "HostToRelay": {"default": "N/A", "description": "Percentage of ICE Passthrough calls that were successfully negotiated as Host-to-Relay calls.", "type": "string"}, "HostToServerReflexive": {"default": "N/A", "description": "Percentage of ICE Passthrough calls that were successfully negotiated as Host-to-Server Reflexive calls.", "type": "string"}, "PctOfCallsWithOptimizedICEMediaPaths": {"default": "N/A", "description": "The percentage of calls for which media paths were optimized.", "type": "string"}, "Peer": {"description": "The IP address or FQDN of the cluster peer.", "maxLength": 1024, "minLength": 0, "type": "string"}, "RelayToRelay": {"default": "N/A", "description": "Percentage of ICE Passthrough calls that were successfully negotiated as Relay-to-Relay calls.", "type": "string"}, "ServerReflexiveToRelay ": {"default": "N/A", "description": "Percentage of ICE Passthrough calls that were successfully negotiated as Server Reflexive-to-Relay calls.", "type": "string"}, "ServerReflexiveToServerReflexive ": {"default": "N/A", "description": "Percentage of ICE Passthrough calls that were successfully negotiated as Server Reflexive-to-Server Reflexive calls.", "type": "string"}, "StartTime": {"description": "The start date and time of the last ICE Passthrough metric collection.", "maxLength": 1024, "minLength": 0, "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: Facilities the read of /status/globalstatistics/metrics/b2buaICEMetrics
/status/controller/UCProxyRequests: &id111
  GET:
    body: {}
    description: Fetches the UC proxy requests details.
    responses:
      200:
        body:
          application/json:
            schema: |-
              {"additionalProperties": false, "items": {"properties": {"Device": {"description": "Device ID", "type": "string"}, "ExpireTime": {"description": "Date and time of token expiration. If a token has expired, this parameter will have 'Expired'value.", "type": "string"}, "UnifiedCMServer": {"description": "UDS server", "type": "string"}, "UserAgent": {"description": "User agent", "type": "string"}, "Username": {"description": "Username", "type": "string"}}, "type": "object"}, "type": ["array"]}
  description: Facilities the read of UC proxy requests
/v1/provisioning/acme/providers: *id022
/v1/provisioning/acme/providers/<uuid>: *id023
/v1/provisioning/certs/acme/pendingcert: *id024
/v1/provisioning/certs/acme/pendingcert/deploy: *id025
/v1/provisioning/certs/acme/settings: *id026
/v1/provisioning/certs/generate_csr: *id027
/v1/provisioning/certs/hsmkey: *id028
/v1/provisioning/certs/root: *id029
/v1/provisioning/certs/server: *id030
/v1/provisioning/common/adminaccount/changepassword: *id031
/v1/provisioning/common/adminaccount/configuration: *id001
/v1/provisioning/common/adminaccount/configuration/name/<name>: *id001
/v1/provisioning/common/cluster: *id032
/v1/provisioning/common/cluster/addressmaps: *id002
/v1/provisioning/common/cluster/peers: *id003
/v1/provisioning/common/cluster/primary: *id004
/v1/provisioning/common/cluster/status: *id033
/v1/provisioning/common/credential: *id034
/v1/provisioning/common/current/active/firewallrules: *id035
/v1/provisioning/common/defaultlinks: *id036
/v1/provisioning/common/diagnosticlogging: *id037
/v1/provisioning/common/dns/dns: *id038
/v1/provisioning/common/dns/dnsperdomainserver: *id005
/v1/provisioning/common/dns/dnsperdomainserver/index/<index>: *id005
/v1/provisioning/common/dns/dnsserver: *id006
/v1/provisioning/common/dns/dnsserver/index/<index>: *id006
/v1/provisioning/common/domain: *id007
/v1/provisioning/common/domain/name/<name>: *id007
/v1/provisioning/common/fail2ban/configuration: *id039
/v1/provisioning/common/fail2ban/exemptions: *id040
/v1/provisioning/common/fail2ban/fail2banbannedaddress: *id041
/v1/provisioning/common/firewallrules/activation: *id042
/v1/provisioning/common/firewallrules/configuration: *id008
/v1/provisioning/common/firewallrules/configuration/index/<index>: *id008
/v1/provisioning/common/logging/certificationlogging: *id043
/v1/provisioning/common/logging/options: *id044
/v1/provisioning/common/logging/remotesyslogservers: *id045
/v1/provisioning/common/logging/systemmetrics: *id046
/v1/provisioning/common/maintenancemode: *id047
/v1/provisioning/common/mra: *id048
/v1/provisioning/common/networkinterface/ethernet: *id049
/v1/provisioning/common/networkinterface/ip/LAN: *id050
/v1/provisioning/common/networkinterface/ip/configuration: *id051
/v1/provisioning/common/networkinterface/staticroutes: *id052
/v1/provisioning/common/networklog: *id009
/v1/provisioning/common/networklog/level/<level>: *id009
/v1/provisioning/common/networklog/name/<name>: *id009
/v1/provisioning/common/protocol/sip: *id053
/v1/provisioning/common/protocol/sip/advanced: *id054
/v1/provisioning/common/protocol/sip/certrevokecheck: *id055
/v1/provisioning/common/protocol/sip/configuration: *id056
/v1/provisioning/common/protocol/sip/registrationcontrol: *id057
/v1/provisioning/common/qos: *id058
/v1/provisioning/common/searchrule: *id010
/v1/provisioning/common/searchrule/name/<name>: *id010
/v1/provisioning/common/serviceselect: *id059
/v1/provisioning/common/sftpconfig: *id060
/v1/provisioning/common/smartlicensing/action: *id061
/v1/provisioning/common/smartlicensing/cancelReservationRequest: *id062
/v1/provisioning/common/smartlicensing/generateReversationRequest: *id063
/v1/provisioning/common/smartlicensing/registerWithReservationAuthorizationCode: *id064
/v1/provisioning/common/smartlicensing/registration: *id065
/v1/provisioning/common/smartlicensing/returnReservation: *id066
/v1/provisioning/common/smartlicensing/transport: *id067
/v1/provisioning/common/snmp: *id068
/v1/provisioning/common/supportlog: *id011
/v1/provisioning/common/supportlog/level/<level>: *id011
/v1/provisioning/common/supportlog/name/<name>: *id011
/v1/provisioning/common/time/ntpserver: *id012
/v1/provisioning/common/time/ntpserver/index/<index>: *id012
/v1/provisioning/common/time/status: *id069
/v1/provisioning/common/time/timezone: *id070
/v1/provisioning/common/transform: *id013
/v1/provisioning/common/transform/priority/<priority>: *id013
/v1/provisioning/common/upgrade: *id071
/v1/provisioning/common/zone/dnszone: *id014
/v1/provisioning/common/zone/dnszone/name/<name>: *id014
/v1/provisioning/common/zone/neighborzone: *id015
/v1/provisioning/common/zone/neighborzone/name/<name>: *id015
/v1/provisioning/configuration/allowlist/autopaths: *id072
/v1/provisioning/configuration/allowlist/control: *id073
/v1/provisioning/configuration/allowlist/manualpaths: *id074
/v1/provisioning/controller/b2bua/microsoftinterop/configuration: *id075
/v1/provisioning/controller/b2bua/microsoftinterop/restartservice: *id076
/v1/provisioning/controller/b2bua/microsoftinterop/trustedhosts: *id016
/v1/provisioning/controller/b2bua/microsoftinterop/trustedhosts/index/<index>: *id016
/v1/provisioning/controller/b2bua/turnservers: *id017
/v1/provisioning/controller/b2bua/turnservers/index/<uuid>: *id017
/v1/provisioning/controller/server/cucm: *id077
/v1/provisioning/controller/server/imp: *id078
/v1/provisioning/controller/server/ucs: *id079
/v1/provisioning/controller/zone/traversalclient: *id018
/v1/provisioning/controller/zone/traversalclient/name/<name>: *id018
/v1/provisioning/controller/zone/unifiedcommunicationstraversal: *id019
/v1/provisioning/customnotification: *id020
/v1/provisioning/customnotification/alarm_id/<alarm_id>: *id020
/v1/provisioning/domaincerts/domain: *id080
/v1/provisioning/domaincerts/domain/<domain>: *id081
/v1/provisioning/domaincerts/domain/<domain>/acme/pendingcert: *id082
/v1/provisioning/domaincerts/domain/<domain>/acme/pendingcert/deploy: *id083
/v1/provisioning/domaincerts/domain/<domain>/acme/settings: *id084
/v1/provisioning/domaincerts/domain/<domain>/cert: *id085
/v1/provisioning/domaincerts/domain/<domain>/csr: *id086
/v1/provisioning/hsm/enroll: *id087
/v1/provisioning/hsm/mode: *id088
/v1/provisioning/hsm/module: *id089
/v1/provisioning/hsm/settings: *id090
/v1/provisioning/notification: *id091
/v1/provisioning/restart: *id092
/v1/provisioning/severitynotification: *id093
/v1/provisioning/sysinfo: *id094
/v1/status/common/alarms: *id021
/v1/status/common/alarms/status/<status>: *id021
/v1/status/common/call/call: *id095
/v1/status/common/diagnosticlogging: *id096
/v1/status/common/fail2banbannedaddress: *id097
/v1/status/common/hardware: *id098
/v1/status/common/smartlicensing/licensing: *id099
/v1/status/common/smartlicensing/usage: *id100
/v1/status/common/sysinfo: *id101
/v1/status/common/unifiedCommunications: *id102
/v1/status/common/unifiedCommunications/domains: *id103
/v1/status/common/unifiedCommunications/neighbourZone: *id104
/v1/status/common/unifiedCommunications/servers: *id105
/v1/status/common/unifiedCommunications/sshTunnel: *id106
/v1/status/common/unifiedCommunications/zones: *id107
/v1/status/common/upgradestatus: *id108
/v1/status/common/zone: *id109
/v1/status/controller/ICEPassthroughMetrics: *id110
/v1/status/controller/UCProxyRequests: *id111
